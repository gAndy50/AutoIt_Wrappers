;;;;;;;;;;;;;;;;;;;;;;;;
; SDL2 AutoIt3 Wrapper ;
; Wrapper by: Andy P.  ;
;Icy Viking Games      ;
;For AutoIt3           ;
;Copyright (c) 2022    ;
;;;;;;;;;;;;;;;;;;;;;;;;

;SDL 2 Flags - Note Hex values are converted to decimal values

#include-once

;Init Flags
Global Const $SDL_INIT_TIMER = 1
Global Const $SDL_INIT_AUDIO = 16
Global Const $SDL_INIT_VIDEO = 32
Global Const $SDL_INIT_JOYSTICK = 512
Global Const $SDL_INIT_HAPTIC = 4096
Global Const $SDL_INIT_GAMECONTROLLER = 8192
Global Const $SDL_INIT_EVENTS = 16384
Global Const $SDL_INIT_NOPARACHUTE = 1048576
Global Const $SDL_INIT_EVERYTHING = BitOR($SDL_INIT_TIMER, $SDL_INIT_AUDIO, $SDL_INIT_VIDEO, $SDL_INIT_EVENTS, $SDL_INIT_JOYSTICK, $SDL_INIT_HAPTIC,$SDL_INIT_GAMECONTROLLER)

;SDL2 Assert Flags
Global Enum $SDL_ASSERTION_RETRY, $SDL_ASSERTION_BREAK, $SDL_ASSERTION_ABORT, $SDL_ASSERTION_IGNORE, $SDL_ASSERTION_ALWAYS_IGNORE

;SDL2 Audio Flags
Global Const $SDL_AUDIO_MASK_BITSIZE = 255
Global Const $SDL_AUDIO_MASK_DATATYPE = 256
Global Const $SDL_AUDIO_MASK_ENDIAN = 4096
Global Const $SDL_AUDIO_MASK_SIGNED = 32768
Global Const $SDL_AUDIO_BITSIZE = $SDL_AUDIO_MASK_BITSIZE
Global Const $SDL_AUDIO_ISFLOAT = $SDL_AUDIO_MASK_DATATYPE
Global Const $SDL_AUDIO_ISBIGENDIAN = $SDL_AUDIO_MASK_ENDIAN
Global Const $SDL_AUDIO_ISSIGNED = $SDL_AUDIO_MASK_SIGNED
Global Const $SDL_AUDIO_ISINT = $SDL_AUDIO_ISFLOAT
Global Const $SDL_AUDIO_ISLITTLEENDIAN = -$SDL_AUDIO_ISBIGENDIAN
Global Const $SDL_AUDIO_ISUNSIGNED = -$SDL_AUDIO_ISSIGNED

;SDL2 Video Flags
Global Const $SDL_WINDOW_FULLSCREEN = 1
Global Const $SDL_WINDOW_OPENGL = 2
Global Const $SDL_WINDOW_SHOWN = 4
Global Const $SDL_WINDOW_HIDDEN = 8
Global Const $SDL_WINDOW_BORDERLESS = 16
Global Const $SDL_WINDOW_RESIZABLE = 32
Global Const $SDL_WINDOW_MINIMIZED = 64
Global Const $SDL_WINDOW_MAXIMIZED = 128
Global Const $SDL_WINDOW_INPUT_GRABBED = 256
Global Const $SDL_WINDOW_INPUT_FOCUS = 512
Global Const $SDL_WINDOW_MOUSE_FOCUS = 1024
Global Const $SDL_WINDOW_FULLSCREEN_DESKTOP = BitOR($SDL_WINDOW_FULLSCREEN, 256)
Global Const $SDL_WINDOW_FOREIGN = 2048
Global Const $SDL_WINDOW_HIGHDPI = 8192
Global Const $SDL_WINDOW_ALWAYS_ON_TOP = 32768

;Audio Flags Cont.
Global Const $AUDIO_U8 = 8
Global Const $AUDIO_S8 = 32776
Global Const $AUDIO_U16LSB = 16
Global Const $AUDIO_S16LSB = 32784
Global Const $AUDIO_U16MSB = 4112
Global Const $AUDIO_S16MSB = 36880
Global Const $AUDIO_U16 = $AUDIO_U16LSB
Global Const $AUDIO_S16 = $AUDIO_S16LSB

;Audio Flags Cont.
Global Const $AUDIO_S32LSB = 32800
Global Const $AUDIO_S32MSB = 36896
Global Const $AUDIO_S32 = $AUDIO_S32LSB

;Audio Flags Cont.
Global Const $AUDIO_F32LSB = 33056
Global Const $AUDIO_F32MSB = 37152
Global Const $AUDIO_F32 = $AUDIO_F32LSB

;Audio Flags Cont.
Global Const $AUDIO_U16SYS = $AUDIO_U16LSB
Global Const $AUDIO_S16SYS = $AUDIO_S16LSB
Global Const $AUDIO_S32SYS = $AUDIO_S32LSB
Global Const $AUDIO_F32SYS = $AUDIO_F32LSB

Global Const $SDL_AUDIO_ALLOW_FREQUENCY_CHANGE = 1
Global Const $SDL_AUDIO_ALLOW_FORMAT_CHANGE = 2
Global Const $SDL_AUDIO_ALLOW_CHANNELS_CHANGE = 4
Global Const $SDL_AUDIO_ALLOW_ANY_CHANGE = BitOR($SDL_AUDIO_ALLOW_FREQUENCY_CHANGE,$SDL_AUDIO_ALLOW_FORMAT_CHANGE,$SDL_AUDIO_ALLOW_CHANNELS_CHANGE)

Global Enum $SDL_AUDIO_STOPPED, $SDL_AUDIO_PLAYING, $SDL_AUDIO_PAUSED

Global Const $SDL_MIX_MAXVOLUME = 128

;SDL2 Joystick Flags
Global Const $SDL_JOYSTICK_AXIS_MAX = 32767
Global Const $SDL_JOYSTICK_AXIS_MIN = -32768

;SDL2 Blend Flags
Global Enum $SDL_BLENDMODE_NONE, $SDL_BLENDMODE_BLEND,$SDL_BLENDMODE_ADD,$SDL_BLENDMODE_MOD = 4

Global Enum $SDL_BLENDOPERATION_ADD = 1, $SDL_BLENDOPERATION_SUBTRACT, $SDL_BLENDOPERATION_REV_SUBTRACT,$SDL_BLENDOPERATION_MINIMUM,$SDL_BLENDOPERATION_MAXIMUM

Global Enum $SDL_BLENDFACTOR_ZERO = 1, $SDL_BLENDFACTOR_ONE, $SDL_BLENDFACTOR_SRC_COLOR, $SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR, $SDL_BLENDFACTOR_SRC_ALPHA, $SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA, $SDL_BLENDFACTOR_DST_COLOR, $SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR, $SDL_BLENDFACTOR_DST_ALPHA, $SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA

Global Const $SDL_CACHELINE_SIZE = 128

;SDL2 Misc Flags
Global Const $SDL_LIL_ENDIAN = 1234
Global Const $SDL_BIG_ENDIAN = 4321

Global Enum $SDL_ENOMEM, $SDL_EFREAD, $SDL_EFWRITE, $SDL_EFSEEK, $SDL_UNSUPPORTED, $SDL_LASTERROR

Global Const $SDL_RELEASED = 0
Global Const $SDL_PRESSED = 1

;SDL2 Event Flags
Global Enum $SDL_FIRSTEVENT, $SDL_QUIT = 256, $SDL_APP_TERMINATING, $SDL_APP_LOWMEMORY, $SDL_APP_WILLENTERBACKGROUND, $SDL_DIDENTERBACKGROUND, $SDL_APP_WILLENTERFOREGROUND, $SDL_APP_DIDENTERFOREGROUND
Global Enum $SDL_WINDOWEVENT = 512, $SDL_SYSWMEVENT
Global Enum $SDL_KEYDOWN = 768, $SDL_KEYUP, $SDL_TEXTEDITING, $SDL_TEXTINPUT
Global Enum $SDL_MOUSEMOTION = 1024, $SDL_MOUSEBUTTONDOWN, $SDL_MOUSEBUTTONUP, $SDL_MOUSEWHEEL
Global Enum $SDL_JOYAXISMOTION = 1536, $SDL_JOYBALLMOTION, $SDL_JOYHATMOTION, $SDL_JOYBUTTONDOWN, $SDL_JOYBUTTONUP, $SDL_JOYDEVICEADDED, $SDL_JOYDEVICEREMOVED
Global Enum $SDL_CONTROLLERAXISMOTION = 1616, $SDL_CONTROLLERBUTTONDOWN, $SDL_CONTROLLERBUTTONUP, $SDL_CONTROLLERDEVICEADDED, $SDL_CONTROLLERDEVICEREMOVED, $SDL_CONTROLLERDEVICEREMAPPED
Global Enum $SDL_FINGERDOWN = 1792, $SDL_FINGERUP, $SDL_FINGERMOTION
Global Enum $SDL_DOLLARGESTURE = 2048, $SDL_DOLLARRECORD, $SDL_MULTIGESTURE
Global Enum $SDL_CLIPBOARDUPDATE = 2304, $SDL_DROPFILE = 4096, $SDL_RENDER_TARGETS_RESET = 8192, $SDL_USEREVENT = 32768, $SDL_LASTEVENT = 65535

Global Enum $SDL_ADDEVENT, $SDL_PEEKEVENT, $SDL_GETEVENT

Global Const $SDL_QUERY = -1
Global Const $SDL_IGNORE = 0
Global Const $SDL_DISABLE = 0
Global Const $SDL_ENABLE = 1

;Gamecontroller flags
Global Enum $SDL_CONTROLLER_BINDTYPE_NONE, $SDL_CONTROLLER_BINDTYPE_BUTTON, $SDL_CONTROLLER_BINDTYPE_AXIS, $SDL_CONTROLLER_BINDTYPE_HAT

Global Enum $SDL_CONTROLLER_AXIS_INVALID = -1, $SDL_CONTROLLER_AXIS_LEFTX,$SDL_CONTROLLER_AXIS_LEFTY,$SDL_CONTROLLER_RIGHTX,$SDL_CONTROLLER_RIGHTY,$SDL_CONTROLLER_AXIS_TRIGGERLEFT,$SDL_CONTROLLER_AXIS_TRIGGERRIGHT,$SDL_CONTROLLER_AXIS_MAX

Global Enum $SDL_CONTROLLER_BUTTON_INVALID = -1, $SDL_CONTROLLER_BUTTON_A,$SDL_CONTROLLER_BUTTON_B,$SDL_CONTROLLER_BUTTON_X,$SDL_CONTROLLER_BUTTON_Y,$SDL_CONTROLLER_BUTTON_BACK,$SDL_CONTROLLER_BUTTON_GUIDE,$SDL_CONTROLLER_BUTTON_START,$SDL_CONTROLLER_BUTTON_LEFTSTICK,$SDL_CONTROLLER_BUTTON_RIGHTSTICK, $SDL_CONTROLLER_BUTTON_LEFTSHOULDER,$SDL_CONTROLLER_BUTTON_RIGHTSHOULDER,$SDL_CONTROLLER_BUTTON_DPAD_UP,$SDL_CONTROLLER_BUTTON_DPAD_DOWN,$SDL_CONTROLLER_BUTTON_DPAD_LEFT,$SDL_CONTROLLER_BUTTON_DPAD_RIGHT,$SDL_CONTROLLER_BUTTON_MAX

;Haptic(rumble) flags
Global Const $SDL_HAPTIC_CONSTANT = 0
Global Const $SDL_HAPTIC_SINE = 2
Global Const $SDL_HAPTIC_LEFTRIGHT = 4
Global Const $SDL_HAPTIC_TRIANGLE = 8
Global Const $SDL_HAPTIC_SAWTOOTUP = 16
Global Const $SDL_HAPTIC_SAWTOOTHDOWN = 32
Global Const $SDL_HAPTIC_RAMP = 64
Global Const $SDL_HAPTIC_SPRING = 128
Global Const $SDL_HAPTIC_DAMPER = 256
Global Const $SDL_HAPTIC_INERTIA = 512
Global Const $SDL_HAPTIC_FRICTION = 1024
Global Const $SDL_HAPTIC_CUSTOM = 2048
Global const $SDL_HAPTIC_GAIN = 4096
Global Const $SDL_HAPTIC_AUTOCENTER = 8192
Global Const $SDL_HAPTIC_STATUS = 16384
Global Const $SDL_HAPTIC_PAUSE = 32768
Global Const $SDL_HAPTIC_POLAR = 0
Global const $SDL_HAPTIC_CARTESIAN = 1
Global Const $SDL_HAPTIC_SPHERICAL = 2
Global Const $SDL_HAPTIC_INFINITY = 285960729237

Global Enum $SDL_HINT_DEFAULT, $SDL_HINT_NORMAL, $SDL_HINT_OVERRIDE

;joystick flags
Global Const $SDL_HAT_CENTERED = 0
Global Const $SDL_HAT_UP = 1
Global Const $SDL_HAT_RIGHT = 2
Global Const $SDL_HAT_DOWN = 4
Global Const $SDL_HAT_LEFT = 8
Global const $SDL_RIGHTUP = BitOR($SDL_HAT_RIGHT,$SDL_HAT_UP)
Global Const $SDL_RIGHTDOWN = BitOR($SDL_HAT_RIGHT,$SDL_HAT_DOWN)
Global Const $SDL_LEFTUP = BitOR($SDL_HAT_LEFT,$SDL_HAT_UP)
Global Const $SDL_LEFTDOWN = BitOR($SDL_HAT_LEFT,$SDL_HAT_DOWN)

Global Const $SDLK_SCANCODE_MASK = 1073741824
Global Const $SDL_SCANCODE_TO_KEYCODE = $SDLK_SCANCODE_MASK

;Keycode Flags (in the C code it is declared as a enum, due to the way enums are handled in AutoIt, I'll be
               ;declaring them as global consts to make it easier)

Global Const $SDL_SCANCODE_UNKNOWN = 0
Global Const $SDL_SCANCODE_A = 4
Global Const $SDL_SCANCODE_B = 5
Global Const $SDL_SCANCODE_C = 6
Global Const $SDL_SCANCODE_D = 7
Global Const $SDL_SCANCODE_E = 8
Global Const $SDL_SCANCODE_F = 9
Global Const $SDL_SCANCODE_G = 10
Global Const $SDL_SCANCODE_H = 11
Global Const $SDL_SCANCODE_I = 12
Global Const $SDL_SCANCODE_J = 13
Global Const $SDL_SCANCODE_K = 14
Global Const $SDL_SCANCODE_L = 15
Global Const $SDL_SCANCODE_M = 16
Global Const $SDL_SCANCODE_N = 17
Global Const $SDL_SCANCODE_O = 18
Global Const $SDL_SCANCODE_P = 19
Global Const $SDL_SCANCODE_Q = 20
Global Const $SDL_SCANCODE_R = 21
Global Const $SDL_SCANCODE_S = 22
Global Const $SDL_SCANCODE_T = 23
Global Const $SDL_SCANCODE_U = 24
Global Const $SDL_SCANCODE_V = 25
Global Const $SDL_SCANCODE_W = 26
Global Const $SDL_SCANCODE_X = 27
Global Const $SDL_SCANCODE_Y = 28
Global Const $SDL_SCANCODE_Z = 29

Global Const $SDL_SCANCODE_1 = 30
Global Const $SDL_SCANCODE_2 = 31
Global Const $SDL_SCANCODE_3 = 32
Global Const $SDL_SCANCODE_4 = 33
Global Const $SDL_SCANCODE_5 = 34
Global Const $SDL_SCANCODE_6 = 35
Global Const $SDL_SCANCODE_7 = 36
Global Const $SDL_SCANCODE_8 = 37
Global Const $SDL_SCANCODE_9 = 38
Global Const $SDL_SCANCODE_0 = 39

Global Const $SDL_SCANCODE_RETURN = 40
Global Const $SDL_SCANCODE_ESCAPE = 41
Global Const $SDL_SCANCODE_BACKSPACE = 42
Global Const $SDL_SCANCODE_TAB = 43
Global Const $SDL_SCANCODE_SPACE = 44

Global Const $SDL_SCANCODE_MINUS = 45
Global Const $SDL_SCANCODE_EQUALS = 46
Global Const $SDL_SCANCODE_LEFTBRACKET = 47
Global Const $SDL_SCANCODE_RIGHTBRACKET = 48
Global Const $SDL_SCANCODE_BACKSLASH = 49

Global Const $SDL_SCANCODE_NONUSHASH = 50

Global Const $SDL_SCANCODE_SEMICOLON = 51
Global Const $SDL_SCANCODE_APOSTROPHE = 52
Global Const $SDL_SCANCODE_GRAVE = 53

Global Const $SDL_SCANCODE_COMMA = 54
Global Const $SDL_SCANCODE_PERIOD = 55
Global Const $SDL_SCANCODE_SLASH = 56

Global Const $SDL_SCANCODE_CAPSLOCK = 57

Global Const $SDL_SCANCODE_F1 = 58
Global Const $SDL_SCANCODE_F2 = 59
Global Const $SDL_SCANCODE_F3 = 60
Global Const $SDL_SCANCODE_F4 = 61
Global Const $SDL_SCANCODE_F5 = 62
Global Const $SDL_SCANCODE_F6 = 63
Global Const $SDL_SCANCODE_F7 = 64
Global Const $SDL_SCANCODE_F8 = 65
Global Const $SDL_SCANCODE_F9 = 66
Global Const $SDL_SCANCODE_F10 = 67
Global Const $SDL_SCANCODE_F11 = 68
Global Const $SDL_SCANCODE_F12 = 69

Global Const $SDL_SCANCODE_PRINTSCREEN = 70
Global Const $SDL_SCANCODE_SCROLLLOCK = 71
Global Const $SDL_SCANCODE_PAUSE = 72
Global Const $SDL_SCANCODE_INSERT = 73

Global Const $SDL_SCANCODE_HOME = 74
Global Const $SDL_SCANCODE_PAGEUP = 75
Global Const $SDL_SCANCODE_DELETE = 76
Global Const $SDL_SCANCODE_END = 77
Global Const $SDL_SCANCODE_PAGEDOWN = 78
Global Const $SDL_SCANCODE_RIGHT = 79
Global Const $SDL_SCANCODE_LEFT = 80
Global Const $SDL_SCANCODE_DOWN = 81
Global Const $SDL_SCANCODE_UP = 82

Global Const $SDL_SCANCODE_NUMLOCKCLEAR = 83

Global Const $SDL_SCANCODE_KP_DIVIDE = 84
Global Const $SDL_SCANCODE_KP_MULTIPLY = 85
Global Const $SDL_SCANCODE_KP_MINUS = 86
Global Const $SDL_SCANCODE_KP_PLUS = 87
Global Const $SDL_SCANCODE_KP_ENTER = 88
Global Const $SDL_SCANCODE_KP_1 = 89
Global Const $SDL_SCANCODE_KP_2 = 90
Global Const $SDL_SCANCODE_KP_3 = 91
Global Const $SDL_SCANCODE_KP_4 = 92
Global Const $SDL_SCANCODE_KP_5 = 93
Global Const $SDL_SCANCODE_KP_6 = 94
Global Const $SDL_SCANCODE_KP_7 = 95
Global Const $SDL_SCANCODE_KP_8 = 96
Global Const $SDL_SCANCODE_KP_9 = 97
Global Const $SDL_SCANCODE_KP_0 = 98
Global Const $SDL_SCANCODE_KP_PERIOD = 99

Global Const $SDL_SCANCODE_NONUSBACKSLASH = 100

Global Const $SDL_SCANCODE_APPLICATION = 101
Global Const $SDL_SCANCODE_POWER = 102

Global Const $SDL_SCANCODE_KP_EQUALS = 103
Global Const $SDL_SCANCODE_F13 = 104
Global Const $SDL_SCANCODE_F14 = 105
Global Const $SDL_SCANCODE_F15 = 106
Global Const $SDL_SCANCODE_F16 = 107
Global Const $SDL_SCANCODE_F17 = 108
Global Const $SDL_SCANCODE_F18 = 109
Global Const $SDL_SCANCODE_F19 = 110
Global Const $SDL_SCANCODE_F20 = 111
Global Const $SDL_SCANCODE_F21 = 112
Global Const $SDL_SCANCODE_F22 = 113
Global Const $SDL_SCANCODE_F23 = 114
Global Const $SDL_SCANCODE_F24 = 115
Global Const $SDL_SCANCODE_EXECUTE = 116
Global Const $SDL_SCANCODE_HELP = 117
Global Const $SDL_SCANCODE_MENU = 118
Global Const $SDL_SCANCODE_SELECT = 119
Global Const $SDL_SCANCODE_STOP = 120
Global Const $SDL_SCANCODE_AGAIN = 121
Global Const $SDL_SCANCODE_UNDO = 122
Global Const $SDL_SCANCODE_CUT = 123
Global Const $SDL_SCANCODE_COPY = 124
Global Const $SDL_SCANCODE_PASTE = 125
Global Const $SDL_SCANCODE_FIND = 126
Global Const $SDL_SCANCODE_MUTE = 127
Global Const $SDL_SCANCODE_VOLUMEUP = 128
Global Const $SDL_SCANCODE_VOLUMEDOWN = 129
Global Const $SDL_SCANCODE_LOCKINGCAPSLOCK = 130
Global Const $SDL_SCANCODE_LOCKINGNUMLOCK = 131
Global Const $SDL_SCANCODE_LOCKINGSCROLLLOCK = 132

Global Const $SDL_SCANCODE_KP_COMMA = 133
Global Const $SDL_SCANCODE_KP_EQUALS400 = 134

Global Const $SDL_SCANCODE_INTERNATIONAL = 135

Global Const $SDL_SCANCODE_INTERNATIONAL2 = 136
Global Const $SDL_SCANCODE_INTERNATIONAL3 = 137
Global Const $SDL_SCANCODE_INTERNATIONAL4 = 138
Global Const $SDL_SCANCODE_INTERNATIONAL5 = 139
Global Const $SDL_SCANCODE_INTERNATIONAL6 = 140
Global Const $SDL_SCANCODE_INTERNATIONAL7 = 141
Global Const $SDL_SCANCODE_INTERNATIONAL8 = 142
Global Const $SDL_SCANCODE_INTERNATIONAL9 = 143
Global Const $SDL_SCANCODE_LANG1 = 144
Global Const $SDL_SCANCODE_LANG2 = 145
Global Const $SDL_SCANCODE_LANG3 = 146
Global Const $SDL_SCANCODE_LANG4 = 147
Global Const $SDL_SCANCODE_LANG5 = 148
Global Const $SDL_SCANCODE_LANG6 = 149
Global Const $SDL_SCANCODE_LANG7 = 150
Global Const $SDL_SCANCODE_LANG8 = 151
Global Const $SDL_SCANCODE_LANG9 = 152

Global Const $SDL_SCANCODE_ALTERASE = 153
Global Const $SDL_SCANCODE_SYSREQ = 154
Global Const $SDL_SCANCODE_CANCEL = 155
Global Const $SDL_SCANCODE_CLEAR = 156
Global Const $SDL_SCANCODE_PRIOR = 157
Global Const $SDL_SCANCODE_RETURN2 = 158
Global Const $SDL_SCANCODE_SEPARATOR = 159
Global Const $SDL_SCANCODE_OUT = 160
Global Const $SDL_SCANCODE_OPER = 161
Global Const $SDL_SCANCODE_CLEARAGAIN = 162
Global Const $SDL_SCANCODE_CRSEL = 163
Global Const $SDL_SCANCODE_EXSEL = 164

Global Const $SDL_SCANCODE_KP_00 = 176
Global Const $SDL_SCANCODE_KP_000 = 177
Global Const $SDL_SCANCODE_THOUNSANDSSEPARATOR = 178
Global Const $SDL_SCANCODE_DECIMALSEPARATOR = 179
Global Const $SDL_SCANCODE_CURRENCYUINT = 180
Global Const $SDL_SCANCODE_CURRENCYSUBUINT = 181
Global Const $SDL_SCANCODE_KP_LEFTPAREN = 182
Global Const $SDL_SCANCODE_KP_RIGHTPAREN = 183
Global Const $SDL_SCANCODE_KP_LEFTBRACE = 184
Global Const $SDL_SCANCODE_KP_RIGHTBRACE = 185
Global Const $SDL_SCANCODE_KP_TAB = 186
Global Const $SDL_SCANCODE_KP_BACKSPACE = 187
Global Const $SDL_SCANCODE_KP_A = 188
Global Const $SDL_SCANCODE_KP_B = 189
Global Const $SDL_SCANCODE_KP_C = 190
Global Const $SDL_SCANCODE_KP_D = 191
Global Const $SDL_SCANCODE_KP_E = 192
Global Const $SDL_SCANCODE_KP_F = 193
Global Const $SDL_SCANCODE_KP_XOR = 194
Global Const $SDL_SCANCODE_KP_POWER = 195
Global Const $SDL_SCANCODE_KP_PERCENT = 196
Global Const $SDL_SCANCODE_KP_LESS = 197
Global Const $SDL_SCANCODE_KP_GREATER = 198
Global Const $SDL_SCANCODE_KP_AMPERSAND = 199
Global Const $SDL_SCANCODE_KP_DBLAMPERSAND = 200
Global Const $SDL_SCANCODE_KP_VERTICALBAR = 201
Global Const $SDL_SCANCODE_KP_DBLVERTICALBAR = 202
Global Const $SDL_SCANCODE_KP_COLON = 203
Global Const $SDL_SCANCODE_KP_HASH = 204
Global Const $SDL_SCANCODE_KP_SPACE = 205
Global Const $SDL_SCANCODE_KP_AT = 206
Global Const $SDL_SCANCODE_KP_EXCLAM = 207
Global Const $SDL_SCANCODE_KP_MEMSTORE = 208
Global Const $SDL_SCANCODE_KP_MEMRECALL = 209
Global Const $SDL_SCANCODE_KP_MEMCLEAR = 210
Global Const $SDL_SCANCODE_KP_MEMADD = 211
Global Const $SDL_SCANCODE_KP_MEMSUBTRACT = 212
Global Const $SDL_SCANCODE_KP_MEMULTIPLY = 213
Global Const $SDL_SCANCODE_KP_MEMDIVIDE = 214
Global Const $SDL_SCANCODE_KP_PLUSMINUS = 215
Global Const $SDL_SCANCODE_KP_CLEAR = 216
Global Const $SDL_SCANCODE_KP_CLEARENTRY = 217
Global Const $SDL_SCANCODE_KP_BINARY = 218
Global Const $SDL_SCANCODE_KP_OCTAL = 219
Global Const $SDL_SCANCODE_KP_DECIMAL = 220
Global Const $SDL_SCANCODE_KP_HEXADECIMAL = 221

Global Const $SDL_SCANCODE_LCTRL = 224
Global Const $SDL_SCANCODE_LSHIFT = 225
Global Const $SDL_SCANCODE_LALT = 226
Global Const $SDL_SCANCODE_LGUI = 227
Global Const $SDL_SCANCODE_RCTRL = 228
Global Const $SDL_SCANCODE_RSHIFT = 229
Global Const $SDL_SCANCODE_RALT = 230
Global Const $SDL_SCANCODE_RGUI = 231

Global Const $SDL_SCANCODE_MODE = 257

Global Const $SDL_SCANCODE_AUDIONEXT = 258
Global Const $SDL_SCANCODE_AUDIOPREV = 259
Global Const $SDL_SCANCODE_AUDIOSTOP = 260
Global Const $SDL_SCANCODE_AUDIOPLAY = 261
Global Const $SDL_SCANCODE_AUDIOMUTE = 262
Global Const $SDL_SCANCODE_MEDIASELECT = 263
Global Const $SDL_SCANCODE_WWW = 264
Global Const $SDL_SCANCODE_MAIL = 265
Global Const $SDL_SCANCODE_CALCULATOR = 266
Global Const $SDL_SCANCODE_COMPUTER = 267
Global Const $SDL_SCANCODE_AC_SEARCH = 268
Global Const $SDL_SCANCODE_AC_HOME = 269
Global Const $SDL_SCANCODE_AC_BACK = 270
Global Const $SDL_SCANCODE_AC_FORWARD = 271
Global Const $SDL_SCANCODE_AC_STOP = 272
Global Const $SDL_SCANCODE_AC_REFRESH = 273
Global Const $SDL_SCANCODE_AC_BOOKMARKS = 274

Global Const $SDL_SCANCODE_BRIGHTNESSDOWN = 275
Global Const $SDL_SCANCODE_BRIGHTNESSUP = 276
Global Const $SDL_SCANCODE_DISPLAYSWITCH = 277

Global Const $SDL_SCANCODE_KBDILLUMTOGGLE = 278
Global Const $SDL_SCANCODE_KBDILLUMDOWN = 279
Global Const $SDL_SCANCODE_KBDILLUMUP = 280
Global Const $SDL_SCANCODE_EJECT = 281
Global Const $SDL_SCANCODE_SLEEP = 282

Global Const $SDL_SCANCODE_APP1 = 283
Global Const $SDL_SCANCODE_APP2 = 284

Global Const $SDL_NUM_SCANCODES = 512

;Note declared as enum in the C code, but using consts here
Global Const $SDLK_UNKNOWN = 0
Global Const $SDLK_RETURN = 1
Global Const $SDLK_ESCAPE = 2
Global Const $SDLK_BACKSPACE = 3
Global Const $SDLK_TAB = 4
Global Const $SDLK_SPACE = 5
Global Const $SDLK_EXCLAIM = 6
Global Const $SDLK_QUOTEDEBL = 7
Global Const $SDLK_HASH = 8
Global Const $SDLK_PERCENT = 9
Global Const $SDLK_DOLLAR = 10
Global Const $SDLK_AMPERSAND = 11
Global Const $SDLK_QUOTE = 12
Global Const $SDLK_LEFTPAREN = 13
Global Const $SDLK_RIGHTPAREN = 14
Global Const $SDLK_ASTERISK = 15
Global Const $SDLK_PLUS = 16
Global Const $SDLK_COMMA = 17
Global Const $SDLK_MINUS = 18
Global Const $SDLK_PERIOD = 19
Global Const $SDLK_SLASH = 20
Global Const $SDLK_0 = 21
Global Const $SDLK_1 = 22
Global Const $SDLK_2 = 23
Global Const $SDLK_3 = 24
Global Const $SDLK_4 = 25
Global Const $SDLK_5 = 26
Global Const $SDLK_6 = 27
Global Const $SDLK_7 = 28
Global Const $SDLK_8 = 29
Global Const $SDLK_9 = 30
Global Const $SDLK_COLON = 31
Global Const $SDLK_SEMICOLON = 32
Global Const $SDLK_LESS = 33
Global Const $SDLK_EQUALS = 34
Global Const $SDLK_GREATER = 35
Global Const $SDLK_QUESTION = 36
Global Const $SDLK_AT = 37
Global Const $SDLK_LEFTBRACKET = 38
Global Const $SDLK_BACKSLASH = 39
Global Const $SDLK_RIGHTBRACKET = 40
Global Const $SDLK_CARET = 41
Global Const $SDLK_UNDERSCORE = 42
Global Const $SDLK_BACKQUOTE = 43
Global Const $SDLK_a = 44
Global Const $SDLK_b = 45
Global Const $SDLK_c = 46
Global Const $SDLK_d = 47
Global Const $SDLK_e = 48
Global Const $SDLK_f = 49
Global Const $SDLK_g = 50
Global Const $SDLK_h = 51
Global Const $SDLK_i = 52
Global Const $SDLK_j = 53
Global Const $SDLK_k = 54
Global Const $SDLK_l = 55
Global Const $SDLK_m = 56
Global Const $SDLK_n = 57
Global Const $SDLK_o = 58
Global Const $SDLK_p = 59
Global Const $SDLK_q = 60
Global Const $SDLK_r = 61
Global Const $SDLK_s = 62
Global Const $SDLK_t = 63
Global Const $SDLK_u = 64
Global Const $SDLK_v = 65
Global Const $SDLK_w = 66
Global Const $SDLK_x = 67
Global Const $SDLK_y = 68
Global Const $SDLK_z = 69

Global Const $SDLK_CAPSLOCK = $SDL_SCANCODE_CAPSLOCK

Global Const $SDLK_F1 = $SDL_SCANCODE_F1
Global Const $SDLK_F2 = $SDL_SCANCODE_F2
Global Const $SDLK_F3 = $SDL_SCANCODE_F3
Global Const $SDLK_F4 = $SDL_SCANCODE_F4
Global Const $SDLK_F5 = $SDL_SCANCODE_F5
Global Const $SDLK_F6 = $SDL_SCANCODE_F6
Global Const $SDLK_F7 = $SDL_SCANCODE_F7
Global Const $SDLK_F8 = $SDL_SCANCODE_F8
Global Const $SDLK_F9 = $SDL_SCANCODE_F9
Global Const $SDLK_F10 = $SDL_SCANCODE_F10
Global Const $SDLK_F11 = $SDL_SCANCODE_F11
Global Const $SDLK_F12 = $SDL_SCANCODE_F12

Global Const $SDLK_PRINTSCREEN = $SDL_SCANCODE_PRINTSCREEN
Global Const $SDLK_SCROLLLOCK = $SDL_SCANCODE_SCROLLLOCK
Global Const $SDLK_PAUSE = $SDL_SCANCODE_PAUSE
Global Const $SDLK_INSERT = $SDL_SCANCODE_INSERT
Global Const $SDLK_HOME = $SDL_SCANCODE_HOME
Global Const $SDLK_PAGEUP = $SDL_SCANCODE_PAGEUP
Global Const $SDLK_DELETE = $SDL_SCANCODE_DELETE
Global Const $SDLK_END = $SDL_SCANCODE_END
Global Const $SDLK_PAGEDOWN = $SDL_SCANCODE_PAGEDOWN
Global Const $SDLK_RIGHT = $SDL_SCANCODE_RIGHT
Global Const $SDLK_LEFT = $SDL_SCANCODE_LEFT
Global Const $SDLK_DOWN = $SDL_SCANCODE_DOWN
Global Const $SDLK_UP = $SDL_SCANCODE_UP

Global Const $SDLK_NUMLOCKCLEAR = $SDL_SCANCODE_NUMLOCKCLEAR
Global Const $SDLK_KP_DIVIDE = $SDL_SCANCODE_KP_DIVIDE
Global Const $SDLK_KP_MULTIPLY = $SDL_SCANCODE_KP_MULTIPLY
Global Const $SDLK_KP_MINUS = $SDL_SCANCODE_KP_MINUS
Global Const $SDLK_KP_PLUS = $SDL_SCANCODE_KP_PLUS
Global Const $SDLK_KP_ENTER = $SDL_SCANCODE_KP_ENTER
Global Const $SDLK_KP_1 = $SDL_SCANCODE_KP_1
Global Const $SDLK_KP_2 = $SDL_SCANCODE_KP_2
Global Const $SDLK_KP_3 = $SDL_SCANCODE_KP_3
Global Const $SDLK_KP_4 = $SDL_SCANCODE_KP_4
Global Const $SDLK_KP_5 = $SDL_SCANCODE_KP_5
Global Const $SDLK_KP_6 = $SDL_SCANCODE_KP_6
Global Const $SDLK_KP_7 = $SDL_SCANCODE_KP_7
Global Const $SDLK_KP_8 = $SDL_SCANCODE_KP_8
Global Const $SDLK_KP_9 = $SDL_SCANCODE_KP_9
Global Const $SDLK_KP_0 = $SDL_SCANCODE_KP_0
Global Const $SDLK_KP_PERIOD = $SDL_SCANCODE_KP_PERIOD

Global Const $SDLK_APPLICATION = $SDL_SCANCODE_APPLICATION
Global Const $SDLK_POWER = $SDL_SCANCODE_POWER
;Global Const $SDLK_EQUALS = $SDL_SCANCODE_EQUALS ;Redeclaration?
Global Const $SDLK_F13 = $SDL_SCANCODE_F13
Global Const $SDLK_F14 = $SDL_SCANCODE_F14
Global Const $SDLK_F15 = $SDL_SCANCODE_F15
Global Const $SDLK_F16 = $SDL_SCANCODE_F16
Global Const $SDLK_F17 = $SDL_SCANCODE_F17
Global Const $SDLK_F18 = $SDL_SCANCODE_F18
Global Const $SDLK_F19 = $SDL_SCANCODE_F19
Global Const $SDLK_F20 = $SDL_SCANCODE_F20
Global Const $SDLK_F21 = $SDL_SCANCODE_F21
Global Const $SDLK_F22 = $SDL_SCANCODE_F22
Global Const $SDLK_F23 = $SDL_SCANCODE_F23
Global Const $SDLK_F24 = $SDL_SCANCODE_F24
Global Const $SDLK_EXECUTE = $SDL_SCANCODE_EXECUTE
Global Const $SDLK_HELP = $SDL_SCANCODE_HELP
Global Const $SDLK_MENU = $SDL_SCANCODE_MENU
Global Const $SDLK_SELECT = $SDL_SCANCODE_SELECT
Global Const $SDLK_STOP = $SDL_SCANCODE_STOP
Global Const $SDLK_AGAIN = $SDL_SCANCODE_AGAIN
Global Const $SDLK_UNDO = $SDL_SCANCODE_UNDO
Global Const $SDLK_CUT = $SDL_SCANCODE_CUT
Global Const $SDLK_COPY = $SDL_SCANCODE_COPY
Global Const $SDLK_PASTE = $SDL_SCANCODE_PASTE
Global Const $SDLK_FIND = $SDL_SCANCODE_FIND
Global Const $SDLK_MUTE = $SDL_SCANCODE_MUTE
Global Const $SDLK_VOLUMEUP = $SDL_SCANCODE_VOLUMEUP
Global Const $SDLK_VOLUMEDOWN = $SDL_SCANCODE_VOLUMEDOWN
Global Const $SDLK_KP_COMMA = $SDL_SCANCODE_KP_COMMA
Global Const $SDLK_KP_EQUALS400 = $SDL_SCANCODE_KP_EQUALS400

Global Const $SDLK_ALTERASE = $SDL_SCANCODE_ALTERASE
Global Const $SDLK_SYSREQ = $SDL_SCANCODE_SYSREQ
Global Const $SDLK_CANCEL = $SDL_SCANCODE_CANCEL
Global Const $SDLK_CLEAR = $SDL_SCANCODE_CLEAR
Global Const $SDLK_PRIOR = $SDL_SCANCODE_PRIOR
Global Const $SDLK_RETURN2 = $SDL_SCANCODE_RETURN2
Global Const $SDLK_SEPARATOR = $SDL_SCANCODE_SEPARATOR
Global Const $SDLK_OUT = $SDL_SCANCODE_OUT
Global Const $SDLK_OPER = $SDL_SCANCODE_OPER
Global Const $SDLK_CLEARAGAIN = $SDL_SCANCODE_CLEARAGAIN
Global Const $SDLK_CRSEL = $SDL_SCANCODE_CRSEL
Global Const $SDLK_EXSEL = $SDL_SCANCODE_EXSEL

Global Const $SDLK_KP_00 = $SDL_SCANCODE_KP_00
Global Const $SDLK_KP_000 = $SDL_SCANCODE_KP_000
Global Const $SDLK_THOUNSANDSSEPARATOR = $SDL_SCANCODE_THOUNSANDSSEPARATOR
Global Const $SDLK_DECIMALSEPARATOR = $SDL_SCANCODE_DECIMALSEPARATOR
Global Const $SDLK_CURRENCYUINT = $SDL_SCANCODE_CURRENCYUINT
Global Const $SDLK_CURRENCYSUBUNIT = $SDL_SCANCODE_CURRENCYSUBUINT
Global Const $SDLK_KP_LEFTPAREN = $SDL_SCANCODE_KP_LEFTPAREN
Global Const $SDLK_KP_LEFTBRACE = $SDL_SCANCODE_KP_LEFTBRACE
Global Const $SDLK_KP_RIGHTPAREN = $SDL_SCANCODE_KP_RIGHTPAREN
Global Const $SDLK_KP_RIGHTBRACE = $SDL_SCANCODE_KP_RIGHTBRACE
Global Const $SDLK_KP_TAB = $SDL_SCANCODE_KP_TAB
Global Const $SDLK_KP_BACKSPACE = $SDL_SCANCODE_KP_BACKSPACE
Global Const $SDLK_KP_A = $SDL_SCANCODE_KP_A
Global Const $SDLK_KP_B = $SDL_SCANCODE_KP_B
Global Const $SDLK_KP_C = $SDL_SCANCODE_KP_C
Global Const $SDLK_KP_D = $SDL_SCANCODE_KP_D
Global Const $SDLK_KP_E = $SDL_SCANCODE_KP_E
Global Const $SDLK_KP_F = $SDL_SCANCODE_KP_F
Global Const $SDLK_KP_XOR = $SDL_SCANCODE_KP_XOR
Global Const $SDLK_KP_POWER = $SDL_SCANCODE_KP_POWER
Global Const $SDLK_KP_PERCENT = $SDL_SCANCODE_KP_PERCENT
Global Const $SDLK_KP_LESS = $SDL_SCANCODE_KP_LESS
Global Const $SDLK_KP_GREATER = $SDL_SCANCODE_KP_GREATER
Global Const $SDLK_KP_AMPERSAND = $SDL_SCANCODE_KP_AMPERSAND
Global Const $SDLK_KP_DBLAMPERSAND = $SDL_SCANCODE_KP_DBLAMPERSAND
Global Const $SDLK_KP_VERTICALBAR = $SDL_SCANCODE_KP_VERTICALBAR
Global Const $SDLK_KP_DBLVERTICALBAR = $SDL_SCANCODE_KP_DBLVERTICALBAR
Global Const $SDLK_KP_COLON = $SDL_SCANCODE_KP_COLON
Global Const $SDLK_KP_HASH = $SDL_SCANCODE_KP_HASH
Global Const $SDLK_KP_SPACE = $SDL_SCANCODE_KP_SPACE
Global Const $SDLK_KP_AT = $SDL_SCANCODE_KP_AT
Global Const $SDLK_KP_EXCLAM = $SDL_SCANCODE_KP_EXCLAM
Global Const $SDLK_KP_MEMSTORE = $SDL_SCANCODE_KP_MEMSTORE
Global Const $SDLK_KP_MEMRECALL = $SDL_SCANCODE_KP_MEMRECALL
Global Const $SDLK_KP_MEMCLEAR = $SDL_SCANCODE_KP_MEMCLEAR
Global Const $SDLK_KP_MEMADD = $SDL_SCANCODE_KP_MEMADD
Global Const $SDLK_KP_MEMSUBSTRACT = $SDL_SCANCODE_KP_MEMSUBTRACT
Global Const $SDLK_KP_MEMMULTIPLY = $SDL_SCANCODE_KP_MEMULTIPLY
Global Const $SDLK_KP_MEMDIVIDE = $SDL_SCANCODE_KP_MEMDIVIDE
Global Const $SDLK_KP_PLUSMINUS = $SDL_SCANCODE_KP_PLUSMINUS
Global Const $SDLK_KP_CLEAR = $SDL_SCANCODE_KP_CLEAR
Global Const $SDLK_KP_CLEARENTRY = $SDL_SCANCODE_KP_CLEARENTRY
Global Const $SDLK_KP_BINARY = $SDL_SCANCODE_KP_BINARY
Global Const $SDLK_KP_OCTAL = $SDL_SCANCODE_KP_OCTAL
Global Const $SDLK_KP_DECIMAL = $SDL_SCANCODE_KP_DECIMAL
Global Const $SDLK_KP_HEXADECIMAL = $SDL_SCANCODE_KP_HEXADECIMAL

Global Const $SDLK_LCTRL = $SDL_SCANCODE_LCTRL
Global Const $SDLK_LSHFIT = $SDL_SCANCODE_LSHIFT
Global Const $SDLK_LALT = $SDL_SCANCODE_LALT
Global Const $SDLK_LGUI = $SDL_SCANCODE_LGUI
Global Const $SDLK_RCTRL = $SDL_SCANCODE_RCTRL
Global Const $SDLK_RSHIFT = $SDL_SCANCODE_RSHIFT
Global Const $SDLK_RALT = $SDL_SCANCODE_RALT
Global Const $SDLK_RGUI = $SDL_SCANCODE_RGUI

Global Const $SDLK_MODE = $SDL_SCANCODE_MODE

Global Const $SDLK_AUDIONEXT = $SDL_SCANCODE_AUDIONEXT
Global Const $SDLK_AUDIOPREV = $SDL_SCANCODE_AUDIOPREV
Global Const $SDLK_AUDIOSTOP = $SDL_SCANCODE_AUDIOSTOP
Global Const $SDLK_AUDIOPLAY = $SDL_SCANCODE_AUDIOPLAY
Global Const $SDLK_AUDIOMUTE = $SDL_SCANCODE_AUDIOMUTE
Global Const $SDLK_MEDIASELECT = $SDL_SCANCODE_MEDIASELECT
Global Const $SDLK_WWW = $SDL_SCANCODE_WWW
Global Const $SDLK_MAIL = $SDL_SCANCODE_MAIL
Global Const $SDLK_CALCULATOR = $SDL_SCANCODE_CALCULATOR
Global Const $SDLK_COMPUTER = $SDL_SCANCODE_COMPUTER
Global Const $SDLK_AC_SEARCH = $SDL_SCANCODE_AC_SEARCH
Global Const $SDLK_AC_HOME = $SDL_SCANCODE_AC_HOME
Global Const $SDLK_AC_FORWARD = $SDL_SCANCODE_AC_FORWARD
Global Const $SDLK_AC_STOP = $SDL_SCANCODE_AC_STOP
Global Const $SDLK_AC_REFRESH = $SDL_SCANCODE_AC_REFRESH
Global Const $SDLK_AC_BOOKMARKS = $SDL_SCANCODE_AC_BOOKMARKS

Global Const $SDLK_BRIGHTNESSDOWN = $SDL_SCANCODE_BRIGHTNESSDOWN
Global Const $SDLK_BRIGHTNESSUP = $SDL_SCANCODE_BRIGHTNESSUP
Global Const $SDLK_DISPLAYSWITCH = $SDL_SCANCODE_DISPLAYSWITCH
Global Const $SDLK_KBDILLUMTOGGLE = $SDL_SCANCODE_KBDILLUMTOGGLE
Global Const $SDLK_KBDILLUMDOWN = $SDL_SCANCODE_KBDILLUMDOWN
Global Const $SDLK_KBDILLUMUP = $SDL_SCANCODE_KBDILLUMUP
Global Const $SDLK_EJECT = $SDL_SCANCODE_EJECT
Global Const $SDLK_SLEEP = $SDL_SCANCODE_SLEEP

Global Const $KMOD_NONE = 0
Global Const $KMOD_LSHIFT = 1
Global Const $KMOD_RSHIFT = 2
Global Const $KMOD_LCTRL = 64
Global const $KMOD_RCTRL = 128
Global Const $KMOD_LALT = 256
Global Const $KMOD_RALT = 512
Global Const $KMOD_LGUI = 1024
Global Const $KMOD_RGUI = 2048
Global Const $KMOD_NUMS = 4096
Global Const $KMOD_CAPS = 8192
Global Const $KMOD_MODE = 16384
Global Const $KMOD_RESERVED = 32768

Global Const $KMOD_CTRL = BitOR($KMOD_LCTRL,$KMOD_RCTRL)
Global Const $KMOD_SHIFT = BitOR($KMOD_LSHIFT,$KMOD_RSHIFT)
Global Const $KMOD_ALT = BitOR($KMOD_LALT,$KMOD_RALT)
Global Const $KMOD_GUI = BitOR($KMOD_LGUI,$KMOD_RGUI)

;WindowShape Flags
Global Const $SDL_NONSHAPEABLE_WINDOW = -1
Global Const $SDL_INVALID_SHAPE_ARGUMENT = -2
Global Const $SDL_WINDOW_LACKS_SHAPE = -3

Global Const $SHAPE_MODE_FAULT = 0
Global Const $SHAPE_MODE_BINARIZE_ALPHA = 1
Global Const $SHAPE_MODE_REVERSE_BINARIZE_ALPHA = 2
Global Const $SHAPE_MODE_COLOR_KEY = 3

;Misc flags
Global Const $SDL_FALSE = 0
Global Const $SDL_TRUE = 1

Global Const $DUMMY_ENUM_VALUE = 0

Global Const $SDL_SWSURFACE = 0
Global Const $SDL_PREALLOC = 1
Global Const $SDL_RLEACCEL = 2
Global Const $SDL_DONTFREE = 4

Global Const $SDL_MUSTLOCK = $SDL_RLEACCEL

Global Enum $SDL_WINRT_PATH_INSTALLED_LOCATON, $SDL_WINRT_PATH_LOCAL_FOLDER, $SDL_WINRT_PATH_ROAMING_FOLDER, $SDL_WINRT_PATH_TEMP_FOLDER

Global Enum $SDL_SYSWM_UNKNOWN, $SDL_SYSWM_WINDOWS, $SDL_SYSWM_X11, $SDL_SYSWM_DIRECTFB, $SDL_SYSWM_COCOA, $SDL_SYSWM_UIKIT, $SDL_SYSWM_WAYLAND, $SDL_SYSWM_MIR, $SDL_SYSWM_WINRT

Global Const $SDLTEST_MAX_LOGMESSAGE_LENGTH = 3584

Global Const $ASSERT_FAIL = 0
Global Const $ASSERT_PASS = 1

Global Const $DEFAULT_WINDOW_WIDTH = 640
Global Const $DEFAULT_WINDOW_HEIGHT = 480

Global Const $VERBOSE_VIDEO = 1
Global Const $VERBOSE_MODES = 2
Global Const $VERBOSE_RENDER = 4
Global Const $VERBOSE_EVENT = 8
Global Const $VERBOSE_AUDIO = 16

Global Const $FONT_CHARACTER_SIZE = 8

Global Const $TEST_ENABLED = 1
Global Const $TEST_DISABLED = 0

Global Const $TEST_ABORTED = -1
Global Const $TEST_STARTED = 0
Global Const $TEST_COMPLETED = 1
Global Const $TEST_SKIPPED = 2

Global Const $TEST_RESULT_PASSED = 0
Global Const $TEST_RESULT_FAILED = 1
Global Const $TEST_RESULT_NO_ASSERT = 2
Global Const $TEST_RESULT_SKIPPED = 3
Global Const $TEST_RESULT_SETUP_FAILURE = 4

Global Enum $SDL_THREAD_PRIORITY_LOW, $SDL_THREAD_PRIORITY_NORMAL, $SDL_THREAD_PRIORITY_HIGH

Global Const $SDL_TOUCH_MOUSEID = -1

;SDL version flags
Global Const $SDL_MAJOR_VERSION = 2
Global Const $SDL_MINOR_VERSION = 0
Global Const $SDL_PATCHLEVEL = 10

;Window flags Cont.
Global Const $SDL_WINDOWPOS_UNDEFINED_MASK = 536805376
Global Const $SDL_WINDOWPOS_UNDEFINED_DISPLAY = $SDL_WINDOWPOS_UNDEFINED_MASK
Global Const $SDL_WINDOWPOS_UNDEFINED = $SDL_WINDOWPOS_UNDEFINED_DISPLAY
Global Const $SDL_WINDOWPOS_ISUNDEFINED = $SDL_WINDOWPOS_UNDEFINED_MASK

Global Const $SDL_WINDOWPOS_CENTERED_MASK = 805240832
Global Const $SDL_WINDOWPOS_CENTERED_DISPLAY = $SDL_WINDOWPOS_CENTERED_MASK
Global Const $SDL_WINDOWPOS_CENTERED = $SDL_WINDOWPOS_CENTERED_DISPLAY
Global Const $SDL_WINDOWPOS_ISCENTERED = $SDL_WINDOWPOS_CENTERED_MASK

;WindowEvent flags
Global Const $SDL_WINDOWEVENT_NONE = 0
Global Const $SDL_WINDOWEVENT_SHOWN = 1
Global Const $SDL_WINDOWEVENT_HIDDEN = 2
Global Const $SDL_WINDOWEVENT_EXPOSED = 3

Global Const $SDL_WINDOWEVENT_MOVED = 4

Global Const $SDL_WINDOWEVENT_RESIZED = 5
Global Const $SDL_WINDOWEVENT_SIZE_CHANGED = 6
Global Const $SDL_WINDOWEVENT_MINIMIZED = 7
Global Const $SDL_WINDOWEVENT_MAXIMIZED = 8
Global Const $SDL_WINDOWEVENT_RESTORED = 9

Global Const $SDL_WINDOWEVENT_ENTER = 10
Global Const $SDL_WINDOWEVENT_LEAVE = 11
Global Const $SDL_WINDOWEVENT_FOCUS_GAINED = 12
Global Const $SDL_WINDOWEVENT_FOCUS_LOST = 13
Global Const $SDL_WINDOWEVENT_CLOSE = 14

;GL flags
Global Const $SDL_GL_RED_SIZE = 0
Global Const $SDL_GL_GREEN_SIZE = 1
Global Const $SDL_GL_BLUE_SIZE = 2
Global Const $SDL_GL_ALPHA_SIZE = 3
Global Const $SDL_GL_BUFFER_SIZE = 4
Global Const $SDL_GL_DOUBLEBUFFER = 5
Global Const $SDL_GL_DEPTH_SIZE = 6
Global Const $SDL_GL_STENCIL_SIZE = 7
Global Const $SDL_GL_ACCUM_RED_SIZE = 8
Global Const $SDL_GL_ACCUM_GREEN_SIZE = 9
Global Const $SDL_GL_ACCUM_BLUE_SIZE = 10
Global Const $SDL_GL_ACCUM_ALPHA_SIZE = 11
Global Const $SDL_GL_STEREO = 12
Global Const $SDL_GL_MULTISAMPLEBUFFERS = 13
Global Const $SDL_GL_MULTISAMPLESAMPLES = 14
Global Const $SDL_GL_ACCELERATED_VISUAL = 15
Global Const $SDL_GL_RETAINED_BACKING = 16
Global Const $SDL_GL_CONTEXT_MAJOR_VERSION = 17
Global Const $SDL_GL_CONTEXT_MINOR_VERSION = 18
Global Const $SDL_GL_CONTEXT_EGL = 19
Global Const $SDL_GL_CONTEXT_FLAGS = 20
Global Const $SDL_GL_CONTEXT_PROFILE_MASK = 21
Global Const $SDL_GL_SHARE_WITH_CURRENT_CONTEXT = 22
Global Const $SDL_GL_FRAMEBUFFER_SRGB_CAPABLE = 23

;gl profile flags
Global Const $SDL_GL_CONTEXT_PROFILE_CORE = 1
Global Const $SDL_GL_CONTEXT_PROFILE_COMPATIBILITY = 2
Global Const $SDL_GL_CONTEXT_PROFILE_ES = 4

Global Const $SDL_GL_CONTEXT_DEBUG_FLAG = 1
Global Const $SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG = 2
Global Const $SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG = 4
Global Const $SDL_GL_CONTEXT_RESET_ISOLATION_FLAG = 8

;SDL RWOPs flags
Global Const $SDL_RWOPS_UNKNOWN = 0
Global Const $SDL_RWOPS_WINFILE = 1
Global Const $SDL_RWOPS_STDFILE = 2
Global Const $SDL_RWOPS_JNIFILE = 3
Global Const $SDL_RWOPS_MEMORY = 4
Global Const $SDL_RWOPS_MEMORY_RO = 5

Global Const $RW_SEEK_SET = 0
Global Const $RW_SEEK_CUR = 1
Global Const $RW_SEEK_END = 2

;Render flags
Global Const $SDL_RENDERER_SOFTWARE = 1
Global Const $SDL_RENDERER_ACCELERATED = 2
Global Const $SDL_RENDERER_PRESENTVSYNC = 4
Global Const $SDL_RENDERER_TARGETEXTURE = 8

Global Const $SDL_TEXTUREACCESS_STATIC = 0
Global Const $SDL_TEXTUREACESS_STREAMING = 1
Global Const $SDL_TEXTUREACESS_TARGET = 2

Global Const $SDL_TEXTUREMODULATE_NONE = 0
Global Const $SDL_TEXTUREMODULATE_COLOR = 1
Global Const $SDL_TEXTUREMODULATE_ALPHA = 2

Global Enum $SDL_FLIP_NONE, $SDL_FLIP_HORIZONTAL, $SDL_FLIP_VERTICAL

Global Enum $SDL_PIXELTYPE_UNKNOWN, $SDL_PIXELTYPE_INDEX1, $SDL_PIXELTYPE_INDEX4,$SDL_PIXELTYPE_INDEX8,$SDL_PIXELTYPE_PACKED8,$SDL_PIXELTYPE_PACKED16,$SDL_PIXELTYPE_PACKED32,$SDL_PIXELTYPE_ARRAYU8,$SDL_PIXELTYPE_ARRAYU16,$SDL_PIXELTYPE_ARRAYU32, $SDL_PIXELTYPE_ARRAYF16,$SDL_PIXELTYPE_ARRAYF32

Global Enum $SDL_BITMAPORDER_NONE, $SDL_BITMAPORDER_4321, $SDL_BITMAPORDER_1234

Global Enum $SDL_PACKEDORDER_NONE,$SDL_PACKEDORDER_XRGB,$SDL_PACKEDORDER_RGBX,$SDL_PACKEDORDER_ARGB,$SDL_PACKEDORDER_RGBA,$SDL_PACKEDORDER_XBGR,$SDL_PACKEDORDER_BGRX,$SDL_PACKEDORDER_ABGR,$SDL_PACKEDORDER_BGRA

Global Enum $SDL_ARRAYORDER_NONE,$SDL_ARRAYORDER_RGB,$SDL_ARRAYORDER_RGBA,$SDL_ARRAYORDER_ARGB,$SDL_ARRAYORDER_BGR,$SDL_ARRAYORDER_BGRA,$SDL_ARRAYORDER_ABGR

Global Enum $SDL_PACKEDLAYOUT_NONE,$SDL_PACKEDLAYOUT_332,$SDL_PACKEDLAYOUT_4444,$SDL_PACKEDLAYOUT_1555,$SDL_PACKEDLAYOUT_5551,$SDL_PACKEDLAYOUT_565,$SDL_PACKEDLAYOUT_8888,$SDL_PACKEDLAYOUT_2101010,$SDL_PACKEDLAYOUT_1010102

Global Enum $SDL_POWERSTATE_UNKNOWN,$SDL_POWERSTATE_ON_BATTERY,$SDL_POWERSTATE_NO_BATTERY,$SDL_POWERSTATE_CHARGING,$SDL_POWERSTATE_CHARGED

Global Enum $SDL_JOYSTICK_TYPE_UNKNOWN,$SDL_JOYSTICK_TYPE_GAMECONTROLLER,$SDL_JOYSTICK_TYPE_WHEEL,$SDL_JOYSTICK_TYPE_ARCADE_STICK,$SDL_JOYSTICK_TYPE_FLIGHT_STICK,$SDL_JOYSTICK_TYPE_DANCE_PAD,$SDL_JOYSTICK_TYPE_GUITAR,$SDL_JOYSTICK_DRUM_KIT,$SDL_JOYSTICK_ARCADE_PAD,$SDL_JOYSTICK_TYPE_THROTTLE

Global Enum $SDL_JOYSTICK_POWER_UNKNOWN = -1,$SDL_JOYSTICK_POWER_EMPTY,$SDL_JOYSTICK_POWER_LOW,$SDL_JOYSTICK_POWER_MEDIUM,$SDL_JOYSTICK_POWER_FULL,$SDL_JOYSTICK_POWER_WIRED,$SDL_JOYSTICK_POWER_MAX

Global Const $SDL_CONTROLLER_TYPE_UNKNOWN = 0
Global Const $SDL_CONTROLLER_TYPE_XBOX360 = 1
Global Const $SDL_CONTROLLER_TYPE_XBOXONE = 2
Global Const $SDL_CONTROLLER_TYPE_PS3 = 3
Global Const $SDL_CONTROLLER_TYPE_PS4 = 4
Global Const $SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_PRO = 5
Global Const $SDL_CONTROLLER_TYPE_VIRTUAL = 6
Global Const $SDL_CONTROLLER_TYPE_PS5 = 7
Global Const $SDL_CONTROLLER_TYPE_AMAZON_LUNA = 8
Global Const $SDL_CONTROLLER_TYPE_GOOGLE_STADIA = 9

Global Enum $SDL_FLASH_CANCEL = 0, $SDL_FLASH_BRIEFLY,$SDL_FLASH_UNTIL_FOCUSED

;Sensor flags
Global Const $SDL_DISPLAYEVENT = 336
Global Const $SDL_SENSOREVENT = 4608

Global Const $SDL_STANDARD_GRAVITY = 9.80665

;Open the SDL2 DLL
Global $SDL = 0 ;("SDL2.dll")

;Check to make sure SDL2 DLL is there
if $SDL = -1 Then
   MsgBox($MB_SYSTEMMODAL,"Error","Could not load SDL2.dll!\n")
EndIf

;Struct for SDL_RECT
Func SDL_Rect($x,$y,$w,$h)
   $xSDL_Rect = DllStructCreate("int;int;int;int")
   DllStructSetData($SDL_Rect,1,$x)
   DllStructSetData($SDL_Rect,2,$y)
   DllStructSetData($SDL_Rect,3,$w)
   DllStructSetData($SDL_Rect,4,$h)
   Return $xSDL_Rect
EndFunc

;SDL Init Functions
Func SDL_Init($flags)
   $SDL = DllOpen("SDL2.dll")
   If @error Then Return SetError(1, @error, -1)
   Local $xSDL_Init = DllCall($SDL,"int:cdecl","SDL_Init","uint", $flags)
   If @error Then Return SetError(1, @error, -1)
   Return $xSDL_Init[0]
EndFunc

Func SDL_InitSubSystem($flags)
  Local $xSDL_InitSubSystem = DllCall($SDL,"int:cdecl","SDL_InitSubSystem","uint", $flags)
   Return $xSDL_InitSubSystem[0]
EndFunc

Func SDL_Quit()
   $xSDL_Quit = DllCall($SDL,"none:cdecl","SDL_Quit")
    If @error Then Return SetError(1, @error, -1)
   ;Return $xSDL_Quit[0]
   DllClose($SDL)
EndFunc

Func SDL_QuitSubSystem($flags)
   $xSDL_QuitSubSystem = DllCall($SDL,"none:cdecl","SDL_QuitSubSystem","uint",$flags)
   ;Return $xSDL_QuitSubSystem[0]
EndFunc

Func SDL_SetMainReady()
   $xSDL_SetMainReady = DllCall($SDL,"none:cdecl","SDL_SetMainReady","")
   ;Return $xSDL_SetMainReady[0]
EndFunc

Func SDL_WasInit($flags)
   Local $xSDL_WasInit = DllCall($SDL,"uint:cdecl","SDL_WasInit","uint",$flags)
   Return $xSDL_WasInit[0]
EndFunc

Func SDL_WinRTRunApp($f,$r)
   Local $xSDL_WinRTRunApp = DllCall($SDL,"int:cdecl","SDL_WinRTRunApp","ptr",$f,"ptr",$r)
   Return $xSDL_WinRTRunApp[0]
EndFunc

;SDL Window Funcs
Func SDL_CreateWindow($title,$x,$y,$w,$h,$flags)
   Local $xSDL_CreateWindow = DllCall($SDL,"ptr:cdecl","SDL_CreateWindow","str",$title,"int",$x,"int",$y,"int",$w,"int",$h,"uint",$flags)
   If @error Then Return SetError(1, @error, -1)
   Return $xSDL_CreateWindow[0]
EndFunc

Func SDL_CreateWindowAndRenderer($w,$h,$flags,$win,$ren)
   Local $xSDL_CreateWindowAndRenderer = DllCall($SDL,"int:cdecl","SDL_CreateWindowAndRenderer","int",$w,"int",$h,"uint",$flags,"ptr",$win,"ptr",$ren)
   Return $xSDL_CreateWindowAndRenderer[0]
EndFunc

Func SDL_CreateWindowFrom($data)
   Local $xSDL_CreateWindowFrom = DllCall($SDL,"ptr:cdecl","SDL_CreateWindowFrom","ptr",$data)
   Return $xSDL_CreateWindowFrom[0]
EndFunc

Func SDL_DestroyWindow($win)
   $xSDL_DestroyWindow = DllCall($SDL,"none:cdecl","SDL_DestroyWindow","ptr",$win)
   ;Return $xSDL_DestroyWindow[0]
EndFunc

Func SDL_DisableScreenSaver()
   $xSDL_DisableScreenSaver = DllCall($SDL,"none:cdecl","SDL_DisableScreenSaver")
EndFunc

Func SDL_EnableScreenSaver()
   $xSDL_EnableScreenSaver = DllCall($SDL,"none:cdecl","SDL_EnableScreenSaver")
EndFunc

Func SDL_GL_CreateContext($win)
  Local $xSDL_GL_CreateContext = DllCall($SDL,"ptr:cdecl","SDL_GL_CreateContext","ptr",$win)
   Return $xSDL_GL_CreateContext[0]
EndFunc

Func SDL_GL_DeleteContext($context)
   $xSDL_GL_DeleteContext = DllCall($SDL,"none:cdecl","SDL_GL_DeleteContext","ptr",$context)
   Return $xSDL_GL_DeleteContext[0]
EndFunc

Func SDL_GL_ExtensionSupported($extension)
   Local $xSDL_GL_ExtensionSupported = DllCall($SDL,"bool:cdecl","SDL_GL_ExtensionSupported","ptr",$extension)
   Return $xSDL_GL_ExtensionSupported[0]
EndFunc

Func SDL_GL_GetAttribute($attr,$value)
   Local $xSDL_GL_GetAttribute = DllCall($SDL,"int:cdecl","SDL_GL_GetAttribute","ptr",$attr,"int",$value)
   Return $xSDL_GL_GetAttribute[0]
EndFunc

Func SDL_GL_GetCurrentContext()
   Local $xSDL_GL_GetCurrentContext = DllCall($SDL,"ptr:cdecl","SDL_GL_GetCurrentContext")
   Return $xSDL_GL_GetCurrentContext[0]
EndFunc

Func SDL_GL_GetCurrentWindow()
   Local $xSDL_GL_GetCurrentWindow = DllCall($SDL,"ptr:cdecl","SDL_GL_GetCurrentWindow"
   Return $xSDL_GL_GetCurrentWindow[0]
EndFunc

Func SDL_GL_GetDrawableSize($win,$w,$h)
   Local $xSDL_GL_GetDrawableSize = DllCall($SDL,"none:cdecl","SDL_GL_GetDrawableSize","ptr",$win,"ptr",$w,"ptr",$h)
   Return $xSDL_GL_GetDrawableSize[0]
EndFunc

Func SDL_GL_GetProcAddress($proc)
  Local $xSDL_GL_GetProcAddress = DllCall($SDL,"ptr:cdecl","SDL_GL_GetProcAddress","ptr",$proc)
   Return $xSDL_GL_GetProcAddress[0]
EndFunc

Func SDL_GL_GetSwapInterval()
   Local $xSDL_GL_GetSwapInterval = DllCall($SDL,"int:cdecl","SDL_GL_GetSwapInterval")
   Return $xSDL_GL_GetSwapInterval[0]
EndFunc

Func SDL_GL_LoadLibrary($path)
   Local $xSDL_GL_LoadLibrary = DllCall($SDL,"int:cdecl","SDL_GL_LoadLibrary","ptr",$path)
   Return $xSDL_GL_LoadLibrary[0]
EndFunc

Func SDL_GL_MakeCurrent($win,$context)
   Local $xSDL_GL_MakeCurrent = DllCall($SDL,"int:cdecl","SDL_GL_MakeCurrent","ptr",$win,"ptr",$context)
   Return $xSDL_GL_MakeCurrent[0]
EndFunc

Func SDL_GL_ResetAttributes()
   $xSDL_GL_ResetAttributes = DllCall($SDL,"none:cdecl","SDL_GL_ResetAttributes")
   Return $xSDL_GL_ResetAttributes[0]
EndFunc

Func SDL_GL_SetAttribute($attr,$value)
   Local $xSDL_GL_SetAttribute = DllCall($SDL,"int:cdecl","SDL_GL_SetAttribute","ptr",$attr,"int",$value)
   Return $xSDL_GL_SetAttribute[0]
EndFunc

Func SDL_GL_SetSwapInterval($interval)
   Local $xSDL_GL_SetSwapInterval = DllCall($SDL,"int:cdecl","SDL_GL_SetSwapInterval","int",$interval)
   Return $xSDL_GL_SetSwapInterval[0]
EndFunc

Func SDL_GL_SwapWindow($win)
   $xSDL_GL_SwapWindow = DllCall($SDL,"none:cdecl","SDL_GL_SwapWindow","ptr",$win)
   Return $xSDL_GL_SwapWindow[0]
EndFunc

Func SDL_GL_UnloadLibrary()
   $xSDL_GL_UnloadLibrary = DllCall($SDL,"none:cdecl","SDL_GL_UnloadLibrary")
   Return $xSDL_GL_UnloadLibrary[0]
EndFunc

Func SDL_GetClosestDisplayMode($display,$mode,$closest)
   Local $xSDL_GetClosestDisplayMode = DllCall($SDL,"ptr:cdecl","SDL_GetClosestDisplayMode","int",$display,"ptr",$mode,"ptr",$closest)
   Return $xSDL_GetClosestDisplayMode[0]
EndFunc

Func SDL_GetCurrentDisplayMode($display,$mode)
  Local $xSDL_GetCurrentDisplayMode = DllCall($SDL,"int:cdecl","SDL_GetCurrentDisplayMode","int",$display,"ptr",$mode)
   Return $xSDL_GetCurrentDisplayMode[0]
EndFunc

Func SDL_GetCurrentVideoDriver()
   $xSDL_GetCurrentVideoDriver = DllCall($SDL,"ptr:cdecl","SDL_GetCurrentVideoDriver")
   Return $xSDL_GetCurrentVideoDriver[0]
EndFunc

Func SDL_GetDesktopDisplayMode($display,$mode)
   Local $xSDL_GetDesktopDisplayMode = DllCall($SDL,"int:cdecl","SDL_GetDesktopDisplayMode","int",$display,"ptr",$mode)
   Return $xSDL_GetDesktopDisplayMode[0]
EndFunc

Func SDL_GetDisplayBounds($display,$xSDL_Rect)
  Local $xSDL_GetDesktopDisplayMode = DllCall($SDL,"int:cdecl","SDL_GetDisplayBounds","int",$display,"ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_GetDesktopDisplayMode[0]
EndFunc

Func SDL_GetDisplayDPI($display,$ddpi,$hdpi,$vdpi)
  Local $xSDL_GetDisplayDPI = DllCall($SDL,"int:cdecl","SDL_GetDisplayDPI","int",$display,"ptr",$ddpi,"ptr",$hdpi,"ptr",$vdpi)
   Return $xSDL_GetDisplayDPI[0]
EndFunc

Func SDL_GetDisplayMode($display,$modeIndex,$mode)
  Local $xSDL_GetDisplayMode = DllCall($SDL,"int:cdecl","SDL_GetDisplayMode","int",$display,"int",$modeIndex,"ptr",$mode)
   Return $xSDL_GetDisplayMode[0]
EndFunc

Func SDL_GetDisplayName($display)
  Local $xSDL_GetDisplayName = DllCall($SDL,"ptr:cdecl","SDL_GetDisplayName","int",$display)
   Return $xSDL_GetDisplayName[0]
EndFunc

Func SDL_GetDisplayOrientation($display)
   Local $xSDL_GetDisplayOrientation = DllCall($SDL,"ptr:cdecl","SDL_GetDisplayOrientation","int",$display)
   Return $xSDL_GetDisplayOrientation[0]
EndFunc

Func SDL_GetDisplayUsableBounds($display,$xSDL_Rect)
   Local $xSDL_GetDisplayUsableBounds = DllCall($SDL,"int:cdecl","SDL_GetDisplayUsableBounds","int",$display,"ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_GetDisplayUsableBounds[0]
EndFunc

Func SDL_GetGrabbedWindow()
   Local $xSDL_GetGrabbedWindow = DllCall($SDL,"ptr:cdecl","SDL_GetGrabbedWindow")
   Return $xSDL_GetGrabbedWindow[0]
EndFunc

Func SDL_GetNumDisplayModes($display)
   Local $xSDL_GetNumDisplayModes = DllCall($SDL,"int:cdecl","SDL_GetNumDisplayModes","int",$display)
   Return $xSDL_GetNumDisplayModes[0]
EndFunc

Func SDL_GetNumVideoDisplays()
   Local $xSDL_GetNumVideoDisplays = DllCall($SDL,"int:cdecl","SDL_GetNumVideoDisplays")
   Return $xSDL_GetNumVideoDisplays[0]
EndFunc

Func SDL_GetNumVideoDrivers()
   Local $xSDL_GetNumVideoDrivers = DllCall($SDL,"int:cdecl","SDL_GetNumVideoDrivers")
   Return $xSDL_GetNumVideoDrivers[0]
EndFunc

Func SDL_GetVideoDriver($index)
  Local $xSDL_GetVideoDriver = DllCall($SDL,"ptr:cdecl","SDL_GetVideoDriver",$index)
   Return $xSDL_GetVideoDriver[0]
EndFunc

Func SDL_GetWindowBordersSize($win,$top,$left,$bottom,$right)
  Local $xSDL_GetWindowBordersSize = DllCall($SDL,"int:cdecl","SDL_GetWindowBordersSize","ptr",$win,"ptr",$top,"ptr",$left,"ptr",$bottom,"ptr",$right)
   Return $xSDL_GetWindowBordersSize[0]
EndFunc

Func SDL_GetWindowBrightness($win)
   Local $xSDL_GetWindowBrightness = DllCall($SDL,"float:cdecl","SDL_GetWindowBrightness","ptr",$win)
   Return $xSDL_GetWindowBrightness[0]
EndFunc

Func SDL_GetWindowData($win,$name)
   Local $xSDL_GetWindowData = DllCall($SDL,"ptr:cdecl","SDL_GetWindowData","ptr",$win,"ptr",$name)
   Return $xSDL_GetWindowData[0]
EndFunc

Func SDL_GetWindowDisplayIndex($win)
  Local $xSDL_GetWindowDisplayIndex = DllCall($SDL,"int:cdecl","SDL_GetWindowDisplayIndex","ptr",$win)
   Return $xSDL_GetWindowDisplayIndex[0]
EndFunc

Func SDL_GetWindowDisplayMode($win,$mode)
  Local $xSDL_GetWindowDisplayMode = DllCall($SDL,"int:cdecl","SDL_GetWindowDisplayMode","ptr",$win,"ptr",$mode)
   Return $xSDL_GetWindowDisplayMode[0]
EndFunc

Func SDL_GetWindowFlags($win)
   Local $xSDL_GetWindowFlags = DllCall($SDL,"uint:cdecl","SDL_GetWindowFlags","ptr",$win)
   Return $xSDL_GetWindowFlags[0]
EndFunc

Func SDL_GetWindowFromID($id)
  Local $xSDL_GetWindowFromID = DllCall($SDL,"ptr:cdecl","SDL_GetWindowFromID","uint",$id)
   Return $xSDL_GetWindowFromID[0]
EndFunc

Func SDL_GetWindowGammaRamp($win,$r,$g,$b)
   Local $xSDL_GetWindowGammaRamp = DllCall($SDL,"int:cdecl","SDL_GetWindowGammaRamp","ptr",$win,"ptr",$r,"ptr",$g,"ptr",$b)
   Return $xSDL_GetWindowGammaRamp[0]
EndFunc

Func SDL_GetWindowGrab($win)
 Local  $xSDL_GetWinowGrab = DllCall($SDL,"bool:cdecl","SDL_GetWindowGrab","ptr",$win)
   Return $xSDL_GetWindowGrab[0]
EndFunc

Func SDL_GetWindowID($win)
  Local $xSDL_GetWindowID = DllCall($SDL,"uint:cdecl","SDL_GetWindowID","ptr",$win)
   Return $xSDL_GetWindowID[0]
EndFunc

Func SDL_GetWindowMaximumSize($win,$w,$h)
   $xSDL_GetWindowMaximumSize = DllCall($SDL,"none:cdecl","SDL_GetWindowMaximumSize","ptr",$win,"ptr",$w,"ptr",$h)
   Return $xSDL_GetWindowMaximumSize[0]
EndFunc

Func SDL_GetWindowMinimumSize($win,$w,$h)
   $xSDL_GetWindowMinimumSize = DllCall($SDL,"none:cdecl","SDL_GetWindowMinimumSize","ptr",$win,"ptr",$w,"ptr",$h)
   Return $xSDL_GetWindowMinimumSize[0]
EndFunc

Func SDL_GetWindowOpacity($win,$opacity)
  Local $xSDL_GetWindowOpacity = DllCall($SDL,"int:cdecl","SDL_GetWindowOpacity","ptr",$win,"ptr",$opacity)
   Return $xSDL_GetWindowOpacity[0]
EndFunc

Func SDL_GetWindowPixelFormat($win)
  Local $xSDL_GetWindowPixelFormat = DllCall($SDL,"uint:cdecl","SDL_GetWindowPixelFormat","ptr",$win)
   Return $xSDL_GetWindowPixelFormat[0]
EndFunc

Func SDL_GetWindowPosition($win,$x,$y)
   $xSDL_GetWindowPosition = DllCall($SDL,"none:cdecl","SDL_GetWindowPosition","ptr",$win,"pr",$x,"ptr",$y)
   Return $xSDL_GetWindowPosition[0]
EndFunc

Func SDL_GetWindowSize($win,$w,$h)
   $xSDL_GetWindowSize = DllCall($SDL,"none:cdecl","SDL_GetWindowSize","ptr",$win,"ptr",$x,"ptr",$y)
   Return $xSDL_GetWindowSize[0]
EndFunc

Func SDL_GetWindowSurface($win)
   Local $xSDL_GetWindowSurface = DllCall($SDL,"ptr:cdecl","SDL_GetWindowSurface","ptr",$win)
   Return $xSDL_GetWindowSurface[0]
EndFunc

Func SDL_GetWindowTitle($win)
  Local $xSDL_GetWindowTitle = DllCall($SDL,"ptr:cdecl","SDL_GetWindowTitle","ptr",$win)
   Return $xSDL_GetWindowTitle[0]
EndFunc

Func SDL_GetWindowWMInfo($win,$info)
   Local $xSDL_GetWindowWMInfo = DllCall($SDL,"bool:cdecl","SDL_GetWindowWMInfo","ptr",$win,"ptr",$info)
   Return $xSDL_GetWindowWMInfo[0]
EndFunc

Func SDL_HideWindow($win)
   $xSDL_HideWindow = DllCall($SDL,"none:cdecl","SDL_HideWindow","ptr",$win)
   Return $xSDL_HideWindow[0]
EndFunc

Func SDL_IsScreenSaverEnabled()
   Local $xSDL_IsScreenSaverEnabled = DllCall($SDL,"bool:cdecl","SDL_IsScreenSaverEnabled")
   Return $xSDL_IsScreenSaverEnabled[0]
EndFunc

Func SDL_MaximizeWindow($win)
   $xSDL_MaximizeWindow = DllCall($SDL,"none:cdecl","SDL_MaximizeWindow","ptr",$win)
   Return $xSDL_MaximizeWindow[0]
EndFunc

Func SDL_MinimizeWindow($win)
   $xSDL_MinimizeWindow = DllCall($SDL,"none:cdecl","SDL_MinimizeWindow","ptr",$win)
   Return $xSDL_MinimizeWindow[0]
EndFunc

Func SDL_RaiseWindow($win)
   $xSDL_RaiseWindow = DllCall($SDL,"none:cdecl","SDL_RaiseWindow","ptr",$win)
   Return $xSDL_RaiseWindow[0]
EndFunc

Func SDL_RestoreWindow($win)
   $xSDL_RestoreWindow = DllCall($SDL,"none:cdecl","SDL_RestoreWindow","ptr",$win)
   Return $xSDL_RestoreWindow[0]
EndFunc

Func SDL_SetWindowBordered($win,$border)
   $xSDL_SetWindowBordered = DllCall($SDL,"none:cdecl","SDL_SetWindowBordered","ptr",$win,"bool",$border)
   Return $xSDL_SetWindowBordered[0]
EndFunc

Func SDL_SetWindowBrightness($win,$bright)
   Local $xSDL_SetWindowBrightness = DllCall($SDL,"int:cdecl","SDL_SetWindowBrightness","ptr",$win,"float",$bright)
   Return $xSDL_SetWindowBrightness[0]
EndFunc

Func SDL_SetWindowData($win,$name,$data)
   Local $xSDL_SetWindowData = DllCall($SDL,"ptr:cdecl","SDL_SetWindowData","ptr",$win,"ptr",$name,"ptr",$data)
   Return $xSDL_SetWindowData[0]
EndFunc

Func SDL_SetWindowDisplayMode($win,$mode)
   Local $xSDL_SetWindowDisplayMode = DllCall($SDL,"int:cdecl","SDL_SetWindowDisplayMode","ptr",$win,"ptr",$mode)
   Return $xSDL_SetWindowDisplayMode[0]
EndFunc

Func SDL_SetWindowFullscreen($win,$flags)
   Local $xSDL_SetWindowFullscreen = DllCall($SDL,"int:cdecl","SDL_SetWindowFullscreen","ptr",$win,"uint",$flags)
   Return $xSDL_SetWindowFullscreen[0]
EndFunc

Func SDL_SetWindowGammaRamp($win,$r,$g,$b)
   Local $xSDL_SetWindowGammaRamp = DllCall($SDL,"int:cdecl","SDL_SetWindowGammaRamp","ptr",$win,"ptr",$r,"ptr",$g,"ptr",$b)
   Return $xSDL_SetWindowGammaRamp[0]
EndFunc

Func SDL_SetWindowGrab($win,$grab)
   $xSDL_SetWindowGrab = DllCall($SDL,"none:cdecl","SDL_SetWindowGrab","ptr",$win,"bool",$grab)
   Return $xSDL_SetWindowGrab[0]
EndFunc

Func SDL_SetWindowHitTest($win,$cb,$dat)
   Local $xSDL_SetWindowHitTest = DllCall($SDL,"int:cdecl","SDL_SetWindowHitTest","ptr",$win,"ptr",$cb,"ptr",$dat)
   Return $xSDL_SetWindowHitTest[0]
EndFunc

Func SDL_SetWindowIcon($win,$icon)
   $xSDL_SetWindowIcon = DllCall($SDL,"none:cdecl","SDL_SetWindowIcon","ptr",$win,"ptr",$icon)
   Return $xSDL_SetWindowIcon[0]
EndFunc

Func SDL_SetWindowInputFocus($win)
   Local $xSDL_SetWindowInputFocus = DllCall($SDL,"int:cdecl","SDL_SetWindowInputFocus","ptr",$win)
   Return $xSDL_SetWindowInputFocus[0]
EndFunc

Func SDL_SetWindowMaximumSize($win,$w,$h)
   $xSDL_SetWindowMaximumSize = DllCall($SDL,"none:cdecl","SDL_SetWindowMaximumSize","ptr",$win,"int",$w,"int",$h)
   Return $xSDL_SetWindowMaximumSize[0]
EndFunc

Func SDL_SetWindowMinimumSize($win,$w,$h)
   $xSDL_SetWndowMinimumSize = DllCall($SDL,"none:cdecl","SDL_SetWindowMinimumSize","ptr",$win,"int",$w,"int",$h)
   Return $xSDL_SetWindowMinimumSize[0]
EndFunc

Func SDL_SetWindowModalFor($win,$win2)
   Local $xSDL_SetWindowModalFor = DllCall($SDL,"int:cdecl","SDL_SetWindowModalFor","ptr",$win,"ptr",$win2)
   Return $xSDL_SetWindowModalFor[0]
EndFunc

Func SDL_SetWindowOpacity($win,$opacity)
  Local $xSDL_SetWindowOpacity = DllCall($SDL,"int:cdecl","SDL_SetWindowOpacity","ptr",$win,"float",$opacity)
   Return $xSDL_SetWindowOpacity[0]
EndFunc

Func SDL_SetWindowPosition($win,$x,$y)
   $xSDL_SetWindowPosition = DllCall($SDL,"none:cdecl","SDL_SetWindowPosition","ptr",$win,"int",$x,"int",$y)
   Return $xSDL_SetWindowPosition[0]
EndFunc

Func SDL_SetWindowResizable($win,$resize)
   $xSDL_SetWindowResizable = DllCall($SDL,"none:cdecl","SDL_SetWindowResizable","ptr",$win,"bool",$resize)
   Return $xSDL_SetWindowResizable[0]
EndFunc

Func SDL_SetWindowSize($win,$w,$h)
   $xSDL_SetWindowSize = DllCall($SDL,"none:cdecl","SDL_SetWindowSize","ptr",$win,"int",$w,"int",$h)
   Return $xSDL_SetWindowSize[0]
EndFunc

Func SDL_SetWindowTitle($win,$title)
   $xSDL_SetWindowTitle = DllCall($SDL,"none:cdecl","SDL_SetWindowTitle","ptr",$win,"str",$title)
   Return $xSDL_SetWindowTitle[0]
EndFunc

Func SDL_ShowMessageBox($mb,$id)
 Local $xSDL_ShowMessageBox = DllCall($SDL,"int:decl","SDL_ShowMessageBox","ptr",$mb,"ptr",$id)
   Return $xSDL_ShowMessageBox[0]
EndFunc

Func SDL_ShowSimpleMessageBox($flags,$title,$msg,$win)
   Local $xSDL_ShowSimpleMessageBox = DllCall($SDL,"int:cdecl","SDL_ShowSimpleMessageBox","uint",$flags,"ptr",$title,"ptr",$msg,"ptr",$win)
   Return $xSDL_ShowSimpleMessageBox[0]
EndFunc

Func SDL_ShowWindow($win)
   $xSDL_ShowWindow = DllCall($SDL,"none:cdecl","SDL_ShowWindow","ptr",$win)
   Return $xSDL_ShowWindow[0]
EndFunc

Func SDL_UpdateWindowSurface($win)
   Local $xSDL_UpdateWindowSurface = DllCall($SDL,"int:cdecl","SDL_UpdateWindowSurface","ptr",$win)
   Return $xSDL_UpdateWindowSurface[0]
EndFunc

Func SDL_UpdateWindowSurfaceRects($win,$xSDL_Rect,$num)
  Local $xSDL_UpdateWindowSurfaceRects = DllCall($SDL,"int:cdecl","SDL_UpdateWindowSurfaceRects","ptr",$win,"ptr",DllStructGetPtr($xSDL_Rect),"int",$num)
   Return $xSDL_UpdateWindowSurfaceRects[0]
EndFunc

Func SDL_VideoInit($name)
   Local $xSDL_VideoInit = DllCall($SDL,"int:cdecl","SDL_VideoInit","ptr",$name)
   Return $xSDL_VideoInit[0]
EndFunc

Func SDL_VideoQuit()
   $xSDL_VideoQuit = DllCall($SDL,"none:cdecl","SDL_VideoQuit")
   Return $xSDL_VideoQuit[0]
EndFunc

;SDL Hints
Func SDL_AddHintCallback($name, $cb,$dat)
   $xSDL_AddHintCallback = DllCall($SDL,"none:cdecl","SDL_AddHintCallback","ptr",$name,"ptr",$cb,"ptr",$dat)
   Return $xSDL_AddHintCallback[0]
EndFunc

Func SDL_ClearHints()
   $xSDL_ClearHints = DllCall($SDL,"none:cdecl","SDL_ClearHints","none")
   Return $xSDL_ClearHints[0]
EndFunc

Func SDL_DelHintCallback($name,$cb,$dat)
   $xSDL_DelHintCallback = DllCall($SDL,"none:cdecl","SDL_DelHintCallback","str",$name,"ptr",$cb,"ptr",$dat)
   Return $xSDL_DelHintCallback[0]
EndFunc

Func SDL_GetHint($name)
   Local $xSDL_GetHint = DllCall($SDL,"ptr:cdecl","SDL_GetHint","ptr",$name)
   Return $xSDL_GetHint[0]
EndFunc

Func SDL_GetHintBoolean($name,$val)
   Local $xSDL_GetHintBoolean = DllCall($SDL,"bool:cdecl","SDL_GetHintBoolean","ptr",$name,"bool",$val)
   Return $xSDL_GetHintBoolean[0]
EndFunc

Func SDL_SetHint($name,$val)
   Local $xSDL_SetHint = DllCall($SDL,"bool:cdecl","SDL_SetHint","ptr",$name,"ptr",$val)
   Return $xSDL_SetHint[0]
EndFunc

Func SDL_SetHintWithPriority($name,$val,$prio)
   Local $xSDL_SetHintWithPriority = DllCall($SDL,"bool:cdecl","SDL_SetHintWithPriority","ptr",$name,"ptr",$val,"ptr",$prio)
   Return $xSDL_SetHintWithPriority[0]
EndFunc

;SDL Error
Func SDL_ClearError()
   Local $xSDL_ClearError = DllCall($SDL,"none:cdecl","SDL_ClearError")
   Return $xSDL_ClearError[0]
EndFunc

Func SDL_GetError()
   Local $xSDL_GetError = DllCall($SDL,"ptr:cdecl","SDL_GetError")
   Return $xSDL_GetError[0]
EndFunc

Func SDL_SetError($fmt,$x)
   Local $xSDL_SetError = DllCall($SDL,"int:cdecl","SDL_SetError","ptr",$fmt,"ptr",$x)
   Return $xSDL_SetError[0]
EndFunc

;SDL Log
Func SDL_Log($fmt,$x)
   Local $xSDL_Log = DllCall($SDL,"none:cdecl","SDL_Log","ptr",$fmt,"ptr",$x)
   Return $xSDL_Log[0]
EndFunc

Func SDL_LogCritical($cat,$fmt,$x)
   Local $xSDL_LogCritical = DllCall($SDL,"none:cdecl","SDL_LogCritical","int",$cat,"ptr",$fmt,"ptr",$x)
   Return $xSDL_LogCritical[0]
EndFunc

Func SDL_LogDebug($cat,$fmt,$x)
   Local $xSDL_LogDebug = DllCall($SDL,"none:cdecl","SDL_LogDebug","int",$cat,"ptr",$fmt,"ptr",$x)
   Return $xSDL_LogDebug[0]
EndFunc

Func SDL_LogError($cat,$fmt,$x)
   Local $xSDL_LogError = DllCall($SDL,"none:cdecl","SDL_LogError","int",$cat,"ptr",$fmt,"ptr",$x)
   Return $xSDL_LogError[0]
EndFunc

Func SDL_LogGetOutputFunction($cb,$ud)
   Local $xSDL_LogGetOutputFunction = DllCall($SDL,"none:cdecl","ptr",$cb,"ptr",$ud)
   Return $xSDL_LogGetOutputFunction[0]
EndFunc

Func SDL_LogGetPriority($cat)
   Local $xSDL_LogGetPriority = DllCall($SDL,"ptr:cdecl","int",$cat)
   Return $xSDL_LogGetPriority[0]
EndFunc

Func SDL_LogInfo($cat,$fmt,$x)
   Local $xSDL_LogInfo = DllCall($SDL,"none:cdecl","int",$cat,"ptr",$fmt,"ptr",$x)
   Return $xSDL_LogInfo[0]
EndFunc

Func SDL_LogMessage($cat,$pri,$fmt,$x)
   Local $xSDL_LogMessage = DllCall($SDL,"none:cdecl","int",$cat,"ptr",$pri,"ptr",$fmt,"ptr",$x)
   Return $xSDL_LogMessage[0]
EndFunc

Func SDL_LogMessageV($cat,$pri,$fmt,$ap)
   Local $xSDL_LogMessageV = DllCall($SDL,"none:cdecl","int",$cat,"ptr",$pri,"ptr",$fmt,"ptr",$ap)
   Return $xSDL_LogMessageV[0]
EndFunc

Func SDL_LogResetPriorities()
   Local $xSDL_LogResetPriorities = DllCall($SDL,"none:cdecl","SDL_LogResetPriorities")
   Return $xSDL_LogResetPriorities[0]
EndFunc

Func SDL_LogSetAllPriority($pri)
   Local $xSDL_LogSetAllPriority = DllCall($SDL,"none:cdecl","SDL_LogSetAllPriority","ptr",$pri)
   Return $xSDL_LogSetAllPriority[0]
EndFunc

Func SDL_LogSetOutputFunction($fun,$x)
   Local $xSDL_LogSetAllPriority = DllCall($SDL,"none:cdecl","SDL_LogSetOutputFunction","ptr",$fun,"ptr",$x)
   Return $xSDL_LogSetAllPriority[0]
EndFunc

Func SDL_LogSetPriority($cat,$pri)
   Local $xSDL_LogSetPriority = DllCall($SDL,"none:cdecl","SDL_LogSetPriority","int",$cat,"ptr",$pri)
   Return $xSDL_LogSetPriority[0]
EndFunc

Func SDL_LogVerbose($cat,$fmt,$x)
   Local $xSDL_LogVerbose = DllCall($SDL,"none:cdecl","SDL_LogVerbose","int",$cat,"ptr",$fmt,"ptr",$x)
   Return $xSDL_LogVerbose[0]
EndFunc

Func SDL_LogWarn($cat,$fmt,$x)
   Local $xSDL_LogWarn = DllCall($SDL,"none:cdecl","SDL_LogWarn","int",$cat,"ptr",$fmt,"ptr",$x)
   Return $xSDL_LogWarn[0]
EndFunc

;SDL Assertion Funcs
Func SDL_AssertionHandler($ud)
   Local $xSDL_AssertionHandler = DllCall($SDL,"ptr:cdecl","SDL_AssertionHandler","ptr",$ud)
   Return $xSDL_AssertionHandler[0]
EndFunc

Func SDL_GetAssertionReport()
   Local $xSDL_GetAssertionReport = DllCall($SDL,"ptr:cdecl","SDL_GetAssertionReport")
   Return $xSDL_GetAssertionReport[0]
EndFunc

Func SDL_GetDefaultAssertionHandler()
   Local $xSDL_GetDefaultAssertionHandler = DllCall($SDL,"ptr:cdecl","SDL_GetDefaultAssertionHandler")
   Return $xSDL_GetDefaultAssertionHandler[0]
EndFunc

Func SDL_ResetAssertionReport()
   Local $xSDL_ResetAssertionReport = DllCall($SDL,"none:cdecl","SDL_ResetAssertionReport")
   Return $xSDL_ResetAssertionReport[0]
EndFunc

Func SDL_SetAssertionHandler($hand,$ud)
   Local $xSDL_SetAssertionHandler = DllCall($SDL,"none:cdecl","SDL_SetAssertionHandler","ptr",$hand,"ptr",$ud)
   Return $xSDL_SetAssertionHandler[0]
EndFunc

Func SDL_TriggerBreakpoint()
   Local $xSDL_TriggerBreakpoint = DllCall($SDL,"none:cdecl","SDL_TriggerBreakpoint")
   Return $xSDL_TriggerBreakpoint[0]
EndFunc

Func SDL_assert($x)
   Local $xSDL_assert = DllCall($SDL,"none:cdecl","SDL_assert")
   Return $xSDL_assert[0]
EndFunc

Func SDL_assert_paranoid($x)
   Local $xSDL_assert_paranoid = DllCall($SDL,"none:cdecl","SDL_assert_paranoid")
   Return $xSDL_assert_paranoid[0]
EndFunc

Func SDL_assert_release($x)
   Local $xSDL_assert_release = DllCall($SDL,"none:cdecl","SDL_assert_release")
   Return $xSDL_assert_release[0]
EndFunc

;SDL Version Query
Func SDL_GetRevision()
   Local $xSDL_GetRevision = DllCall($SDL,"ptr:cdecl","SDL_GetRevision")
   Return $xSDL_GetRevision[0]
EndFunc

Func SDL_GetRevisionNumber()
   Local $xSDL_GetRevisionNumber = DllCall($SDL,"int:cdecl","SDL_GetRevisionNumber")
   Return $xSDL_GetRevisionNumber[0]
EndFunc

Func SDL_GetVersion($ver)
   Local $xSDL_GetVersion = DllCall($SDL,"none:cdecl","SDL_GetVersion","ptr",$ver)
   Return $xSDL_GetVersion[0]
EndFunc

;SDL Render
Func SDL_CreateRenderer($win,$index,$flags)
   Local $xSDL_CreateRenderer = DllCall($SDL,"ptr:cdecl","SDL_CreateRenderer","ptr",$win,"int",$index,"uint",$flags)
   Return $xSDL_CreateRenderer[0]
EndFunc

Func SDL_CreateSoftwareRenderer($surf)
   Local $xSDL_CreateSoftwareRenderer = DllCall($SDL,"ptr:cdecl","SDL_CreateSoftwareRenderer","ptr",$surf)
   Return $xSDL_CreateSoftwareRenderer[0]
EndFunc

Func SDL_CreateTexture($ren,$format,$access,$w,$h)
   Local $xSDL_CreateTexture = DllCall($SDL,"ptr:cdecl","SDL_CreateTexture","ptr",$ren,"uint",$format,"int",$access,"int",$w,"int",$h)
   Return $xSDL_CreateTexture[0]
EndFunc

Func SDL_CreateTextureFromSurface($ren,$surf)
   Local $xSDL_CreateTextureFromSurface = DllCall($SDL,"ptr:cdecl","SDL_CreateTextureFromSurface","ptr",$ren,"ptr",$surf)
   Return $xSDL_CreateTextureFromSurface[0]
EndFunc

;Duplicate in the Render function list
;Func SDL_CreateWindowAndRenderer($w,$h,$flags,$win,$ren)
 ;  Local $xSDL_CreateWindowAndRenderer = DllCall($SDL,"int:cdecl","SDL_CreateWindowAndRenderer","int",$w,"int",$h,"uint",$flags,"ptr",$win,"ptr",$ren)
  ; Return $xSDL_CreateWindowAndRenderer[0]
;EndFunc

Func SDL_DestroyRenderer($ren)
   Local $xSDL_DestroyRenderer = DllCall($SDL,"none:cdecl","SDL_DestroyRenderer","ptr",$ren)
   Return $xSDL_DestroyRenderer[0]
EndFunc

Func SDL_DestroyTexture($tex)
   Local $xSDL_DestroyTexture = DllCall($SDL,"none:cdecl","SDL_DestroyTexture","ptr",$tex)
   Return $xSDL_DestroyTexture[0]
EndFunc

Func SDL_GL_BindTexture($tex,$w,$h)
   Local $xSDL_GL_BindTexture = DllCall($SDL,"int:cdecl","SDL_GL_BindTexture","ptr",$tex,"ptr",$w,"ptr",$h)
   Return $xSDL_GL_BindTexture[0]
EndFunc

Func SDL_GL_UnbindTexture($tex)
   Local $xSDL_GL_UnbindTexture = DllCall($SDL,"int:cdecl","SDL_GL_UnbindTexture","ptr",$tex)
   Return $xSDL_GL_UnbindTexture[0]
EndFunc

Func SDL_GetNumRenderDrivers()
   Local $xSDL_GetNumRenderDrivers = DllCall($SDL,"int:cdecl","SDL_GetNumRenderDrivers")
   Return $xSDL_GetNumRenderDrivers[0]
EndFunc

Func SDL_GetRenderDrawBlendMode($ren,$mode)
   Local $xSDL_GetRenderDrawBlendMode = DllCall($SDL,"int:cdecl","ptr",$ren,"ptr",$mode)
   Return $xSDL_GetRenderDrawBlendMode[0]
EndFunc

Func SDL_GetRenderDrawColor($ren,$r,$g,$b,$a)
   Local $xSDL_GetRenderDrawColor = DllCall($SDL,"int:cdecl","SDL_GetRenderDrawColor","ptr",$ren,"ptr",$r,"ptr",$g,"ptr",$b,"ptr",$a)
   Return $xSDL_GetRenderDrawColor[0]
EndFunc

Func SDL_GetRenderDriverInfo($idx,$info)
   Local $xSDL_GetRenderDriverInfo = DllCall($SDL,"int:cdecl","SDL_GetRenderDriverInfo","int",$idx,"ptr",$info)
   Return $xSDL_GetRenderDriverInfo[0]
EndFunc

Func SDL_GetRenderTarget($ren)
   Local $xSDL_GetRenderTarget = DllCall($SDL,"ptr:cdecl","SDL_GetRenderTarget","ptr",$ren)
   Return $xSDL_GetRenderTarget[0]
EndFunc

Func SDL_GetRenderer($win)
   Local $xSDL_GetRenderer = DllCall($SDL,"ptr:cdecl","SDL_GetRenderer","ptr",$win)
   Return $xSDL_GetRenderer[0]
EndFunc

Func SDL_GetRendererInfo($ren,$info)
   Local $xSDL_GetRendererInfo = DllCall($SDL,"int:cdecl","SDL_GetRendererInfo","ptr",$ren,"ptr",$info)
   Return $xSDL_GetRendererInfo[0]
EndFunc

Func SDL_GetRendererOutputSize($ren,$w,$h)
   Local $xSDL_GetRendererOutputSize = DllCall($SDL,"int:cdecl","SDL_GetRendererOutputSize","ptr",$ren,"ptr",$w,"ptr",$h)
   Return $xSDL_GetRendererOutputSize[0]
EndFunc

Func SDL_GetTextureAlphaMod($tex,$al)
   Local $xSDL_GetTextureAlphaMod = DllCall($SDL,"int:cdecl","SDL_GetTextureAlphaMod","ptr",$ren,"ptr",$al)
   Return $xSDL_GetTextureAlphaMod[0]
EndFunc

Func SDL_GetTextureBlendMode($tex,$mode)
   Local $xSDL_GetTextureBlendMode = DllCall($SDL,"int:cdecl","SDL_GetTextureBlendMode","ptr",$tex,"ptr",$mode)
   Return $xSDL_GetTextureBlendMode[0]
EndFunc

Func SDL_GetTextureColorMod($tex,$r,$g,$b)
   Local $xSDL_GetTextureColorMod = DllCall($SDL,"int:cdecl","SDL_GetTextureColorMod","ptr",$ren,"ptr",$r,"ptr",$g,"ptr",$b)
   Return $xSDL_GetTextureColorMod[0]
EndFunc

Func SDL_LockTexture($tex,$xSDL_Rect,$pix,$pit)
   Local $xSDL_LockTexture = DllCall($SDL,"int:cdecl","SDL_LockTexture","ptr",$tex,"ptr",DllStructGetPtr($xSDL_Rect),"ptr",$pix,"ptr",$pit)
   Return $xSDL_LockTexture[0]
EndFunc

Func SDL_QueryTexture($tex,$mat,$acc,$w,$h)
   Local $xSDL_QueryTexture = DllCall($SDL,"int:cdecl","SDL_QueryTexture","ptr",$tex,"ptr",$mat,"ptr",$acc,"ptr",$w,"ptr",$h)
   Return $xSDL_QueryTexture[0]
EndFunc

Func SDL_RenderClear($ren)
   Local $xSDL_RenderClear = DllCall($SDL,"int:cdecl","SDL_RenderClear","ptr",$ren)
   Return $xSDL_RenderClear[0]
EndFunc

Func SDL_RenderCopy($ren,$tex,$xSDL_Rect,$xSDL_Rect2)
   Local $xSDL_RenderCopy = DllCall($SDL,"int:cdecl","SDL_RenderCopy","ptr",$ren,"ptr",$tex,"ptr",DllStructGetPtr($xSDL_Rect),"ptr",DllStructGetPtr($xSDL_Rect2))
   Return $xSDL_RenderCopy[0]
EndFunc

Func SDL_RenderCopyEx($ren,$tex,$xSDL_Rect,$xSDL_Rect2,$angle,$center,$flip)
   Local $xSDL_RenderCopyEx = DllCall($SDL,"int:cdecl","SDL_RenderCopyEx","ptr",$ren,"ptr",$tex,"ptr",DllStructGetPtr($xSDL_Rect),"ptr",DllStructGetPtr($xSDL_Rect2),"double",$angle,"ptr",$center,"ptr",$flip)
   Return $xSDL_RenderCopyEx[0]
EndFunc

Func SDL_RenderDrawLine($ren,$x,$y,$x2,$y2)
   Local $xSDL_RenderDrawLine = DllCall($SDL,"int:cdecl","ptr",$ren,"int",$x,"int",$y,"int",$x2,"int",$y2)
   Return $xSDL_RenderDrawLine[0]
EndFunc

Func SDL_RenderDrawLines($ren,$pt,$count)
   Local $xSDL_RenderDrawLines = DllCall($SDL,"int:cdecl","ptr",$ren,"ptr",$pt,"int",$count)
   Return $xSDL_RenderDrawLines[0]
EndFunc

Func SDL_RenderDrawPoint($ren,$x,$y)
   Local $xSDL_RenderDrawPoint = DllCall($SDL,"int:cdecl","ptr",$ren,"int",$x,"int",$y)
   Return $xSDL_RenderDrawPoint[0]
EndFunc

Func SDL_RenderDrawPoints($ren,$pt,$count)
   Local $xSDL_RenderDrawPoints = DllCall($SDL,"int:cdecl","ptr",$ren,"ptr",$pt,"int",$count)
   Return $xSDL_RenderDrawPoints[0]
EndFunc

Func SDL_RenderDrawRect($ren,$xSDL_Rect)
   Local $xSDL_RenderDrawRect = DllCall($SDL,"int:cdecl","ptr",$ren,"ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_RenderDrawRect[0]
EndFunc

Func SDL_RenderDrawRects($ren,$xSDL_Rect,$count)
   Local $xSDL_RenderDrawRects = DllCall($SDL,"int:cdecl","ptr",$ren,"ptr",DllStructGetPtr($xSDL_Rect),"int",$count)
   Return $xSDL_RenderDrawRects[0]
EndFunc

Func SDL_RenderFillRect($ren,$xSDL_Rect)
   Local $xSDL_RenderFillRect = DllCall($SDL,"int:cdecl","ptr",$ren,"ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_RenderFillRect[0]
EndFunc

Func SDL_RenderFillRects($ren,$xSDL_Rect,$count)
   Local $xSDL_RenderFillRects = DllCall($SDL,"int:cdecl","ptr",$ren,"ptr",DllStructGetPtr($xSDL_Rect),"int",$count)
   Return $xSDL_RenderFillRects[0]
EndFunc

Func SDL_RenderGetClipRect($ren,$xSDL_Rect)
   Local $xSDL_RenderGetClipRect = DllCall($SDL,"none:cdecl","ptr",$ren,"ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_RenderGetClipRect[0]
EndFunc

Func SDL_RenderGetIntegerScale($ren)
   Local $xSDL_RenderGetIntegerScale = DllCall($SDL,"bool:cdecl","SDL_RenderGetIntegerScale","ptr",$ren)
   Return $xSDL_RenderGetIntegerScale[0]
EndFunc

Func SDL_RenderGetLogicalSize($ren,$w,$h)
   Local $xSDL_RenderGetLogicalSize = DllCall($SDL,"none:cdecl","SDL_RenderGetLogicalSize","ptr",$ren,"ptr",$w,"ptr",$h)
   Return $xSDL_RenderGetLogicalSize[0]
EndFunc

Func SDL_RenderGetScale($ren,$x,$y)
   Local $xSDL_RenderGetScale = DllCall($SDL,"none:cdecl","SDL_RenderGetScale","ptr",$ren,"ptr",$x,"ptr",$y)
   Return $xSDL_RenderGetScale[0]
EndFunc

Func SDL_RenderGetViewport($ren,$xSDL_Rect)
   Local $xSDL_RenderGetViewport = DllCall($SDL,"none:cdecl","SDL_RenderGetViewport","ptr",$ren,"ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_RenderGetViewport[0]
EndFunc

Func SDL_RenderIsClipEnabled($ren)
   Local $xSDL_RenderIsClipEnabled = DllCall($SDL,"bool:cdecl","SDL_RenderIsClipEnabled","ptr",$ren)
   Return $xSDL_RenderIsClipEnabled[0]
EndFunc

Func SDL_RenderPresent($ren)
   Local $xSDL_RenderPresent = DllCall($SDL,"none:cdecl","SDL_RenderPresent","ptr",$ren)
   Return $xSDL_RenderPresent[0]
EndFunc

Func SDL_RenderReadPixels($ren,$xSDL_Rect,$mat,$pix,$pit)
   Local $xSDL_RenderReadPixels = DllCall($SDL,"int:cdecl","SDL_RenderReadPixels","ptr",$ren,"ptr",DllStructGetPtr($xSDL_Rect),"unit",$mat,"ptr",$pix,"int",$pit)
   Return $xSDL_RenderReadPixels[0]
EndFunc

Func SDL_RenderSetClipRect($ren,$xSDL_Rect)
   Local $xSDL_RenderSetClipRect = DllCall($SDL,"int:cdecl","SDL_RenderSetClipRect","ptr",$ren,"ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_RenderSetClipRect[0]
EndFunc

Func SDL_RenderSetIntegerScale($ren,$enable)
   Local $xSDL_RenderSetIntegerScale = DllCall($SDL,"int:cdecl","SDL_RenderSetIntegerScale","ptr",$ren,"bool",$enable)
   Return $xSDL_RenderSetIntegerScale[0]
EndFunc

Func SDL_RenderSetLogicalSize($ren,$w,$h)
   Local $xSDL_RenderSetLogicalSize = DllCall($SDL,"int:cdecl","SDL_RenderSetLogicalSize","ptr",$ren,"int",$w,"int",$h)
   Return $xSDL_RenderSetLogicalSize[0]
EndFunc

Func SDL_RenderSetScale($ren,$x,$y)
   Local $xSDL_RenderSetScale = DllCall($SDL,"int:cdecl","SDL_RenderSetScale","ptr",$ren,"float",$x,"float",$y)
   Return $xSDL_RenderSetScale[0]
EndFunc

Func SDL_RenderSetViewport($ren,$xSDL_Rect)
   Local $xSDL_RenderSetViewport = DllCall($SDL,"int:cdecl","SDL_RenderSetViewport","ptr",$ren,"ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_RenderSetViewport[0]
EndFunc

Func SDL_RenderTargetSupported($ren)
   Local $xSDL_RenderTargetSupported = DllCall($SDL,"bool:cdecl","SDL_RenderTargetSupported","ptr",$ren)
   Return $xSDL_RenderTargetSupported[0]
EndFunc

Func SDL_SetRenderDrawBlendMode($ren,$mode)
   Local $xSDL_SetRenderDrawBlendMode = DllCall($SDL,"int:cdecl","SDL_SetRenderDrawBlendMode","ptr",$ren,"ptr",$mode)
   Return $xSDL_SetRenderDrawBlendMode[0]
EndFunc

Func SDL_SetRenderDrawColor($ren,$r,$g,$b,$a)
   Local $xSDL_SetRenderDrawColor = DllCall($SDL,"int:cdecl","SDL_SetRenderDrawColor","ptr",$ren,"uint",$r,"uint",$g,"uint",$b,"uint",$a)
   Return $xSDL_SetRenderDrawColor[0]
EndFunc

Func SDL_SetRenderTarget($ren,$tex)
   Local $xSDL_SetRenderTarget = DllCall($SDL,"int:cdecl","SDL_SetRenderTarget","ptr",$ren,"ptr",$tex)
   Return $xSDL_SetRenderTarget[0]
EndFunc

Func SDL_SetTextureAlphaMod($tex,$al)
   Local $xSDL_SetTextureAlphaMod = DllCall($SDL,"int:cdecl","SDL_SetTextureAlphaMod","ptr",$tex,"uint",$al)
   Return $xSDL_SetTextureAlphaMod[0]
EndFunc

Func SDL_SetTextureBlendMode($tex,$mode)
   Local $xSDL_SetTextureBlendMode = DllCall($SDL,"int:cdecl","SDL_SetTextureBlendMode","ptr",$tex,"ptr",$mode)
   Return $xSDL_SetTextureBlendMode[0]
EndFunc

Func SDL_SetTextureColorMod($tex,$r,$g,$b)
   Local $xSDL_SetTextureColorMod = DllCall($SDL,"int:cdecl","SDL_SetTextureColorMod","ptr",$tex,"uint",$r,"uint",$g,"uint",$b)
   Return $xSDL_SetTextureColorMod[0]
EndFunc

Func SDL_UnlockTexture($tex)
   Local $xSDL_UnlockTexture = DllCall($SDL,"none:cdecl","SDL_UnlockTexture","ptr",$tex)
   Return $xSDL_UnlockTexture[0]
EndFunc

Func SDL_UpdateTexture($tex,$xSDL_Rect,$pix,$pit)
   Local $xSDL_UpdateTexture = DllCall($SDL,"int:cdecl","SDL_UpdateTexture","ptr",$tex,"ptr",DllStructGetPtr($xSDL_Rect),"ptr",$pix,"int",$pit)
   Return $xSDL_UpdateTexture[0]
EndFunc

;SDL Render Float Functions
Func SDL_RenderDrawPointF($ren,$x,$y)
   Local $xSDL_RenderDrawPointF = DllCall($SDL,"int:cdecl","SDL_RenderDrawPointF","ptr",$ren,"float",$x,"float",$y)
   Return $xSDL_RenderDrawPointF[0]
EndFunc

Func SDL_RenderDrawPointsF($ren,$pts,$count)
   Local $xSDL_RenderDrawPointsF = DllCall($SDL,"int:cdecl","SDL_RenderDrawPointsF","ptr",$ren,"ptr",$pts,"int",$count)
   Return $xSDL_RenderDrawPointsF[0]
EndFunc

Func SDL_RenderDrawLineF($ren,$x1,$y1,$x2,$y2)
   Local $xSDL_RenderDrawLineF = DllCall($SDL,"int:cdecl","SDL_RenderDrawLineF","ptr",$ren,"float",$x1,"float",$y1,"float",$x2,"float",$y2)
   Return $xSDL_RendrDrawLineF[0]
EndFunc

Func SDL_RenderDrawLinesF($ren,$pts,$count)
   Local $xSDL_RenderDrawLinesF = DllCall($SDL,"int:cdecl","SDL_RenderDrawLinesF","ptr",$ren,"ptr",$pts,"int",$count)
   Return $xSDL_RenderDrawLinesF[0]
EndFunc

Func SDL_RenderDrawRectF($ptr,$xSDL_Rect)
   Local $xSDL_RenderDrawRectF = DllCall($SDL,"int:cdecl","SDL_RenderDrawRectF","ptr",$ren,"ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_RenderDrawRectF[0]
EndFunc

Func SDL_RenderDrawRectsF($ren,$pts,$count)
   Local $xSDL_RenderDrawRectsF = DllCall($SDL,"int:cdecl","SDL_RenderDrawRectsF","ptr",$ren,"ptr",$pts,"int",$count)
   Return $xSDL_RenderDrawRectsF[0]
EndFunc

Func SDL_RenderFillRectF($ren,$xSDL_Rect)
   Local $xSDL_RenderFillRectF = DllCall($SDL,"int:cdecl","SDL_RenderFillRectF","ptr",$ren,"ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_RenderFillRectF[0]
EndFunc

Func SDL_RenderFillRectsF($ren,$xSDL_Rect)
   Local $xSDL_RenderFillRectsF = DllCall($SDL,"int:cdecl","SDL_RenderFillRectsF","ptr",$ren,"ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_RenderFillRectsF[0]
EndFunc

Func SDL_RenderCopyF($ren,$tex,$xSDL_Rect,$xSDL_Rect1)
   Local $xSDL_RenderCopyF = DllCall($SDL,"int:cdecl","SDL_RenderCopyF","ptr",$ren,"ptr",$tex,"ptr",DllStructGetPtr($xSDL_Rect),"ptr",DllStructGetPtr($xSDL_Rect1))
   Return $xSDL_RenderCopyF[0]
EndFunc

Func SDL_RenderCopyExF($ren,$tex,$SDL_Rect,$SDL_Rect1,$angle,$center,$flip)
   Local $xSDL_RenderCopyExF = DllCall($SDL,"int:cdecl","SDL_RenderCopyExF","ptr",$ren,"ptr",$tex,"ptr",DllStructGetPtr($xSDL_Rect),"ptr",DllStructGetPtr($xSDL_Rect1),"double",$angle,"ptr",$center,"uint",$flip)
   Return $xSDL_RenderCopyExF[0]
EndFunc

;Func SDL_RenderSetIntegerScale($ren,$x)
;   Local $xSDL_RenderSetIntegerScale = DllCall($SDL,"int:cdecl","SDL_RenderSetIntegerScale","ptr",$ren,"bool",$x)
;   Return $xSDL_RenderSetIntegerScale[0]
;EndFunc

Func SDL_RenderFlush($ren)
   Local $xSDL_RenderFlush = DllCall($SDL,"int:cdecl","SDL_RenderFlush","ptr",$ren)
   Return $xSDL_RenderFlush[0]
EndFunc

Func SDL_UpdateYUVTexture($tex,$xSDL_Rect,$yplane,$ypit,$uplane,$upit,$vplane,$vpit)
   Local $xSDL_UpdateYUVTexture = DllCall($SDL,"int:cdelc","SDL_UpdateYUVTexture","ptr",$tex,"ptr",DllStructGetPtr($xSDL_Rect),"ptr",$yplane,"int",$ypit,"ptr",$uplane,"int",$upit,"ptr",$vplane,"int",$vpit)
   Return $xSDL_UpdateYUVTexture[0]
EndFunc

Func SDL_SetTextureScaleMode($tex,$mode)
   Local $xSDL_SetTextureScaleMode = DllCall($SDL,"int:cdecl","SDL_SetTextureUpdateScaleMode","ptr",$tex,"uint",$mode)
   Return $xSDL_SetTextureScaleMode[0]
EndFunc

Func SDL_GetTextureScaleMode($tex,$mode)
   Local $xSDL_GetTextureScaleMode = DllCall($SDL,"int:cdecl","SDL_GetTextureScaleMode","ptr",$tex,"ptr",$mode)
   Return $xSDL_GetTextureScaleMode[0]
EndFunc

;Pixel Functions

Func SDL_AllocFormat($pix)
   Local $xSDL_AllocFormat = DllCall($SDL,"ptr:cdecl","SDL_AllocFormat","uint",$pix)
   Return $xSDL_AllocFormat[0]
EndFunc

Func SDL_AllocPalette($cols)
   Local $xSDL_AllocPalette = DllCall($SDL,"ptr:cdecl","SDL_AllocPalette","int",$cols)
   Return $xSDL_AllocPalette[0]
EndFunc

Func SDL_CalculateGammaRamp($gam,$ram)
   Local $xSDL_CalculateGammaRamp = DllCall($SDL,"none:cdecl","SDL_CalculateGammaRamp","float",$gam,"ptr",$ram)
   Return $xSDL_CalculateGammaRamp[0]
EndFunc

Func SDL_FreeFormat($mat)
   Local $xSDL_FreeFormat = DllCall($SDL,"none:cdecl","SDL_FreeFormat","ptr",$mat)
   Return $xSDL_FreeFormat[0]
EndFunc

Func SDL_FreePalette($pal)
   Local $xSDL_FreePalette = DllCall($SDL,"none:cdecl","SDL_FreePalette","ptr",$pal)
   Return $xSDL_FreePalette[0]
EndFunc

Func SDL_GetPixelFormatName($mat)
   Local $xSDL_GetPixelFormatName = DllCall($SDL,"ptr:cdecl","SDL_GetPixelFormatName","uint",$mat)
   Return $xSDL_GetPixelFormatName[0]
EndFunc

Func SDL_GetRGB($pix,$mat,$r,$g,$b)
   Local $xSDL_GetRGB = DllCall($SDL,"none:cdecl","SDL_GetRGB","uint",$pix,"ptr",$mat,"ptr",$r,"ptr",$g,"ptr",$b)
   Return $xSDL_GetRGB[0]
EndFunc

Func SDL_GetRGBA($pix,$matr,$r,$g,$b,$a)
   Local $xSDL_GetRGBA = DllCall($SDL,"none:cdecl","SDL_GetRGBA","uint",$pix,"ptr",$mat,"ptr",$r,"ptr",$g,"ptr",$b,"ptr",$a)
   Return $xSDL_GetRGBA[0]
EndFunc

Func SDL_MapRGB($mat,$r,$g,$b)
   Local $xSDL_MapRGB = DllCall($SDL,"uint:cdecl","SDL_MapRGB","ptr",$mat,"uint",$r,"uint",$g,"uint",$b)
   Return $xSD_MapRGB[0]
EndFunc

Func SDL_MapRGBA($mat,$r,$g,$b,$a)
   Local $xSDL_MapRGBA = DllCall($SDL,"uint:cdecl","SDL_MapRGBA","ptr",$mat,"uint",$r,"uint",$g,"uint",$b,"uint",$a)
   Return $xSDL_MapRGBA[0]
EndFunc

Func SDL_MasksToPixelFormatEnum($bpp,$r,$g,$b,$a)
   Local $xSDL_MasksToPixelFormatEnum = DllCall($SDL,"uint:cdecl","SDL_MasksToPixelFormatEnum","int",$bpp,"uint",$r,"uint",$g,"uint",$b,"uint",$a)
   Return $xSDL_MasksToPixelFormatEnum[0]
EndFunc

Func SDL_PixelFormatEnumToMasks($mat,$bpp,$r,$g,$b,$a)
   Local $xSDL_PixelFormatEnumToMasks = DllCall($SDL,"bool:cdecl","SDL_PixelFormatEnumToMasks","uint",$mat,"ptr",$bpp,"ptr",$r,"ptr",$g,"ptr",$b,"ptr",$a)
   Return $xSDL_PixelFormatEnumToMasks[0]
EndFunc

Func SDL_SetPaletteColors($pal,$col,$first,$co2)
   Local $xSDL_SetPaletteColors = DllCall($SDL,"int:cdecl","SDL_SetPaletteColors","ptr",$pal,"ptr",$col,"int",$first,"int",$col2)
   Return $xSDL_SetPaletteColors[0]
EndFunc

Func SDL_SetPixelFormatPalette($mat,$pal)
   Local $xSDL_SetPixelFormatPalette = DllCall($SDL,"int:cdecl","SDL_SetPixelFormatPalette","ptr",$mat,"ptr",$pal)
   Return $xSDL_SetPixelFormatPalette[0]
EndFunc

;Rect functions
Func SDL_EnclosePoints($pt,$count,$xSDL_Rect,$xSDL_Rect2)
   Local $xSDL_EnclosePoints = DllCall($SDL,"bool:cdecl","SDL_EnclosePoints","ptr",$pt,"int",$count,"ptr",DllStructGetPtr($xSDL_Rect),"ptr",DllStructGetPtr($xSDL_Rect2))
   Return $xSDL_EnclosePoints[0]
EndFunc

Func SDL_HasIntersection($xSDL_Rect,$xSDL_Rect2)
   Local $xSDL_HasIntersection = DllCall($SDL,"bool:cdecl","SDL_HasIntersection","ptr",DllStructGetPtr($xSDL_Rect),"ptr",DllStructGetPtr($xSDL_Rect2))
   Return $xSDL_HasIntersection[0]
EndFunc

Func SDL_IntersectRect($xSDL_Rect,$xSDL_Rect2,$xSDL_Rect3)
   Local $xSDL_IntersectRect = DllCall($SDL,"bool:cdecl","SDL_IntersectRect","ptr",DllStructGetPtr($xSDL_Rect),"ptr",DllStructGetPtr($xSDL_Rect2),"ptr",DllStructGetPtr($xSDL_Rect3))
   Return $xSDL_IntersectRect[0]
EndFunc

Func SDL_IntersectRectAndLine($xSDL_Rect,$x,$y,$x2,$y2)
   Local $xSDL_IntersectRectAndLine = DllCall($SDL,"bool:cdecl","SDL_IntersectRectAndLine","ptr",DllStructGetPtr($xSDL_Rect),"ptr",$x,"ptr",$y,"ptr",$x2,"ptr",$y2)
   Return $xSDL_IntersectRectAndLine[0]
EndFunc

Func SDL_PointInRect($xSDL_Rect,$xSDL_Rect2)
   Local $xSDL_PointInRect = DllCall($SDL,"bool:cdecl","SDL_PointInRect","ptr",DllStructGetPtr($xSDL_Rect),"ptr",DllStructGetPtr($xSDL_Rect2))
   Return $xSDL_PointInRect[0]
EndFunc

Func SDL_RectEmpty($xSDL_Rect)
   Local $xSDL_RectEmpty = DllCall($SDL,"bool:cdecl","SDL_RectEmpty","ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_RectEmpty[0]
EndFunc

Func SDL_RectEquals($xSDL_Rect,$xSDL_Rect2)
   Local $xSDL_RectEquals = DllCall($SDL,"bool:cdecl","SDL_RectEquals","ptr",DllStructGetPtr($xSDL_Rect,"ptr",DllStructGetPtr($xSDL_Rect2))
   Return $xSDL_RectEquals[0]
EndFunc

Func SDL_UnionRect($xSDL_Rect,$xSDL_Rect2,$xSDL_Rect3)
   Local $xSDL_UnionRect = DllCall($SDL,"none:cdecl","SDL_UnionRect","ptr",DllStructGetPtr($xSDL_Rect),"ptr",DllStructGetPtr($xSDL_Rect2),"ptr",DllStructGetPtr($xSDL_Rect3))
   Return $xSDL_UnionRect[0]
EndFunc

;SDL RWops Functions

Func SDL_AllocRW()
   Local $xSDL_AllocRW = DllCall($SDL,"ptr:cdecl","SDL_AllocRW")
   Return $xSDL_AllocRW[0]
EndFunc

Func SDL_FreeRW($rw)
   Local $xSDL_FreeRW = DllCall($SDL,"none:cdecl","SDL_FreeRW","ptr",$rw)
   Return $xSDL_FreeRW[0]
EndFunc

Func SDL_RWFromConstMem($mem,$size)
   Local $xSDL_RWFromConstMem = DllCall($SDL,"ptr:cdecl","SDL_RWFromConstMem","ptr",$mem,"int",$size)
   Return $xSDL_RWFromConstMen[0]
EndFunc

Func SDL_RWFromFP($fp,$cls)
   Local $xSDL_RWFromFP = DllCall($SDL,"ptr:cdecl","SDL_RWFromFP","ptr",$fp,"bool",$cls)
   Return $xSDL_RWFromFP[0]
EndFunc

Func SDL_RWFromFile($file,$mode)
   Local $xSDL_RWFromFile = DllCall($SDL,"ptr:cdecl","ptr",$fp,"ptr",$mode)
   Return $xSDL_RWFromFile[0]
EndFunc

Func SDL_RWFromMem($mem,$size)
   Local $xSDL_RWFromMem = DllCall($SDL,"ptr:cdecl","SDL_RWFromMem","ptr",$mem,"int",$size)
   Return $xSDL_RWFromMen[0]
EndFunc

Func SDL_RWclose($ctx)
   Local $xSDL_RWclose = DllCall($SDL,"int:cdecl","SDL_RWclose","ptr",$ctx)
   Return $xSDL_RWclose[0]
EndFunc

Func SDL_RWread($ctx,$p,$size,$max)
   Local $xSDL_RWread = DllCall($SDL,"ulong_ptr:cdecl","SDL_RWread","ptr",$ctx,"ptr",$p,"ulong_ptr",$size,"ulong_ptr",$max)
   Return $xSDL_RWread[0]
EndFunc

Func SDL_RWseek($ctx,$off,$when)
   Local $xSDL_Rwseek = DllCall($SDL,"int64:cdecl","SDL_RWseek","ptr",$ctx,"int64",$off,"int",$when)
   Return $xSDL_RWseek[0]
EndFunc

Func SDL_RWsize($ctx)
   Local $xSDL_RWsize = DllCall($SDL,"int64:cdecl","SDL_RWsize","ptr",$ctx)
   Return $xSDL_RWsize[0]
EndFunc

Func SDL_RWtell($ctx)
   Local $xSDL_RWtell = DllCall($SDL,"int64:cdecl","SDL_RWtell","ptr",$ctx)
   Return $xSDL_RWtell[0]
EndFunc

Func SDL_RWwrite($ctx,$p,$size,$num)
   Local $xSDL_RWwrite = DllCall($SDL,"ulong_ptr:cdecl","SDL_RWwrite","ptr",$ctx,"ptr",$p,"ulong_ptr",$size,"ulong_ptr",$num)
   Return $xSDL_REwrite[0]
EndFunc

Func SDL_ReadBE16($src)
   Local $xSDL_ReadBE16 = DllCall($SDL,"uint:cdecl","SDL_ReadBE16","ptr",$src)
   Return $xSDL_ReadBE16[0]
EndFunc

Func SDL_ReadBE32($src)
   Local $xSDL_ReadBE32 = DllCall($SDL,"uint:cdecl","SDL_ReadBE32","ptr",$src)
   Return $xSDL_ReadBE32[0]
EndFunc

Func SDL_ReadBE64($src)
   Local $xSDL_ReadBE64 = DllCall($SDL,"uint:cdecl","SDL_ReadBE64","ptr",$src)
   Return $xSDL_ReadBE64[0]
EndFunc

Func SDL_ReadLE16($src)
   Local $xSDL_ReadLE16 = DllCall($SDL,"uint:cdecl","SDL_ReadLE16","ptr",$src)
   Return $xSDL_ReadLE16[0]
EndFunc

Func SDL_ReadLE32($src)
   Local $xSDL_ReadLE32 = DllCall($SDL,"uint:cdecl","SDL_ReadLE32","ptr",$src)
   Return $xSDL_ReadLE32[0]
EndFunc

Func SDL_ReadLE64($src)
   Local $xSDL_ReadLE64 = DllCall($SDL,"uint:cdecl","SDL_ReadLE64","ptr",$src)
   Return $xSDL_ReadLE64[0]
EndFunc

Func SDL_ReadU8($src)
   Local $xSDL_ReadU8 = DllCall($SDL,"uint:cdecl","SDL_ReadU8","ptr",$src)
   Return $xSDL_ReadU8[0]
EndFunc

Func SDL_WriteBE16($dst,$val)
   Local $xSDL_WriteBE16 = DllCall($SDL,"ulong_ptr:cdecl","SDL_WriteBE16","ptr",$dst,"uint",$val)
   Return $xSDL_WriteBE16[0]
EndFunc

Func SDL_WriteBE32($dst,$val)
   Local $xSDL_WriteBE32 = DllCall($SDL,"ulong_ptr:cdecl","SDL_WriteBE32","ptr",$dst,"uint",$val)
   Return $xSDL_WriteBE32[0]
EndFunc

Func SDL_WriteBE64($dst,$val)
   Local $xSDL_WriteBE64 = DllCall($SDL,"ulong_ptr:cdecl","SDL_WriteBE64","ptr",$dst,"uint",$val)
   Return $xSDL_WriteBE64[0]
EndFunc

Func SDL_WriteLE16($dst,$val)
   Local $xSDL_WriteLE16 = DllCall($SDL,"ulong_ptr:cdecl","SDL_WriteLE16","ptr",$dst,"uint",$val)
   Return $xSDL_WriteLE16[0]
EndFunc

Func SDL_WriteLE32($dst,$val)
   Local $xSDL_WriteLE32 = DllCall($SDL,"ulong_ptr:cdecl","SDL_WriteLE32","ptr",$dst,"uint",$val)
   Return $xSDL_WriteLE32[0]
EndFunc

Func SDL_WriteLE64($dst,$val)
   Local $xSDL_WriteLE64 = DllCall($SDL,"ulong_ptr:cdecl","SDL_WriteLE64","ptr",$dst,"uint",$val)
   Return $xSDL_WriteLE64[0]
EndFunc

Func SDL_WriteU8($dst,$val)
   Local $xSDL_WriteU8 = DllCall($SDL,"ulong_ptr:cdecl","SDL_WriteU8","ptr",$dst,"uint",$val)
   Return $xSDL_WriteU8[0]
EndFunc

Func SDL_LoadFile_RW($src,$size,$xfr)
   Local $xSDL_LoadFile_RW = DllCall($SDL,"none:cdecl","SDL_LoadFile_RW","ptr",$src,"ptr",$size,"int",$xfr)
EndFunc

;Surface Functions
Func SDL_BlitScaled($src,$xSDL_Rect,$dst,$xSDL_Rect2)
   Local $xSDL_BlitScaled = DllCall($SDL,"int:cdecl","SDL_BlitScaled","ptr",$src,"ptr",DllStructGetPtr($xSDL_Rect),"ptr",$dst,"ptr",DllStructGetPtr($xSDL_Rect2))
   Return $xSDL_BlitScaled[0]
EndFunc

Func SDL_BlitSurface($src,$xSDL_Rect,$dst,$xSDL_Rect2)
   Local $xSDL_BlitSurface = DllCall($SDL,"int:cdecl","SDL_BlitSurface","ptr",$src,"ptr",DllStructGetPtr($xSDL_Rect),"ptr",$dst,"ptr",DllStructGetPtr($xSDL_Rect2))
   Return $xSDL_BlitSurface[0]
EndFunc

Func SDL_ConvertPixels($w,$h,$mat,$src,$pit,$dst,$dst2,$pit2)
   Local $xSDL_ConvertPixels = DllCall($SDL,"int:cdecl","SDL_ConvertPixels","int",$w,"int",$h,"uint",$mat,"ptr",$src,"int",$pit,"uint",$dst,"ptr",$dst2,"int",$pit2)
   Return $xSDL_ConvertPixels[0]
EndFunc

Func SDL_ConvertSurface($src,$fmt,$flags)
   Local $xSDL_ConvertSurface = DllCall($SDL,"ptr:cdecl","SDL_ConvertSurface","ptr",$src,"ptr",$fmt,"uint",$flags)
   Return $xSDL_ConvertSurface[0]
EndFunc

Func SDL_ConvertSurfaceFormat($src,$pix,$flags)
   Local $xSDL_ConvertSurfaceFormat = DllCall($SDL,"ptr:cdecl","SDL_ConvertSurfaceFormat","ptr",$src,"uint",$pix,"uint",$flags)
   Return $xSDL_ConvertSurfaceFormat[0]
EndFunc

Func SDL_CreateRGBSurface($flags,$w,$h,$d,$rm,$gm,$bm,$am)
   Local $xSDL_CreateRGBSurface = DllCall($SDL,"ptr:cdecl","SDL_CreateRGBSurface","uint",$flags,"int",$w,"int",$h,"int",$d,"uint",$rm,"uint",$gm,"uint",$bm,"uint",$am)
   Return $xSDL_CreateRGBSurface[0]
EndFunc

Func SDL_CreateRGBSurfaceFrom($pix,$w,$h,$d,$rm,$gm,$bm,$am)
   Local $xSDL_CreateRGBSurfaceFrom = DllCall($SDL,"ptr:cdecl","SDL_CreateRGBSurfaceFrom","ptr",$pix,"int",$w,"int",$h,"int",$d,"uint",$rm,"uint",$gm,"uint",$bm,"uint",$am)
   Return $xSDL_CreateRGBSurfaceFrom[0]
EndFunc

Func SDL_CreateRGBSurfaceWithFormat($flags,$w,$h,$d,$mat)
   Local $xSDL_CreateRGBSurfaceWithFormat = DllCall($SDL,"ptr:cdecl","SDL_CreateRGBSurfaceWithFormat","uint",$flags,"int",$w,"int",$h,"int",$d,"uint",$mat)
   Return $xSDL_CreateRGBSurfaceWithFormat[0]
EndFunc

Func SDL_CreateRGBSurfaceWithFormatFrom($pix,$w,$h,$d,$pit,$mat)
   Local $xSDL_CreateRGBSurfaceWithFormatFrom = DllCall($SDL,"ptr:cdecl","SDL_CreateRGBSurfaceWithFormatFrom","ptr",$pix,"int",$w,"int",$h,"int",$d,"int",$pit,"uint",$mat)
   Return $xSDL_CreateRGBSurfaceWithFormatFrom[0]
EndFunc

Func SDL_FillRect($dst,$xSDL_Rect,$col)
   Local $xSDL_FillRect = DllCall($SDL,"int:cdecl","SDL_FillRect","ptr",$dst,"ptr",DllStructGetPtr($xSDL_Rect),"uint",$col)
   Return $xSDL_FillRect[0]
EndFunc

Func SDL_FillRects($dst,$xSDL_Rect,$count,$col)
   Local $xSDL_FillRects = DllCall($SDL,"int:cdecl","SDL_FillRects","ptr",$dst,"ptr",DllStructGetPtr($xSDL_Rect),"int",$count,"uint",$col)
   Return $xSDL_FillRects[0]
EndFunc

Func SDL_FreeSurface($surf)
   Local $xSDL_FreeSurface = DllCall($SDL,"none:cdecl","SDL_FreeSurface","ptr",$surf)
   Return $xSDL_FreeSurface[0]
EndFunc

Func SDL_GetClipRect($surf,$xSDL_Rect)
   Local $xSDL_GetClipRect = DllCall($SDL,"none:cdecl","SDL_GetClipRect","ptr",$surf,"ptr",DllStructGetPtr($xSDL_Rect)
   Return $xSDL_GetClipRect[0]
EndFunc

Func SDL_GetColorKey($surf,$key)
   Local $xSDL_GetColorKey = DllCall($SDL,"int:cdecl","SDL_GetColorKey","ptr",$surf,"ptr",$key)
   Return $xSDL_GetColorKey[0]
EndFunc

Func SDL_GetSurfaceAlphaMod($surf,$al)
   Local $xSDL_GetSurfaceAlphaMod = DllCall($SDL,"int:cdecl","SDL_GetSurfaceAlphaMod","ptr",$surf,"ptr",$al)
   Return $xSDL_GetSurfaceAlphaMod[0]
EndFunc

Func SDL_GetSurfaceBlendMode($surf,$blend)
   Local $xSDL_GetSurfaceBlendMode = DllCall($SDL,"int:cdecl","SDL_GetSurfaceBlendMode","ptr",$surf,"ptr",$blend)
   Return $xSDL_GetSurfaceBlendMode[0]
EndFunc

Func SDL_GetSurfaceColorMod($surf,$r,$g,$b)
   Local $xSDL_GetSurfaceColorMod = DllCall($SDL,"int:cdecl","SDL_GetSurfaceColorMod","ptr",$surf,"ptr",$r,"ptr",$g,"ptr",$b)
   Return $xSDL_GetSurfaceColorMod[0]
EndFunc

Func SDL_LoadBMP_RW($src,$xfree)
   Local $xSDL_LoadBMP_RW = DllCall($SDL,"ptr:cdecl","SDL_LoadBMP_RW","ptr",$src,"int",$xfree)
   Return $xSDL_LoadBMP_RW[0]
EndFunc

Func SDL_LoadBMP($file)
   Return SDL_LoadBMP_RW(SDL_RW_FromFile($file,"rb"),1)
EndFunc

Func SDL_SaveBMP_RW($surf,$dst,$xfree)
   Local $xSDL_SaveBMP_RW = DllCall($SDL,"int:cdecl","SDL_SaveBMP_RW","ptr",$surf,"ptr",$dst,"int",$xfree)
   Return $xSDL_SaveBMP_RW[0]
EndFunc

Func SDL_SaveBMP($surf,$file)
   Return SDL_SaveBMP_RW($surf,SDL_RWFromFile($file,"wb"),1)
EndFunc

Func SDL_LockSurface($surf)
   Local $xSDL_LockSurface = DllCall($SDL,"int:cdecl","SDL_LockSurface","ptr",$surf)
   Return $xSDL_LockSurface[0]
EndFunc

Func SDL_LowerBlit($src,$xSDL_Rect,$dst,$xSDL_Rect2)
   Local $xSDL_LowerBlit = DllCall($SDL,"int:cdecl","SDL_LowerBlit","ptr",$surf,"ptr",DllStructGetPtr($xSDL_Rect),"ptr",$dst,"ptr",DllStructGetPtr($xSDL_Rect2))
   Return $xSDL_LowerBlit[0]
EndFunc

Func SDL_LowerBlitScaled($src,$xSDL_Rect,$dst,$xSDL_Rect2)
   Local $xSDL_LowerBlitScaled = DllCall($SDL,"int:cdecl","SDL_LowerBlitScaled","ptr",$surf,"ptr",DllStructGetPtr($xSDL_Rect),"ptr",$dst,"ptr",DllStructGetPtr($xSDL_Rect2))
   Return $xSDL_LowerBlitScaled[0]
EndFunc

Func SDL_MUSTLOCK($surf)
   Local $xSDL_MUSTLOCK = DllCall($SDL,"bool:cdecl","SDL_MUSTLOCK","ptr",$surf)
   Return $xSDL_MUSTLOCK[0]
EndFunc

Func SDL_SetClipRect($surf,$xSDL_Rect)
   Local $xSDL_SetClipRect = DllCall($SDL,"bool:cdecl","SDL_SetClipRect","ptr",$surf,"ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_SetClipRect[0]
EndFunc

Func SDL_SetColorKey($surf,$flag,$key)
   Local $xSDL_SetColorKey = DllCall($SDL,"int:cdecl","SDL_SetColorKey","ptr",$surf,"int",$flag,"uint",$key)
   Return $xSDL_SetColorKey[0]
EndFunc

Func SDL_SetSurfaceAlphaMod($surf,$al)
   Local $xSDL_SetSurfaceAlphaMod = DllCall($SDL,"int:cdecl","SDL_SetSurfaceAlphaMod","ptr",$surf,"uint",$al)
   Return $xSDL_SetSurfaceAlphaMod[0]
EndFunc

Func SDL_SetSurfaceBlendMode($surf,$mode)
   Local $xSDL_SetSurfaceBlendMode = DllCall($SDL,"int:cdecl","SDL_SetSurfaceBlendMode","ptr",$surf,"ptr",$mode)
   Return $xSDL_SetSurfaceBlendMode[0]
EndFunc

Func SDL_SetSurfaceColorMod($surf,$r,$g,$b)
   Local $xSDL_SetSurfaceColorMod = DllCall($SDL,"int:cdecl","SDL_SetSurfaceColorMod","ptr",$surf,"uint",$r,"uint",$g,"uint",$b)
   Return $xSDL_SetSurfaceColorMod[0]
EndFunc

Func SDL_SetSurfacePalette($surf,$pal)
   Local $xSDL_SetSurfacePalette = DllCall($SDL,"int:cdecl","SDL_SetSurfacePalette","ptr",$surf,"ptr",$pal)
   Return $xSDL_SetSurfacePalette[0]
EndFunc

Func SDL_SetSurfaceRLE($surf,$flag)
   Local $xSDL_SetSurfaceRLE = DllCall($SDL,"int:cdecl","SDL_SetSurfaceRLE","ptr",$surf,"int",$flag)
   Return $xSDL_SetSurfaceRLE[0]
EndFunc

Func SDL_UnlockSurface($surf)
   Local $xSDL_UnlockSurface = DllCall($SDL,"none:cdecl","SDL_UnlockSurface","ptr",$surf)
   Return $xSDL_UnlockSurface[0]
EndFunc

Func SDL_HasColorKey($x)
   Local $xSDL_HasColorKey = DllCall($SDL,"bool:cdecl","SDL_HasColorKey","ptr",$x)
   Return $xSDL_HasColorKey[0]
EndFunc

Func SDL_UpperBlit($xSDL_Rect,$xSDL_Rect1,$xSDL_Rect2,$xSDL_Rect3)
   Local $xSDL_UpperBlit = DllCall($SDL,"int:cdecl","SDL_UpperBlit","ptr",DllStructGetPtr($xSDL_Rect),"ptr",DllStructGetPtr($xSDL_Rect1),"ptr",DllStructGetPtr($xSDL_REct2),"ptr",DllStructGetPtr($xSDL_Rect3))
   Return $xSDL_UpperBlit[0]
EndFunc

Func SDL_UpperBlitScaled($xSDL_Rect,$xSDL_Rect1,$xSDL_Rect2,$xSDL_Rect3)
   Local $xSDL_UpperBlitScaled = DllCall($SDL,"int:cdecl","SDL_UpperBlitScaled","ptr",DllStructGetPtr($xSDL_Rect),"ptr",DllStructGetPtr($xSDL_Rect1),"ptr",DllStructGetPtr($xSDL_Rect2),"ptr",DllStructGetPtr($xSDL_Rect3))
   Return $xSDL_UpperBlitScaled[0]
EndFunc

Func SDL_SetYUVConversionMode($x)
   Local $xSDL_SetYUVConversionMode = DllCall($SDL,"none:cdecl","SDL_SetYUVConversionMode","ptr",$x)
   ;Return $xSDL_SetYUVConversionMode[0]
EndFunc

Func SDL_GetYUVConversionMode()
   Local $xSDL_GetYUVConversionMode = DllCall($SDL,"ptr:cdecl","SDL_GetYUVConversionMode")
   Return $xSDL_GetYUVConversionMode[0]
EndFunc

;Func SDL_CreateRGBSurfaceWithFormat($flags,$w,$h,$d,$format)
 ;  Local $xSDL_CreateRGBSurfaceWithFormat = DllCall($SDL,"ptr:cdecl","SDL_CreateRGBSurfaceWithFormat","uint",$flags,"int",$w,"int",$h,"int",$d,"uint",$format)
  ; Return $xSDL_CreateRGBSurfaceWithFormat[0]
;EndFunc

;Func SDL_CreateRGBSurfaceFrom($pix,$w,$h,$d,$p,$r,$g,$b,$a)
 ;  Local $xSDL_CreateRGBSurfaceFrom = DllCall($SDL,"ptr:cdecl","SDL_CreateRGBSurfaceFrom","ptr",$pix,"int",$w,"int",$h,"int",$d,"int",$p,"uint",$r,"uint",$g,"uint",$b,"uint",$a)
  ; Return $xSDL_CreateRGBSurfaceFrom[0]
;EndFunc

;FileSystem Paths Functions
;Func SDL_GetBasePath()
 ;  Local $xSDL_GetBasePath = DllCall($SDL,"ptr:cdecl","SDL_GetBasePath")
 ;  Return $xSDL_GetBasePath[0]
;EndFunc

;SYSWM Function
;Duplicate?
;Func SDL_GetWindowWMInfo($win,$info)
 ;  Local $xSDL_GetWindowWMInfo = DllCall($SDL,"bool:cdecl","SDL_GetWindowWMInfo","ptr",$win,"ptr",$info)
  ; Return $xSDL_GetWindowWMInfo[0]
;EndFunc

;Clibpoard functions
Func SDL_GetClipboardText()
   Local $xSDL_GetClipboardText = DllCall($SDL,"ptr:cdecl","SDL_GetClipboardText")
   Return $xSDL_GetClipboardText[0]
EndFunc

Func SDL_HasClipboardText()
   Local $xSDL_HasClipboardText = DllCall($SDL,"bool:cdecl","SDL_HasClipboardText")
   Return $xSDL_HasClipboardText[0]
EndFunc

Func SDL_SetClipboardText($text)
   Local $xSDL_SetClipboardText = DllCall($SDL,"int:cdecl","SDL_SetClipboardText","ptr",$text)
   Return $xSDL_SetClipboardText[0]
EndFunc

;SDL Event Functions
Func SDL_AddEventWatch($filt,$dat)
   Local $xSDL_AddEventWatch = DllCall($SDL,"none:cdecl","SDL_AddEventWatch","ptr",$filt,"ptr",$dat)
   Return $xSDL_AddEventWatch[0]
EndFunc

Func SDL_DelEventWatch($filt,$dat)
   Local $xSDL_DelEventWatch = DllCall($SDL,"none:cdecl","SDL_DelEventWatch","ptr",$filt,"ptr",$dat)
   Return $xSDL_DelEventWatch[0]
EndFunc

Func SDL_EventState($type,$state)
   Local $xSDL_EventState = DllCall($SDL,"uint:cdecl","SDL_EventState","uint",$type,"int",$state)
   Return $xSDL_EventState[0]
EndFunc

Func SDL_FilterEvents($filt,$dat)
   Local $xSDL_FilterEvents = DllCall($SDL,"none:cdecl","SDL_FilterEvents","ptr",$filt,"ptr",$dat)
   Return $xSDL_FilterEvents[0]
EndFunc

Func SDL_FlushEvent($type)
   Local $xSDL_FlushEvent = DllCall($SDL,"none:cdecl","SDL_FlushEvent","uint",$type)
   Return $xSDL_FlushEvent[0]
EndFunc

Func SDL_FlushEvents($min,$max)
   Local $xSDL_FlushEvents = DllCall($SDL,"none:cdecl","SDL_FlushEvents","uint",$min,"uint",$max)
   Return $xSDL_FlushEvents[0]
EndFunc

Func SDL_GetEventFilter($filt,$dat)
   Local $xSDL_GetEventFilter = DllCall($SDL,"bool:cdecl","SDL_GetEventFilter","ptr",$filt,"ptr",$dat)
   Return $xSDL_GetEventFilter[0]
EndFunc

Func SDL_GetEventState($type)
   Local $xSDL_GetEventState = DllCall($SDL,"uint:cdecl","SDL_GetEventState","uint",$type)
   Return $xSDL_GetEventState[0]
EndFunc

Func SDL_GetNumTouchDevices()
   Local $xSDL_GetNumTouchDevices = DllCall($SDL,"int:cdecl","SDL_GetNumTouchDevices")
   Return $xSDL_GetNumTouchDevices[0]
EndFunc

Func SDL_GetNumTouchFingers($touch)
   Local $xSDL_GetNumTouchFingers = DllCall($SDL,"int:cdecl","SDL_GetNumTouchFingers","ptr",$touch)
   Return $xSDL_GetNumTouchFingers[0]
EndFunc

Func SDL_GetTouchDevice($idx)
   Local $xSDL_GetTouchDevice = DllCall($SDL,"ptr:cdecl","SDL_GetTouchDevice","int",$idx)
   Return $xSDL_GetTouchDevice[0]
EndFunc

Func SDL_GetTouchFinger($touch,$idx)
   Local $xSDL_GetTouchFinger = DllCall($SDL,"ptr:cdecl","SDL_GetTouchFinger","ptr",$touch,"int",$idx)
   Return $xSDL_GetTouchFinger[0]
EndFunc

Func SDL_HasEvent($type)
   Local $xSDL_HasEvent = DllCall($SDL,"bool:cdecl","SDL_HasEvent","uint",$type)
   Return $xSDL_HasEvent[0]
EndFunc

Func SDL_HasEvents($min,$max)
   Local $xSDL_HasEvents = DllCall($SDL,"bool:cdecl","SDL_HasEvents","uint",$min,"uint",$max)
   Return $xSDL_HasEvents[0]
EndFunc

Func SDL_LoadDollarTemplates($touch,$src)
   Local $xSDL_LoadDollarTemplates = DllCall($SDL,"int:cdecl","SDL_LoadDollarTemplates","ptr",$touch,"ptr",$src)
   Return $xSDL_LoadDollarTemplates[0]
EndFunc

Func SDL_PeepEvents($evt,$num,$act,$min,$max)
   Local $xSDL_PeepEvents = DllCall($SDL,"int:cdecl","SDL_PeepEvents","ptr",$evt,"int",$num,"ptr",$act,"uint",$min,"uint",$max)
   Return $xSDL_PeepEvents[0]
EndFunc

Func SDL_PollEvent($evt)
   Local $xSDL_PollEvent = DllCall($SDL,"int:cdecl","SDL_PollEvent","ptr",$evt)
   Return $xSDL_PollEvent[0]
EndFunc

Func SDL_PumpEvents()
   Local $xSDL_PumpEvents = DllCall($SDL,"none:cdecl","SDL_PumpEvents")
   Return $xSDL_PumpEvents[0]
EndFunc

Func SDL_PushEvent($evt)
   Local $xSDL_PushEvent = DllCall($SDL,"int:cdecl","SDL_PushEvents","ptr",$evt)
   Return $xSDL_PushEvent[0]
EndFunc

Func SDL_QuitRequested()
   Local $xSDL_QuitRequested = DllCall($SDL,"bool:cdecl","SDL_QuitRequested")
   Return $xSDL_QuitRequested[0]
EndFunc

Func SDL_RecordGesture($touch)
   Local $xSDL_RecordGesture = DllCall($SDL,"int:cdecl","SDL_RecordGesture","ptr",$touch)
   Return $xSDL_RecordGesture[0]
EndFunc

Func SDL_RegisterEvents($num)
   Local $xSDL_RegisterEvents = DllCall($SDL,"uint:cdecl","SDL_RegisterEvents","int",$num)
   Return $xSDL_RegisterEvents[0]
EndFunc

Func SDL_SaveAllDollarTemplates($src)
   Local $xSDL_SaveAllDollarTemplates = DllCall($SDL,"int:cdecl","SDL_SaveAllDollarTemplates","ptr",$src)
   Return $xSDL_SaveAllDollarTemplates[0]
EndFunc

Func SDL_SaveDollarTemplate($id,$dst)
   Local $xSDL_SaveDollarTemplate = DllCall($SDL,"int:cdecl","SDL_SaveDollarTemplate","ptr",$id,"ptr",$dst)
   Return $xSDL_SaveDollarTemplate[0]
EndFunc

Func SDL_SetEventFilter($filt,$dat)
   Local $xSDL_SetEventFilter = DllCall($SDL,"none:cdecl","SDL_SetEventFilter","ptr",$filt,"ptr",$dat)
   Return $xSDL_SetEventFilter[0]
EndFunc

Func SDL_WaitEvent($evt)
   Local $xSDL_WaitEvent = DllCall($SDL,"int:cdecl","SDL_WaitEvent","ptr",$evt)
   Return $xSDL_WaitEvent[0]
EndFunc

Func SDL_WaitEventTimeout($evt,$out)
   Local $xSDL_WaitEventTimeout = DllCall($SDL,"int:cdecl","SDL_WaitEventTimeout","ptr",$evt,"int",$out)
   Return $xSDL_WaitEventTimeout[0]
EndFunc

Func SDL_GetTouchDeviceType($x)
   Local $xSDL_GetTouchDeviceType = DllCall($SDL,"ptr:cdecl","SDL_GetTouchDeviceType","ptr",$x)
   Return $xSDL_GetTouchDeviceType[0]
EndFunc

;Keyboard functions
Func SDL_GetKeyFromName($name)
   Local $xSDL_GetKeyFromName = DllCall($SDL,"ptr:cdecl","SDL_GetKeyFromName","ptr",$name)
   Return $xSDL_GetKeyFromName[0]
EndFunc

Func SDL_GetKeyFromScancode($code)
   Local $xSDL_GetKeyFromScancode = DllCall($SDL,"ptr:cdecl","SDL_GetKeyFromScancode","ptr",$code)
   Return $xSDL_GetKeyFromScancode[0]
EndFunc

Func SDL_GetKeyName($code)
   Local $xSDL_GetKeyName = DllCall($SDL,"ptr:cdecl","SDL_GetKeyName","ptr",$code)
   Return $xSDL_GetKeyName[0]
EndFunc

Func SDL_GetKeyboardFocus()
   Local $xSDL_GetKeyboardFoucs = DllCall($SDL,"ptr:cdecl","SDL_GetKeyboardFocus")
   Return $xSDL_GetKeyboardFocus[0]
EndFunc

Func SDL_GetKeyboardState($num)
   Local $xSDL_GetKeyboardState = DllCall($SDL,"ptr:cdecl","SDL_GetKeyboardState","ptr",$num)
   Return $xSDL_GetKeyboardState[0]
EndFunc

Func SDL_GetModState()
   Local $xSDL_GetModState = DllCall($SDL,"ptr:cdecl","SDL_GetModState")
   Return $xSDL_GetModState[0]
EndFunc

Func SDL_GetScancodeFromKey($key)
   Local $xSDL_GetScancodeFromKey = DllCall($SDL,"ptr:cdecl","SDL_GetScancodeFromKey","ptr",$key)
   Return $xSDL_GetScancodeFromKey[0]
EndFunc

Func SDL_GetScancodeFromName($name)
   Local $xSDL_GetScancodeFromName = DllCall($SDL,"ptr:cdecl","SDL_GetScancodeFromName","ptr",$name)
   Return $xSDL_GetScancodeFromName[0]
EndFunc

Func SDL_GetScancodeName($code)
   Local $xSDL_GetScancodeName = DllCall($SDL,"ptr:cdecl","SDL_GetScancodeName","ptr",$code)
   Return $xSDL_GetScancodeName[0]
EndFunc

Func SDL_HasScreenKeyboardSupport()
   Local $xSDL_HasScreenKeyboardSupport = DllCall($SDL,"bool:cdecl","SDL_HasScreenKeyboardSupport")
   Return $xSDL_HasScreenKeyboardSupport[0]
EndFunc

Func SDL_IsScreenKeyboardShown($win)
   Local $xSDL_IsScreenKeyboardShown = DllCall($SDL,"bool:cdecl","SDL_IsScreenKeyboardShown","ptr",$win)
   Return $xSDL_IsScreenKeyboardShown[0]
EndFunc

Func SDL_IsTextInputActive()
   Local $xSDL_IsTextInputActive = DllCall($SDL,"bool:cdecl","SDL_IsTextInputActive")
   Return $xSDL_IsTextInputActive[0]
EndFunc

Func SDL_SetModState($mod)
   Local $xSDL_SetModState = DllCall($SDL,"none:cdecl","SDL_SetModState","ptr",$mod)
   Return $xSDL_SetModState[0]
EndFunc

Func SDL_SetTextInputRect($xSDL_Rect)
   Local $xSDL_SetTextInputRect = DllCall($SDL,"none:cdecl","SDL_SetTextInputRect","ptr",DllStructGetPtr($xSDL_Rect))
   Return $xSDL_SetTextInputRect[0]
EndFunc

Func SDL_StartTextInput()
   Local $xSDL_StartTextInput = DllCall($SDL,"none:cdecl","SDL_StartTextInput")
   Return $xSDL_StartTextInput[0]
EndFunc

Func SDL_StopTextInput()
   Local $xSDL_StopTextInput = DllCall($SDL,"none:cdecl","SDL_StopTextInput")
   Return $xSDL_StopTextInput[0]
EndFunc

;Mouse Functions
Func SDL_CaptureMouse($enable)
   Local $xSDL_CaptureMouse = DllCall($SDL,"int:cdecl","SDL_CaptureMouse","bool",$enable)
   Return $xSDL_CaptureMouse[0]
EndFunc

Func SDL_CreateColorCursor($surf,$x,$y)
   Local $xSDL_CreateColorCursor = DllCall($SDL,"ptr:cdecl","SDL_CreateColorCursor","ptr",$surf,"int",$x,"int",$y)
   Return $xSDL_CreateColorCursor[0]
EndFunc

Func SDL_CreateCursor($dat,$mas,$w,$h,$x,$y)
   Local $xSDL_CreateCursor = DllCall($SDL,"ptr:cdecl","SDL_Createcursor","ptr",$dat,"ptr",$mas,"int",$w,"int",$h,"int",$x,"int",$y)
   Return $xSDL_CreateCursor[0]
EndFunc

Func SDL_CreateSystemCursor($cur)
   Local $xSDL_CreateSystemCursor = DllCall($SDL,"ptr:cdecl","SDL_CreateSystemCursor","ptr",$cur)
   Return $xSDL_CreateSystemCursor[0]
EndFunc

Func SDL_FreeCursor($cur)
   Local $xSDL_FreeCursor = DllCall($SDL,"none:cdecl","SDL_FreeCursor","ptr",$cur)
   Return $xSDL_FreeCursor[0]
EndFunc

Func SDL_GetCursor()
   Local $xSDL_GetCursor = DllCall($SDL,"ptr:cdecl","SDL_GetCursor")
   Return $xSDL_GetCursor[0]
EndFunc

Func SDL_GetDefaultCursor()
   Local $xSDL_GetDefaultCursor = DllCall($SDL,"ptr:cdecl","SDL_GetDefaultCursor")
   Return $xSDL_GetDefaultCursor[0]
EndFunc

Func SDL_GetGlobalMouseState($x,$y)
   Local $xSDL_GetGlobalMouseState = DllCall($SDL,"uint:cdecl","SDL_GetGlobalMouseState","ptr",$x,"ptr",$y)
   Return $xSDL_GetGlobalMouseState[0]
EndFunc

Func SDL_GetMouseFoucs()
   Local $xSDL_GetMouseFocus = DllCall($SDL,"ptr:cdecl","SDL_GetMouseFocus")
   Return $xSDL_GetMouseFocus[0]
EndFunc

Func SDL_GetMouseState($x,$y)
   Local $xSDL_GetMouseState = DllCall($SDL,"uint:cdecl","SDL_GetMouseState","ptr",$x,"ptr",$y)
   Return $xSDL_GetMouseState[0]
EndFunc

Func SDL_GetRelativeMouseMode()
   Local $xSDL_GetRelativeMouseMod = DllCall($SDL,"bool:cdecl","SDL_GetRelativeMouseMode")
   Return $xSDL_GetRelativeMouseMod[0]
EndFunc

Func SDL_GetRelativeMouseState($x,$y)
   Local $xSDL_GetRelativeMouseState = DllCall($SDL,"uint:cdecl","SDL_GetRelativeMouseState","ptr",$x,"ptr",$y)
   Return $xSDL_GetRelativeMouseState[0]
EndFunc

Func SDL_SetCursor($cur)
   Local $xSDL_SetCursor = DllCall($SDL,"none:cdecl","SDL_SetCursor","ptr",$cur)
   Return $xSDL_SetCursor[0]
EndFunc

Func SDL_SetRelativeMouseMod($enable)
   Local $xSDL_SetRelativeMouseMod = DllCall($SDL,"int:cdecl","SDL_SetRelativeMouseMod","bool",$enable)
   Return $xSDL_SetRelativeMouseMod[0]
EndFunc

Func SDL_ShowCursor($tog)
   Local $xSDL_ShowCursor = DllCall($SDL,"int:cdecl","SDL_ShowCursor","int",$tog)
   Return $xSDL_ShowCursor[0]
EndFunc

Func SDL_WarpMouseGlobal($x,$y)
   Local $xSDL_WarpMouseGlobal = DllCall($SDL,"int:cdecl","int",$x,"int",$y)
   Return $xSDL_WarpMouseGlobal[0]
EndFunc

Func SDL_WarpMouseInWindow($win,$x,$y)
   Local $xSDL_WarpMouseInWindow = DllCall($SDL,"none:cdecl","SDL_WarpMouseInWindow","ptr",$win,"int",$x,"int",$y)
   Return $xSDL_WarpMouseInWindow[0]
EndFunc

;Joystick Functions
Func SDL_JoystickClose($joy)
   Local $xSDL_JoystickClose = DllCall($SDL,"none:cdecl","SDL_JoystickClose","ptr",$joy)
   Return $xSDL_JoystickClose[0]
EndFunc

Func SDL_JoystickCurrentPowerLevel($joy)
   Local $xSDL_JoystickCurrentPowerLevel = DllCall($SDL,"ptr:cdecl","SDL_JoystickCurrentPowerLevel","ptr",$joy)
   Return $xSDL_JoystickCurrentPowerLevel[0]
EndFunc

Func SDL_JoystickEventState($st)
   Local $xSDL_JoystickEventState = DllCall($SDL,"int:cdecl","SDL_JoystickEventState","int",$st)
   Return $xSDL_JoystickEventState[0]
EndFunc

Func SDL_JoystickFromInstanceID($joy)
   Local $xSDL_JoystickFromInstanceID = DllCall($SDL,"ptr:cdecl","SDL_JoystickFromInstanceID","ptr",$joy)
   Return $xSDL_JoystickFromInstanceID[0]
EndFunc

Func SDL_JoystickGetAttached($joy)
   Local $xSDL_JoystickGetAttached = DllCall($SDL,"bool:cdecl","SDL_JoystickGetAttached","ptr",$joy)
   Return $xSDL_JoystickGetAttached[0]
EndFunc

Func SDL_JoystickGetAxis($joy,$ax)
   Local $xSDL_JoystickGetAxis = DllCall($SDL,"short:cdecl","SDL_JoystickGetAxis","ptr",$joy,"int",$ax)
   Return $xSDL_JoystickGetAxis[0]
EndFunc

Func SDL_JoystickGetBall($joy,$ba,$x,$y)
   Local $xSDL_JoystickGetBall = DllCall($SDL,"int:cdecl","SDL_JoystickGetBall","ptr",$joy,"int",$ba,"ptr",$x,"ptr",$y)
   Return $xSDL_JoystickGetBall[0]
EndFunc

Func SDL_JoystickGetButton($joy,$btn)
   Local $xSDL_JoystickGetButton = DllCall($SDL,"uint:cdecl","SDL_JoystickGetButton","ptr",$joy,"int",$btn)
   Return $xSDL_JoystickGetButton[0]
EndFunc

Func SDL_JoystickGetDeviceGUID($dev)
   Local $xSDL_JoystickGetDeviceGUID = DllCall($SDL,"ptr:cdecl","SDL_JoystickGetDeviceGUID","int",$dev)
   Return $xSDL_JoystickGetDeviceGUID[0]
EndFunc

Func SDL_JoystickGetGUID($joy)
   Local $xSDL_JoystickGetGUID = DllCall($SDL,"ptr:cdecl","SDL_JoystickGetGUID","ptr",$joy)
   Return $xSDL_JoystickGetGUID[0]
EndFunc

Func SDL_JoystickGetGUIDFromString($sz)
   Local $xSDL_JoystickGetGUIDFromString = DllCall($SDL,"ptr:cdecl","SDL_JoystickGetGUIDFromString","ptr",$sz)
   Return $xSDL_JoystickGetGUIDFromString[0]
EndFunc

Func SDL_JoystickGetGUIDString($id,$ps,$cb)
   Local $xSDL_JoystickGetGUIDString = DllCall($SDL,"none:cdecl","SDL_JoystickGetGUIDString","ptr",$id,"ptr",$ps,"int",$cb)
   Return $xSDL_JoystickGetGUIDString[0]
EndFunc

Func SDL_JoystickGetHat($joy,$hat)
   Local $xSDL_JoystickGetHat = DllCall($SDL,"uint:cdecl","SDL_JoystickGetHat","ptr",$joy,"int",$hat)
   Return $xSDL_JoystickGetHat[0]
EndFunc

Func SDL_JoystickInstanceID($joy)
   Local $xSDL_JoystickInstanceID = DllCall($SDL,"ptr:cdecl","SDL_JoystickInstanceID","ptr",$joy)
   Return $xSDL_JoystickInstanceID[0]
EndFunc

Func SDL_JoystickName($joy)
   Local $xSDL_JoystickName = DllCall($SDL,"ptr:cdecl","SDL_JoystickName","ptr",$joy)
   Return $xSDL_JoystickName[0]
EndFunc

Func SDL_JoystickNameForIndex($dev)
   Local $xSDL_JoystickNameForIndex = DllCall($SDL,"ptr:cdecl","SDL_JoystickNameForIndex","int",$dev)
   Return $xSDL_JoystickNameForIndex[0]
EndFunc

Func SDL_JoystickNumAxes($joy)
   Local $xSDL_JoystickNumAxes = DllCall($SDL,"int:cdecl","SDL_JoystickNumAxes","ptr",$joy)
   Return $xSDL_JoystickNumAxes[0]
EndFunc

Func SDL_JoystickNumBalls($joy)
   Local $xSDL_JoystickNumBalls = DllCall($SDL,"int:cdecl","SDL_JoystickNumBalls","ptr",$joy)
   Return $xSDL_JoystickNumBalls[0]
EndFunc

Func SDL_JoystickNumButtons($joy)
   Local $xSDL_JoystickNumButtons = DllCall($SDL,"int:cdecl","SDL_JoystickNumButtons","ptr",$joy)
   Return $xSDL_JoystickNumButtons[0]
EndFunc

Func SDL_JoystickNumHats($joy)
   Local $xSDL_JoystickNumHats = DllCall($SDL,"int:cdecl","SDL_JoystickNumHats","ptr",$joy)
   Return $xSDL_JoystickNumHats[0]
EndFunc

Func SDL_JoystickOpen($dev)
   Local $xSDL_JoystickOpen = DllCall($SDL,"ptr:cdecl","SDL_JoystickOpen","int",$dev)
   Return $xSDL_JoystickOpen[0]
EndFunc

Func SDL_JoystickUpdate()
   Local $xSDL_JoystickUpdate = DllCall($SDL,"none:cdecl","SDL_JoystickUpdate")
   Return $xSDL_JoystickUpdate[0]
EndFunc

Func SDL_NumJoysticks()
   Local $xSDL_NumJoysticks = DllCall($SDL,"int:cdecl","SDL_NumJoysticks")
   Return $xSDL_NumJoysticks[0]
EndFunc

Func SDL_JoystickGetDevicePlayerIndex($idx)
   Local $xSDL_JoystickGetDevicePlayerIndex = DllCall($SDL,"int:cdecl","SDL_JoystickGetDevicePlayerIndex","int",$idx)
   Return $xSDL_JoystickGetDevicePlayerIndex[0]
EndFunc

Func SDL_JoystickGetDeviceVendor($idx)
   Local $xSDL_JoystickGetDeviceVendor = DllCall($SDL,"uint:cdecl","SDL_JoystickGetDeviceVendor","int",$idx)
   Return $xSDL_JoystickGetDeviceVendor[0]
EndFunc

Func SDL_JoystickGetDeviceProduct($idx)
   Local $xSDL_JoystickGetDeviceProduct = DllCall($SDL,"uint:cdecl","SDL_JoystickGetDeviceProduct","int",$idx)
   Return $xSDL_JoystickGetDeviceProduct[0]
EndFunc

Func SDL_JoystickGetDeviceProductVersion($idx)
   Local $xSDL_JoystickGetDeviceProductVersion = DllCall($SDL,"uint:cdecl","SDL_JoystickGetDeviceProductVersion","int",$idx)
   Return $xSDL_JoystickGetDeviceProductVersion[0]
EndFunc

Func SDL_JoystickGetProduct($joy)
   Local $xSDL_JoystickGetProduct = DllCall($SDL,"uint:cdecl","SDL_JoystickGetProduct","ptr",$joy)
   Return $xSDL_JoystickGetProduct[0]
EndFunc

Func SDL_JoystickGetProductVersion($joy)
   Local $xSDL_JoystickGetProductVersion = DllCall($SDL,"unint:cdecl","SDL_JoystickGetProductVersion","ptr",$joy)
   Return $xSDL_JoystickGetProductVersion[0]
EndFunc

Func SDL_JoystickGetAxisInitialState($joy,$axis,$state)
   Local $xSDL_JoystickGetAxisInitialState = DllCall($SDL,"bool:cdecl","SDL_JoystickGetAxisInitialState","ptr",$joy,"int",$axis,"ptr",$state)
   Return $xSDL_JoystickGetAxisInitialState[0]
EndFunc

Func SDL_LockJoysticks()
   Local $xSDL_LockJoysticks = DllCall($SDL,"none:cdecl","SDL_LockJoysticks")
EndFunc

Func SDL_UnlockJoysticks()
   Local $xSDL_UnlockJoysticks = DllCall($SDL,"none:cdecl","SDL_UnlockJoysticks")
EndFunc

func SDL_JoystickRumble($joy,$low,$high,$dur)
   Local $xSDL_JoystickRumble = DllCall($SDL,"int:cdecl","SDL_JoystickRumble","ptr",$joy,"uint",$low,"uint",$high,"uint",$dur)
   Return $xSDL_JoystickRumble[0]
EndFunc

;Joystick Functions from SDL 2.0.12
Func SDL_JoystickFromPlayerIndex($joy)
   Local $xSDL_JoystickFromPlayerIndex = DllCall("uint:cdecl","SDL_JoystickFromPlayerIndex","int",$joy)
   Return $xSDL_JoystickFromPlayerIndex[0]
EndFunc

Func SDL_JoystickSetPlayerIndex($joy,$idx)
   $xSDL_JoystickSetPlayerIndex = DllCall("none:cdecl","SDL_JoystickSetPlayerIndex","ptr",$joy,"int",$idx)
EndFunc

;Virtual Joystick Functions from SDL 2.0.14
Func SDL_JoystickAttachVirtual($joy,$nax,$btns,$hats)
   $xSDL_JoystickAttachVirtual = DllCall("int:cdecl","SDL_JoystickAttachVirtual","uint",$joy,"int",$nax,"int",$btns,"int",$hats)
   Return $xSDL_JoystickAttachVirtual[0]
EndFunc

Func SDL_JoystickDetachVirtual($joy)
   $xSDL_JoystickDetachVirtual = DllCall("int:cdecl","SDL_JoystickDetachVirtual","int",$joy)
   Return $xSDL_JoystickDetachVirtual[0]
EndFunc

Func SDL_JoystickIsVirtual($joy)
   $xSDL_JoystickIsVirtual = DllCall("bool:cdecl","SDL_JoystickIsVirtual","int",$joy)
   Return $xSDL_JoystickIsVirtual[0]
EndFunc

Func SDL_JoystickSetVirtualAxis($x,$x2,$x3)
   $xSDL_JoystickSetVirtualAxis = DllCall("int:cdecl","SDL_JoystickSetVirtualAxis","ptr",$x,"int",$x2,"uint",$x3)
   Return $xSDL_JoystickSetVirtualAxis[0]
EndFunc

Func SDL_JoystickSetVirtualButton($p,$i,$ui)
   $xSDL_JoystickSetVirtualButton = DllCall("int:cdecl","SDL_JoystickSetVirtualButton","ptr",$p,"int",$i,"uint",$ui)
   Return $xSDL_JoystickSetVirtualButton[0]
EndFunc

Func SDL_JoystickSetVirtualHat($p,$i,$ui)
   $xSDL_JoystickSetVirtualHat = DllCall("int:cdecl","SDL_JoystickSetVirtualHat","ptr",$p,"int",$i,"uint",$ui)
   Return $xSDL_JoystickSetVirtualHat[0]
EndFunc


;GameController Functions
Func SDL_GameControllerAddMapping($map)
   Local $xSDL_GameControllerAddMapping = DllCall($SDL,"int:cdecl","SDL_GameControllerAddMapping","ptr",$map)
   Return $xSDL_GameControllerAddMapping[0]
EndFunc

Func SDL_GameControllerAddMappingsFromFile($file)
   Local $xSDL_GCAddMappingsFromFile = DllCall($SDL,"int:cdecl","SDL_GameControllerAddMappingsFromFile","ptr",$file)
   Return $xSDL_GCAddMappingsFromFile[0]
EndFunc

Func SDL_GameControllerAddMappingsFromRW($src,$x)
   Local $xSDL_GCAddMappingsFromRW = DllCall($SDL,"int:cdecl","SDL_GameControllerAddMappingsFromRW","ptr",$src,"int",$x)
   Return $xSDL_GCAddMappingsFromRW[0]
EndFunc

Func SDL_GameControllerClose($gc)
   Local $xSDL_GCClose = DllCall($SDL,"none:cdecl","SDL_GameControllerClose","ptr",$gc)
   Return $xSDL_GCClose[0]
EndFunc

Func SDL_GameControllerEventState($st)
   Local $xSDL_GCEventState = DllCall($SDL,"int:cdecl","SDL_GameControllerEventState","int",$st)
   Return $xSDL_GCEventState[0]
EndFunc

Func SDL_GameControllerFromInstanceID($gc)
   Local $xSDL_GCFromInstanceID = DllCall($SDL,"ptr:cdecl","SDL_GameControllerFromInstanceID","ptr",$gc)
   Return $xSDL_GCFromInstanceID[0]
EndFunc

Func SDL_GameControllerGetAttached($gc)
   Local $xSDL_GameControllerGetAttached = DllCall($SDL,"bool:cdecl","SDL_GameControllerGetAttached","ptr",$gc)
   Return $xSDL_GameControllerGetAttached[0]
EndFunc

Func SDL_GameControllerGetAxis($gc,$ax)
   Local $xSDL_GCGetAxis = DllCall($SDL,"short:cdecl","SDL_GameControllerGetAxis","ptr",$gc,"ptr",$ax)
   Return $xSDL_GCGetAxis[0]
EndFunc

Func SDL_GameControllerGetAxisFromString($sz)
   Local $xSDL_GCGetAxisFromString = DllCall($SDL,"ptr:cdecl","SDL_GameControllerGetAxisFromString","ptr",$sz)
   Return $xSDL_GCGetAxisFromString[0]
EndFunc

Func SDL_GameControllerGetBindForAxis($gc,$ax)
   Local $xSDL_GCGetBindForAxis = DllCall($SDL,"ptr:cdecl","SDL_GameControllerGetBindForAxis","ptr",$gc,"ptr",$ax)
   Return $xSDL_GCGetBindForAxis[0]
EndFunc

Func SDL_GameControllerButtonBind($gc,$btn)
   Local $xSDL_GCButtonBind = DllCall($SDL,"ptr:cdecl","SDL_GameControllerButtonBind","ptr",$gc,"ptr",$btn)
   Return $xSDL_GCButtonBind[0]
EndFunc

Func SDL_GameControllerGetButton($gc,$btn)
   Local $xSDL_GCGetButton = DllCall($SDL,"uint:cdecl","SDL_GameControllerGetButton","ptr",$gc,"ptr",$btn)
   Return $xSDL_GCGetButton[0]
EndFunc

Func SDL_GameControllerGetButtonFromString($sz)
   Local $xSDL_GCGetButtonFromString = DllCall($SDL,"ptr:cdecl","SDL_GameControllerGetButtonFromString","ptr",$sz)
   Return $xSDL_GCGetButtonFromString[0]
EndFunc

Func SDL_GameControllerGetJoystick($gc)
   Local $xSDL_GCGetJoystick = DllCall($SDL,"ptr:cdecl","SDL_GameControllerGetJoystick","ptr",$gc)
   Return $xSDL_GCGetJoystick[0]
EndFunc

Func SDL_GameControllerGetStringForAxis($sz)
   Local $xSDL_GCGetStringForAxis = DllCall($SDL,"ptr:cdecl","SDL_GameControllerGetStringForAxis","ptr",$sz)
   Return $xSDL_GCGetStringForAxis[0]
EndFunc

Func SDL_GameControllerGetStringForButton($sz)
   Local $xSDL_GCGetStringForButton = DllCall($SDL,"ptr:cdecl","SDL_GameControllerGetStringForButton","ptr",$sz)
   Return $xSDL_GCGetStringForButton[0]
EndFunc

Func SDL_GameControllerMapping($gc)
   Local $xSDL_GCMapping = DllCall($SDL,"ptr:cdecl","SDL_GameControllerMapping","ptr",$gc)
   Return $xSDL_GCMapping[0]
EndFunc

Func SDL_GameControllerMappingForGUID($joy)
   Local $xSDL_GCMappingForGUID = DllCall($SDL,"ptr:cdecl","SDL_GameControllerMappingForGUID","ptr",$joy)
   Return $xSDL_GCMappingForGUID[0]
EndFunc

Func SDL_GameControllerName($gc)
   Local $xSDL_GameControllerName = DllCall($SDL,"ptr:cdecl","SDL_GameControllerName","ptr",$gc)
   Return $xSDL_GameControllerName[0]
EndFunc

Func SDL_GameControllerNameForIndex($joy)
   Local $xSDL_GameControllerNameForIndex = DllCall($SDL,"ptr:cdecl","SDL_GameControllerNameForIndex","int",$joy)
   Return $xSDL_GameControllerNameForIndex[0]
EndFunc

Func SDL_GameControllerOpen($joy)
   Local $xSDL_GCOpen = DllCall($SDL,"ptr:cdecl","SDL_GameControllerOpen","int",$joy)
   Return $xSDL_GCOpen[0]
EndFunc

Func SDL_GameControllerUpdate()
   Local $xSDL_GCUpdate = DllCall($SDL,"none:cdecl","SDL_GameControllerUpdate")
   Return $xSDL_GCUpdate[0]
EndFunc

Func SDL_IsGameController($joy)
   Local $xSDL_IsGC = DllCall($SDL,"bool:cdecl","SDL_IsGameController","int",$joy)
   Return $xSDL_IsGC[0]
EndFunc

;More GameController Funcs (2.0.12)
Func SDL_GameControllerTypeForIndex($g)
   Local $xSDL_GameControllerTypeForIndex = DllCall($SDL,"uint:cdecl","SDL_GameControllerTypeForIndex","int",$g)
   Return $xSDL_GameControllerTypeForIndex[0]
EndFunc

Func SDL_GameControllerGetType($g)
   Local $xSDL_GameControllerGetType = DllCall("uint:cdecl","SDL_GameControllerGetType","ptr",$g)
   Return $xSDL_GameControllerGetType[0]
EndFunc

Func SDL_GameControllerFromPlayerIndex($g)
   Local $xSDL_GameControllerFromPlayerIndex = DllCall("uint:cdecl","SDL_GameControllerFromPlayrIndex","int",$g)
   Return $xSDL_GameControllerFromPlayerIndex[0]
EndFunc

Func SDL_GameControllerSetPlayerIndex($g,$i)
   Local $xSDL_GameControllerSetPlayerIndex = DllCall("none:cdecl","SDL_GameControllerSetPlayerIndex","ptr",$g,"int",$i)
EndFunc



;Force Feedback Functions

Func SDL_HapticClose($hap)
   Local $xSDL_HapticClose = DllCall($SDL,"none:cdecl","SDL_HapticClose","ptr",$hap)
   Return $xSDL_HapticClose[0]
EndFunc

Func SDL_HapticDestroyEffect($hap,$eft)
   Local $xSDL_HapticDestroyEffect = DllCall($SDL,"none:cdecl","SDL_HapticDestroyEffect","ptr",$hap,"int",$eft)
   Return $xSDL_HapticDestroyEffect[0]
EndFunc

Func SDL_HapticEffectSupported($hap,$eft)
   Local $xSDL_HapticEffectSupported = DllCall($SDL,"int:cdecl","SDL_HapticEffectSupported","ptr",$hap,"ptr",$eft)
   Return $xSDL_HapticEffectSupported[0]
EndFunc

Func SDL_HapticGetEffectStatus($hap,$eft)
   Local $xSDL_HapticGetEffectStatus = DllCall($SDL,"int:cdecl","SDL_HapticGetEffectStatus","ptr",$hap,"int",$eft)
   Return $xSDL_HapticGetEffectStatus[0]
EndFunc

Func SDL_HapticIndex($hap)
   Local $xSDL_HapticIndex = DllCall($SDL,"int:cdecl","SDL_HapticIndex","ptr",$hap)
   Return $xSDL_HapticIndex[0]
EndFunc

Func SDL_HapticName($idx)
   Local $xSDL_HapticName = DllCall($SDL,"ptr:cdecl","SDL_HapticName","int",$idx)
   Return $xSDL_HapticName[0]
EndFunc

Func SDL_HapticNewEffect($hap,$eft)
   Local $xSDL_HapticNewEffect = DllCall($SDL,"int:cdecl","SDL_HapticNewEffect","ptr",$hap,"ptr",$eft)
   Return $xSDL_HapticNewEffect[0]
EndFunc

Func SDL_HapticNumAxes($hap)
   Local $xSDL_HapticNumAxes = DllCall($SDL,"int:cdecl","SDL_HapticNumAxes","ptr",$hap)
   Return $xSDL_HapticNumAxes[0]
EndFunc

Func SDL_HapticNumEffects($hap)
   Local $xSDL_HapticNumEffects = DllCall($SDL,"int:cdecl","SDL_HapticNumEffects","ptr",$hap)
   Return $xSDL_HapticNumEffects[0]
EndFunc

Func SDL_HapticNumEffectsPlaying($hap)
   Local $xSDL_HapticNumEffectsPlaying = DllCall($SDL,"int:cdecl","SDL_HapticNumEffectsPlaying","ptr",$hap)
   Return $xSDL_HapticNumEffectsPlaying[0]
EndFunc

Func SDL_HapticOpen($idx)
   Local $xSDL_HapticOpen = DllCall($SDL,"ptr:cdecl","SDL_HapticOpen","int",$idx)
   Return $xSDL_HapticOpen[0]
EndFunc

Func SD_HapticOpenFromJoystick($joy)
   Local $xSDL_HapticOpenFromJoystick = DllCall($SDL,"ptr:cdecl","SDL_HapticOpenFromJoystick","ptr",$joy)
   Return $xSDL_HapticOpenFromJoystick[0]
EndFunc

Func SDL_HapticOpenFromMouse()
   Local $xSDL_HapticOpenFromMouse = DllCall($SDL,"ptr:cdecl","SDL_HapticOpenFromMouse")
   Return $xSDL_HapticOpenFromMouse[0]
EndFunc

Func SDL_HapticOpened($idx)
   Local $xSDL_HapticOpened = DllCall($SDL,"int:cdecl","SDL_HapticOpened","int",$idx)
   Return $xSDL_HapticOpened[0]
EndFunc

Func SDL_HapticPause($hap)
   Local $xSDL_HapticPause = DllCall($SDL,"int:cdecl","SDL_HapticPause","ptr",$hap)
   Return $xSDL_HapticPause[0]
EndFunc

Func SDL_HapticQuery($hap)
   Local $xSDL_HapticQuery = DllCall($SDL,"uint:cdecl","SDL_HapticQuery","ptr",$hap)
   Return $xSDL_HapticQuery[0]
EndFunc

Func SDL_HapticRumbleInit($hap)
   Local $xSDL_HapticRumbleInit = DllCall($SDL,"int:cdecl","SDL_HapticRumbleInit","ptr",$hap)
   Return $xSDL_HapticRumbleInit[0]
EndFunc

Func SDL_HapticRumblePlay($hap,$str,$len)
   Local $xSDL_HapticRumblePlay = DllCall($SDL,"int:cdecl","SDL_HapticRumblePlay","ptr",$hap,"float",$str,"uint",$len)
   Return $xSDL_HapticRumblePlay[0]
EndFunc

Func SDL_HapticRumbleStop($hap)
   Local $xSDL_HapticRumbleStop = DllCall($SDL,"int:cdecl","SDL_HapticRumbleStop","ptr",$hap)
   Return $xSDL_HapticRumbleStop[0]
EndFunc

Func SDL_HapticRumbleSupported($hap)
   Local $xSDL_HapticRumbleSupported = DllCall($SDL,"int:cdecl","SDL_HapticRumbleSupported","ptr",$hap)
   Return $xSDL_HapticRumbleSupported[0]
EndFunc

Func SDL_HapticRunEffect($hap,$eft,$it)
   Local $xSDL_HapticRunEffect = DllCall($SDL,"int:cdecl","SDL_HapticRunEffect","ptr",$hap,"int",$eft,"uint",$it)
   Return $xSDL_HapticRunEffect[0]
EndFunc

Func SDL_HapticSetAutocenter($hap,$at)
   Local $xSDL_HapticSetAutocenter = DllCall($SDL,"int:cdecl","SDL_HapticSetAutocenter","ptr",$hap,"int",$at)
   Return $xSDL_HapticSetAutocenter[0]
EndFunc

Func SDL_HapticSetGain($hap,$gn)
   Local $xSDL_HapticSetGain = DllCall($SDL,"int:cdecl","SDL_HapticSetGain","ptr",$hap,"int",$gn)
   Return $xSDL_HapticSetGain[0]
EndFunc

Func SDL_HapticStopAll($hap)
   Local $xSDL_HapticStopAll = DllCall($SDL,"int:cdecl","SDL_HapticStopAll","ptr",$hap)
   Return $xSDL_HapticStopAll[0]
EndFunc

Func SDL_HapticStopEffect($hap,$eft)
   Local $xSDL_HapticStopEffect = DllCall($SDL,"int:cdecl","SDL_HapticStopEffect","ptr",$hap,"int",$eft)
   Return $xSDL_HapticStopEffect[0]
EndFunc

Func SDL_HapticUnpause($hap)
   Local $xSDL_HapticUnpause = DllCall($SDL,"int:cdecl","SDL_HapticUnpause","ptr",$hap)
   Return $xSDL_HapticUnpause[0]
EndFunc

Func SDL_HapticUpdateEffect($hap,$eft,$dat)
   Local $xSDL_HapticUpdateEffect = DllCall($SDL,"int:cdecl","SDL_HapticUpdateEffect","ptr",$hap,"int",$eft,"ptr",$dat)
   Return $xSDL_HapticUpdateEffect[0]
EndFunc

Func SDL_JoystickIsHaptic($joy)
   Local $xSDL_JoystickIsHaptic = DllCall($SDL,"int:cdecl","SDL_JoystickIsHaptic","ptr",$joy)
   Return $xSDL_JoystickIsHaptic[0]
EndFunc

Func SDL_MouseIsHaptic()
   Local $xSDL_MouseIsHaptic = DllCall($SDL,"int:cdecl","SDL_MouseIsHaptic")
   Return $xSDL_MouseIsHaptic[0]
EndFunc

Func SDL_NumHaptics()
   Local $xSDL_NumHaptics = DllCall($SDL,"int:cdecl","SDL_NumHaptics")
   Return $xSDL_NumHaptics[0]
EndFunc

;Audio functions

Func SDL_AudioInit($name)
   Local $xSDL_AudioInit = DllCall($SDL,"int:cdecl","SDL_AudioInit","str",$name)
   Return $xSDL_AudioInit[0]
EndFunc

Func SDL_AudioQuit()
   Local $xSDL_AudioQuit = DllCall($SDL,"none:cdecl","SDL_AudioQuit")
   Return $xSDL_AudioQuit[0]
EndFunc

Func SDL_BuildAudioCVT($cvt,$src,$src_chan,$src_rate,$dst,$dst_chan,$dst_rat)
   Local $xSDL_BuildAudioCVT = DllCall($SDL,"int:cdecl","SDL_BuildAudioCVT","ptr",$cvt,"ptr",$src,"uint",$src_chan,"int",$src_rate,"ptr",$dst,"uint",$dst_chan,"int",$dst_rat)
   Return $xSDL_BuildAudioCVT[0]
EndFunc

Func SD_ClearQueuedAudio($dev)
   Local $xSDL_ClearQueuedAudio = DllCall($SDL,"none:cdecl","SDL_ClearQueuedAudio","ptr",$dev)
   Return $xSDL_ClearQueuedAudio[0]
EndFunc

Func SDL_CloseAudio()
   Local $xSDL_CloseAudio = DllCall($SDL,"none:cdecl","SDL_CloseAudio")
   Return $xSDL_CloseAudio[0]
EndFunc

Func SDL_CloseAudioDevice($dev)
   Local $xSDL_CloseAudioDevice = DllCall($SDL,"none:cdecl","SDL_CloseAudioDevice","ptr",$dev)
   Return $xSDL_CloseAudioDevice[0]
EndFunc

Func SDL_ConvertAudio($cvt)
   Local $xSDL_ConvertAudio = DllCall($SDL,"int:cdecl","SDL_ConvertAudio","ptr",$cvt)
   Return $xSDL_ConvertAudio[0]
EndFunc

Func SDL_DequeueAudio($dev,$dat,$len)
   Local $xSDL_DequeueAudio = DllCall($SDL,"uint:cdecl","SDL_DequeueAudio","ptr",$dev,"ptr",$dat,"uint",$len)
   Return $xSDL_DequeueAudio[0]
EndFunc

Func SDL_FreeWAV($buf)
   Local $xSDL_FreeWAV = DllCall($SDL,"none:cdecl","SDL_FreeWAV","ptr",$buf)
   Return $xSDL_FreeWAV[0]
EndFunc

Func SDL_GetAudioDeviceName($idx,$iscap)
   Local $xSDL_GetAudioDeviceName = DllCall($SDL,"ptr:cdecl","SDL_GetAudioDeviceName","int",$idx,"int",$iscap)
   Return $xSDL_GetAudioDeviceName[0]
EndFunc

Func SDL_GetAudioDeviceStatus($aud)
   Local $xSDL_GetAudioDeviceStatus = DllCall($SDL,"ptr:cdecl","SDL_GetAudioDeviceStatus","ptr",$aud)
   Return $xSDL_GetAudioDeviceStatus[0]
EndFunc

Func SDL_GetAudioDriver($idx)
   Local $xSDL_GetAudioDriver = DllCall($SDL,"ptr:cdecl","SDL_GetAudioDriver","int",$idx)
   Return $xSDL_GetAudioDriver[0]
EndFunc

Func SDL_GetAudioStatus()
   Local $xSDL_GetAudioStatus = DllCall($SDL,"ptr:cdecl","SDL_GetAudioStatus")
   Return $xSDL_GetAudioStatus[0]
EndFunc

Func SDL_GetCurrentAudioDriver()
   Local $xSDL_GetCurrentAudioDriver = DllCall($SDL,"ptr:cdecl","SDL_GetCurrentAudioDriver")
   Return $xSDL_GetCurrentAudioDriver[0]
EndFunc

Func SDL_GetNumAudioDevices($iscap)
   Local $xSDL_GetNumAudioDevices = DllCall($SDL,"int:cdecl","SDL_GetNumAudioDevices","int",$iscap)
   Return $xSDL_GetNumAudioDevices[0]
EndFunc

Func SDL_GetNumAudioDrivers()
   Local $xSDL_GetNumAudioDrivers = DllCall($SDL,"int:cdecl","SDL_GetNumAudioDrivers")
   Return $xSDL_GetNumAudioDrivers[0]
EndFunc

Func SDL_GetQueuedAudioSize($dev)
   Local $xSDL_GetQueuedAudioSize = DllCall($SDL,"uint:cdecl","SDL_GetQueuedAudioSize","ptr",$dev)
   Return $xSDL_GetQueuedAudioSize[0]
EndFunc

Func SDL_LoadWAV($file,$spc,$buf,$len)
   Local $xSDL_LoadWAV = DllCall($SDL,"ptr:cdecl","SDL_LoadWAV",SDL_RWFromFile($file,"rb"),1,"ptr",$spc,"ptr",$buf,"ptr",$len)
   Return $xSDL_LoadWAV[0]
EndFunc

Func SDL_LoadWAV_RW($src,$xfree,$spec,$buf,$len)
   Local $xSDL_LoadWAV_RW = DllCall($SDL,"ptr:cdecl","SDL_LoadWAV_RW","ptr",$src,"int",$xfree,"ptr",$spec,"ptr",$buf,"ptr",$len)
   Return $xSDL_LoadWAV_RW[0]
EndFunc

Func SDL_LockAudio()
   Local $xSDL_LockAudio = DllCall($SDL,"none:cdecl","SDL_LockAudio")
   Return $xSDL_LockAudio[0]
EndFunc

Func SDL_LockAudioDevice($aud)
   Local $xSDL_LockAudioDevice = DllCall($SDL,"none:cdecl","SDL_LockAudioDevice","ptr",$aud)
   Return $xSDL_LockAudioDevice[0]
EndFunc

Func SDL_MixAudio($dst,$src,$len,$vol)
   Local $xSDL_MixAudio = DllCall($SDL,"none:cdecl","SDL_MixAudio","ptr",$dst,"ptr",$src,"uint",$len,"int",$vol)
   Return $xSDL_MixAudio[0]
EndFunc

Func SDL_MixAudioFormat($dst,$src,$mat,$len,$vol)
   Local $xSDL_MixAudioFormat = DllCall($SDL,"none:cdecl","SDL_MixAudioFormat","ptr",$dst,"ptr",$src,"ptr",$mat,"uint",$len,"int",$vol)
   Return $xSDL_MixAudioFormat[0]
EndFunc

Func SDL_OpenAudio($des,$obt)
   Local $xSDL_OpenAudio = DllCall($SDL,"int:cdecl","SDL_OpenAudio","ptr",$des,"ptr",$obt)
   Return $xSDL_OpenAudio[0]
EndFunc

Func SDL_OpenAudioDevice($dev,$iscap,$des,$obt,$all)
   Local $xSDL_OpenAudioDevice = DllCall($SDL,"ptr:cdecl","SDL_OpenAudioDevice","ptr",$dev,"int",$iscap,"ptr",$des,"ptr",$obt,"int",$all)
   Return $xSDL_OpenAudioDevice[0]
EndFunc

Func SDL_PauseAudio($pau)
   Local $xSDL_PauseAudio = DllCall($SDL,"none:cdecl","SDL_PauseAudio","int",$pau)
   Return $xSDL_PauseAudio[0]
EndFunc

Func SDL_PauseAudioDevice($dev,$pau)
   Local $xSDL_PauseAudioDevice = DllCall($SDL,"none:cdecl","SDL_PauseAudioDevice","ptr",$dev,"int",$pau)
   Return $xSDL_PauseAudioDevice[0]
EndFunc

Func SDL_QueueAudio($dev,$dat,$len)
   Local $xSDL_QueueAudio = DllCall($SDL,"int:cdecl","SDL_QueueAudio","ptr",$dev,"ptr",$dat,"int",$len)
   Return $xSDL_QueueAudio[0]
EndFunc

Func SDL_UnlockAudio()
   Local $xSDL_UnlockAudio = DllCall($SDL,"none:cdecl","SDL_UnlockAudio")
   Return $xSDL_UnlockAudio[0]
EndFunc

Func SDL_UnlockAudioDevice($dev)
   Local $xSDL_UnlockAudioDevice = DllCall($SDL,"none:cdecl","SDL_UnlockAudioDevice","ptr",$dev)
   Return $xSDL_UnlockAudioDevice[0]
EndFunc

;Audiostream Functions

Func SDL_NewAudioStream($p,$ui,$i,$p2,$ui2,$p3,$i2)
   Local $xSDL_NewAudioStream = DllCall($SDL,"ptr:cdecl","SDL_NewAudioStream","ptr",$p,"uint",$ui,"int",$i,"ptr",$p2,"uint",$ui2,"ptr",$p3,"int",$i2)
   Return $xSDL_NewAudioStream[0]
EndFunc

Func SDL_AudioStreamPut($p,$p2,$i)
   Local $xSDL_AudioStreamPut = DllCall($SDL,"int:cdecl","SDL_AudioStreamPut","ptr",$p,"ptr",$p2,"int",$i)
   Return $xSDL_AudioStreamPut[0]
EndFunc

Func SDL_AudioStreamGet($p,$p2,$i)
   Local $xSDL_AudioStreamGet = DllCall($SDL,"int:cdecl","SDL_AudioStreamGet","ptr",$p,"ptr",$p2,"int",$i)
   Return $xSDL_AudioStreamGet[0]
EndFunc

Func SDL_AudioStreamAvailable($p)
   Local $xSDL_AudioStreamAvailable = DllCall($SDL,"int:cdecl","SDL_AudioStreamAvailable","ptr",$p)
   Return $xSDL_AudioStreamAvailable[0]
EndFunc

Func SDL_AudioStreamFlush($p)
   Local $xSDL_AudioStreamFlush = DllCall($SDL,"int:cdecl","SDL_AudioStreamFlush","ptr",$p)
   Return $xSDL_AudioStreamFlush[0]
EndFunc

Func SDL_AudioStreamClear($p)
   Local $xSDL_AudioStreamClear = DllCall($SDL,"none:cdecl","SDL_AudioStreamClear","ptr",$p)
EndFunc

Func SDL_FreeAudioStream($p)
   Local $xSDL_FreeAudioStream = DllCall($SDL,"none:cdecl","SDL_FreeAudioStream","ptr",$p)
EndFunc

;SDL Memory Functions

Func SDL_GetMemoryFunctions($p,$p2,$p3,$p4)
   Local $xSDL_GetMemoryFunctions = DllCall($SDL,"none:cdecl","SDL_GetMemoryFunctions","ptr",$p,"ptr",$p2,"ptr",$p3,"ptr",$p4)
EndFunc

Func SDL_SetMemoryFunctions($p,$p2,$p3,$p4)
   Local $xSDL_SetMemoryFunctions = DllCall($SDL,"int:cdecl","SDL_SetMemoryFunctions","ptr",$p,"ptr",$p2,"ptr",$p3,"ptr",$p4)
   Return $xSDL_SetMemoryFunctions[0]
EndFunc

Func SDL_GetNumAllocations()
   Local $xSDL_GetNumAllocations = DllCall($SDL,"int:cdecl","SDL_GetNumAllocations")
   Return $xSDL_GetNumAllocations[0]
EndFunc

Func SDL_getenv($p)
   Local $xSDL_getenv = DllCall($SDL,"ptr:cdecl","SDL_getenv","ptr",$p)
   Return $xSDL_getenv[0]
EndFunc

Func SDL_setenv($p,$p2,$i)
   Local $xSDL_setenv = DllCall($SDL,"int:cdecl","SDL_setenv","ptr",$p,"ptr",$p2,"int",$i)
   Return $xSDL_setenv[0]
EndFunc

;Thread functions
Func SDL_CreateThread($fn,$nam,$dat)
   Local $xSDL_CreateThread = DllCall($SDL,"ptr:cdecl","SDL_CreateThread","ptr",$fn,"str",$nam,"ptr",$dar)
   Return $xSDL_CreateThread[0]
EndFunc

Func SDL_DetachThread($thr)
   Local $xSDL_DetachThread = DllCall($SDL,"none:cdecl","SDL_DetachThread","ptr",$thr)
   Return $xSDL_DetachThread[0]
EndFunc

Func SDL_GetThreadID($thr)
   Local $xSDL_GetThreadID = DllCall($SDL,"ptr:cdecl","SDL_GetThreadID","ptr",$thr)
   Return $xSDL_GetThreadID[0]
EndFunc

Func SDL_GetThreadName($thr)
   Local $xSDL_GetThreadName = DllCall($SDL,"ptr:cdecl","SDL_GetThreadName","ptr",$thr)
   Return $xSDL_GetThreadName[0]
EndFunc

Func SDL_SetThreadPriority($pri)
   Local $xSDL_SetThreadPriority = DllCall($SDL,"int:cdecl","SDL_SetThreadPriority","ptr",$pri)
   Return $xSDL_SetThreadPriority[0]
EndFunc

Func SDL_TLSCreate()
   Local $xSDL_TLSCreate = DllCall($SDL,"ptr:cdecl","SDL_TLSCreate")
   Return $xSDL_TLSCreate[0]
EndFunc

Func SDL_TLSGet($id)
   Local $xSDL_TLSGet = DllCall($SDL,"ptr:cdecl","SDL_TLSGet","ptr",$id)
   Return $xSDL_TLSGet[0]
EndFunc

Func SDL_TLSSet($id,$val,$des)
   Local $xSDL_TLSSet = DllCall($SDL,"int:cdecl","SDL_TLSSet","ptr",$id,"ptr",$val,"ptr",$des)
   Return $xSDL_TLSSet[0]
EndFunc

Func SDL_ThreadID()
   Local $xSDL_ThreadID = DllCall($SDL,"ptr:cdecl","SDL_ThreadID")
   Return $xSDL_ThreadID[0]
EndFunc

Func SDL_WaitThread($thr,$st)
   Local $xSDL_WaitThread = DllCall($SDL,"none:cdecl","SDL_WaitThread","ptr",$thr,"ptr",$st)
   Return $xSDL_WaitThread[0]
EndFunc

;Mutex functions
Func SDL_CondBroadcast($con)
   Local $xSDL_CondBroadcast = DllCall($SDL,"int:cdecl","SDL_CondBroadcast","ptr",$con)
   Return $xSDL_CondBroadcast[0]
EndFunc

Func SDL_CondSignal($con)
   Local $xSDL_CondSignal = DllCall($SDL,"int:cdecl","SDL_CondSignal","ptr",$con)
   Return $xSDL_CondSignal[0]
EndFunc

Func SDL_CondWait($con,$mut)
   Local $xSDL_CondWait = DllCall($SDL,"int:cdecl","SDL_CondWait","ptr",$con,"ptr",$mut)
   Return $xSDL_CondWait[0]
EndFunc

Func SDL_CondWaitTimeout($con,$mut,$ms)
   Local $xSDL_CondWaitTimeout = DllCall($SDL,"int:cdecl","SDL_CondWaitTimeout","ptr",$con,"ptr",$mut,"uint",$ms)
   Return $xSDL_CondWaitTimeout[0]
EndFunc

Func SDL_CreateCond()
   Local $xSDL_CreateCond = DllCall($SDL,"ptr:cdecl","SDL_CreateCond")
   Return $xSDL_CreateCond[0]
EndFunc

Func SDL_CreateMutex()
   Local $xSDL_CreateMutex = DllCall($SDL,"ptr:cdecl","SDL_CreateMutex")
   Return $xSDL_CreateMutex[0]
EndFunc

Func SDL_CreateSemaphore($it)
   Local $xSDL_CreateSemaphore = DllCall($SDL,"ptr:cdecl","SDL_CreateSemaphore","uint",$it)
   Return $xSDL_CreateSemaphore[0]
EndFunc

Func SDL_DestroyCond($con)
   Local $xSDL_DestroyCond = DllCall($SDL,"none:cdecl","SDL_DestroyCond","ptr",$con)
   Return $xSDL_DestroyCond[0]
EndFunc

Func SDL_DestroyMutex($mut)
   Local $xSDL_DestroyMutex = DllCall($SDL,"none:cdecl","SDL_DestroyMutex","ptr",$mut)
   Return $xSDL_DestroyMutex[0]
EndFunc

Func SDL_DestroySemaphore($sem)
   Local $xSDL_DestroySemaphore = DllCall($SDL,"none:cdecl","SDL_DestroySemaphore","ptr",$sem)
   Return $xSDL_DestroySemaphore[0]
EndFunc

Func SDL_LockMutex($mut)
   Local $xSDL_LockMutex = DllCall($SDL,"int:cdecl","SDL_LockMutex","ptr",$mut)
   Return $xSDL_LockMutex[0]
EndFunc

Func SDL_SemPost($sem)
   Local $xSDL_SemPost = DllCall($SDL,"int:cdecl","SDL_SemPost","ptr",$sem)
   Return $xSDL_SemPost[0]
EndFunc

Func SDL_SemTryWait($sem)
   Local $xSDL_SemTryWait = DllCall($SDL,"int:cdecl","SDL_SemTryWait","ptr",$sem)
   Return $xSDL_SemTryWait[0]
EndFunc

Func SDL_SemValue($sem)
   Local $xSDL_SemValue = DllCall($SDL,"uint:cdecl","SDL_SemValue","ptr",$sem)
   Return $xSDL_SemValue[0]
EndFunc

Func SDL_SemWait($sem)
   Local $xSDL_SemWait = DllCall($SDL,"int:cdecl","SDL_SemWait","ptr",$sem)
   Return $xSDL_SemWait[0]
EndFunc

Func SDL_SemWaitTimeout($sem,$ms)
   Local $xSDL_SemWaitTimeout = DllCall($SDL,"int:cdecl","SDL_SemWaitTimeout","ptr",$sem,"uint",$ms)
   Return $xSDL_SemWaitTimeout[0]
EndFunc

Func SDL_TryLockMutex($mut)
   Local $xSDL_TryLockMutex = DllCall($SDL,"int:cdecl","SDL_TryLockMutex","ptr",$mut)
   Return $xSDL_TryLockMutex[0]
EndFunc

Func SDL_UnlockMutex($mut)
   Local $xSDL_UnlockMutex = DllCall($SDL,"int:cdecl","SDL_UnlockMutex","ptr",$mut)
   Return $xSDL_UnlockMutex[0]
EndFunc

;Atomic functions
Func SDL_AtomicAdd($a,$v)
   Local $xSDL_AtomicAdd = DllCall($SDL,"int:cdecl","SDL_AtomicAdd","ptr",$a,"int",$v)
   Return $xSDL_AtomicAdd[0]
EndFunc

Func SDL_AtomicCAS($a,$old,$new)
   Local $xSDL_AtomicCAS = DllCall($SDL,"bool:cdecl","SDL_AtomicCAS","ptr",$a,"int",$old,"int",$new)
   Return $xSDL_AtomicCAS[0]
EndFunc

Func SDL_AtomicCASPtr($a,$old,$new)
   Local $xSDL_AtomicCASPtr = DllCall($SDL,"bool:cdecl","SDL_AtomicCASPtr","ptr",$a,"ptr",$old,"ptr",$new)
   Return $xSDL_AtomicCASPtr[0]
EndFunc

Func SDL_AtomicDecRef($a)
   Local $xSDL_AtomicDecRef = DllCall($SDL,"bool:cdecl","SDL_AtomicDecRef","ptr",$a)
   Return $xSDL_AtomicDecRef[0]
EndFunc

Func SDL_AtomicGet($a)
   Local $xSDL_AtomicGet = DllCall($SDL,"int:cdecl","SDL_AtomicGet","ptr",$a)
   Return $xSDL_AtomicGet[0]
EndFunc

Func SDL_AtomicGetPtr($a)
   Local $xSDL_AtomicGetPtr = DllCall($SDL,"ptr:cdecl","SDL_AtomicGetPtr","ptr",$a)
   Return $xSDL_AtomicGetPtr[0]
EndFunc

Func SDL_AtomicIncRef($a)
   Local $xSDL_AtomicIncRef = DllCall($SDL,"none:cdecl","SDL_AtomicIncRef","ptr",$a)
   Return $xSDL_AtomicIncRef[0]
EndFunc

Func SDL_AtomicLock($lock)
   Local $xSDL_AtomicLock = DllCall($SDL,"none:cdecl","SDL_AtomicLock","ptr",$lock)
   Return $xSDL_AtomicLock[0]
EndFunc

Func SDL_AtomicSet($a,$v)
   Local $xSDL_AtomicSet = DllCall($SDL,"int:cdecl","SDL_AtomicSet","ptr",$a,"int",$v)
   Return $xSDL_AtomicSet[0]
EndFunc

Func SDL_AtomicSetPtr($a,$v)
   Local $xSDL_AtomicSetPtr = DllCall($SDL,"ptr:cdecl","SDL_AtomicSetPtr","ptr",$a,"ptr",$v)
   Return $xSDL_AtomicSetPtr[0]
EndFunc

Func SDL_AtomicTryLock($lock)
   Local $xSDL_AtomicTryLock = DllCall($SDL,"bool:cdecl","SDL_AtomicTryLock","ptr",$lock)
   Return $xSDL_AtomicTryLock[0]
EndFunc

Func SDL_AtomicUnlock($lock)
   Local $xSDL_AtomicUnlock = DllCall($SDL,"none:cdecl","SDL_AtomicUnlock","ptr",$lock)
   Return $xSDL_AtomicUnlock[0]
EndFunc

Func SDL_CompilerBarrier()
   Local $xSDL_CompilerBarrier = DllCall($SDL,"none:cdecl","SDL_CompilerBarrier")
   Return $xSDL_CompilerBarrier[0]
EndFunc

;FileSystem Path Functions
Func SDL_GetBasePath()
   Local $xSDL_GetBasePath = DllCall($SDL,"ptr:cdecl","SDL_GetBasePath")
   Return $xSDL_GetBasePath[0]
EndFunc

Func SDL_GetPrefPath($org,$app)
   Local $xSDL_GetPrefPath = DllCall($SDL,"ptr:cdecl","SDL_GetPrefPath","ptr",$org,"ptr",$app)
   Return $SDL_GetPrefPath[0]
EndFunc

;Shared Object Loading Functions
Func SDL_LoadFunction($han,$name)
   Local $xSDL_LoadFunction = DllCall($SDL,"ptr:cdecl","SDL_LoadFunction","ptr",$han,"str",$name)
   Return $xSDL_LoadFunction[0]
EndFunc

Func SDL_LoadObject($file)
   Local $xSDL_LoadObject = DllCall($SDL,"ptr:cdecl","SDL_LoadObject","str",$file)
   Return $xSDL_LoadObject[0]
EndFunc

Func SDL_UnloadObject($han)
   Local $xSDL_UnloadObject = DllCall($SDL,"none:cdecl","SDL_UnloadObject","ptr",$han)
   Return $xSDL_UnloadObject[0]
EndFunc

;Byte Order and Swapping Functions
Func SDL_Swap16($x)
   Local $xSDL_Swap16 = DllCall($SDL,"uint:cdecl","SDL_Swap16","uint",$x)
   Return $xSDL_Swap16[0]
EndFunc

Func SDL_Swap32($x)
   Local $xSDL_Swap32 = DllCall($SDL,"uint:cdecl","SDL_Swap32","unit",$x)
   Return $xSDL_Swap32[0]
EndFunc

Func SDL_Swap64($x)
   Local $xSDL_Swap64 = DllCall($SDL,"uint:cdecl","SDL_Swap64","uint",$x)
   Return $xSDL_Swap64[0]
EndFunc

Func SDL_SwapBE16($x)
   Local $xSDL_SwapBE16 = DllCall($SDL,"uint:cdecl","SDL_SwapBE16","uint",$x)
   Return $xSDL_SwapBE16[0]
EndFunc

Func SDL_SwapBE32($x)
   Local $xSDL_SwapBE32 = DllCall($SDL,"uint:cdecl","SDL_SwapBE32","uint",$x)
   Return $xSDL_SwapBE32[0]
EndFunc

Func SDL_SwapBE64($x)
   Local $xSDL_SwapBE64 = DllCall($SDL,"uint:cdecl","SDL_SwapBE64","uint",$x)
   Return $xSDL_SwapBE64[0]
EndFunc

Func SDL_SwapFloat($x)
   Local $xSDL_SwapFloat = DllCall($SDL,"float:cdecl","SDL_SwapFloat","float",$x)
   Return $xSDL_SwapFloat[0]
EndFunc

Func SDL_SwapFloatBE($x)
   Local $xSDL_SwapFloatBE = DllCall($SDL,"float:cdecl","SDL_SwapFloatBE","float",$x)
   Return $xSDL_SwapFloatBE[0]
EndFunc

Func SDL_SwapFloatLE($x)
   Local $xSDL_SwapFloatLE = DllCall($SDL,"float:cdecl","SDL_SwapFloatLE","float",$x)
   Return $xSDL_SwapFloatLE[0]
EndFunc

Func SDL_SwapLE16($x)
   Local $xSDL_SwapLE16 = DllCall($SDL,"uint:cdecl","SDL_SwapLE16","uint",$x)
   Return $xSDL_SwapLE16[0]
EndFunc

Func SDL_SwapLE32($x)
   Local $xSDL_SwapLE32 = DllCall($SDL,"uint:cdecl","SDL_SwapLE32","uint",$x)
   Return $xSDL_SwapLE32[0]
EndFunc

Func SDL_SwapLE64($x)
   Local $xSDL_SwapLE64 = DllCall($SDL,"uint:cdecl","SDL_SwapLE64","uint",$x)
   Return $xSDL_SwapLE64[0]
EndFunc

;Bit Manipulation Function
Func SDL_MostSignificantBitIndex32($x)
   Local $xSDL_MSBI32 = DllCall($SDL,"int:cdecl","SDL_MostSignificantBitIndex32","uint",$x)
   Return $xSDL_MSBI32[0]
EndFunc

;Power Manage Function
Func SDL_GetPowerInfo($sec,$pct)
   Local $xSDL_GetPowerInfo = DllCall($SDL,"ptr:cdecl","SDL_GetPowerInfo","ptr",$sec,"ptr",$pct)
   Return $xSDL_GetPowerInfo[0]
EndFunc

;Platform Specific Functions
Func SDL_AndroidGetActivity()
   Local $xSDL_AndroidGetActivity = DllCall($SDL,"ptr:cdecl","SDL_AndroidGetActivity")
   Return $xSDL_AndroidGetActivity[0]
EndFunc

Func SDL_AndroidGetExternalStoragePath()
   Local $xSDL_AGESP = DllCall($SDL,"str:cdecl","SDL_AndroidGetExternalStoragePath")
   Return $xSDL_AGESP[0]
EndFunc

Func SDL_AndroidGetExternalStorageState()
   Local $xSDL_AGESS = DllCall($SDL,"int:cdecl","SDL_AndroidGetExternalStorageState")
   Return $xSDL_AGESS[0]
EndFunc

Func SDL_AndroidGetInternalStoragePath()
   Local $xSDL_AGISP = DllCall($SDL,"str:cdecl","SDL_AndroidGetInternalStoragePath")
   Return $xSDL_AGISP[0]
EndFunc

Func SDL_AndroidGetJNIEnv()
   Local $xSDL_AGJE = DllCall($SDL,"ptr:cdecl","SDL_AndroidGetJNIEnv")
   Return $xSDL_AGJE[0]
EndFunc

Func SDL_DXGIGetOutputInfo($dis,$adp,$out)
   Local $xSDL_DGOI = DllCall($SDL,"bool:cdecl","SDL_DXGIGetOutputInfo","int",$dis,"ptr",$adp,"ptr",$out)
   Return $xSDL_DGOI[0]
EndFunc

Func SDL_Direct3D9GetAdapterIndex($dis)
   Local $xSDL_D3GAI = DllCall($SDL,"int:cdecl","SDL_Direct3D9GetAdapterIndex","int",$dis)
   Return $xSDL_D3GAI[0]
EndFunc

Func SDL_RenderGetD3D9Device($ren)
   Local $xSDL_RGDD = DllCall($SDL,"ptr:cdecl","SDL_RenderGetD3D9Device","ptr",$ren)
   Return $xSDL_RGDD[0]
EndFunc

Func SDL_SetWindowMessageHook($msg,$dat)
   Local $xSDL_SWMH = DllCall($SDL,"none:cdecl","SDL_SetWindowMessageHook","ptr",$msg,"ptr",$dat)
   Return $xSDL_SWMH[0]
EndFunc

Func SDL_WinRTGetFSPathUNICODE($path)
   Local $xSDL_WRGFPU = DllCall($SDL,"wchar:cdecl","SDL_WinRTGetFSPathUNICODE","str",$path)
   Return $xSDL_WRGFPU[0]
EndFunc

Func SDL_WinRTGetFSPathUTF8($path)
   Local $xSDL_WRGFPU = DllCall($SDL,"str:cdecl","SDL_WinRTGetFSPathUTF8","str",$path)
   Return $xSDL_WRGFPU[0]
EndFunc

Func SDL_iPhoneSetAnimationCallback($win,$int,$cb,$cb2)
   Local $xSDL_iPSAC = DllCall($SDL,"int:cdecl","SDL_iPhoneSetAnimationCallback","ptr",$win,"int",$int,"ptr",$cb,"ptr",$cb2)
   Return $xSDL_iPSAC[0]
EndFunc

Func SDL_iPhoneSetEventPump($enable)
   Local $xSDL_iPSEP = DllCall($SDL,"none:cdecl","SDL_iPhoneSetEventPump","bool",$enable)
   Return $xSDL_iPSEP[0]
EndFunc

;SDL STD Functions
Func SDL_acos($x)
   Local $xSDL_acos = DllCall($SDL,"double:cdecl","SDL_acos","double",$x)
   Return $xSDL_acos[0]
EndFunc

Func SDL_acosf($x)
   Local $xSDL_acosf = DllCall($SDL,"float:cdecl","SDL_acosf","float",$x)
   Return $xSDL_acosf[0]
EndFunc

Func SDL_asin($x)
   Local $xSDL_asin = DllCall($SDL,"double:cdecl","SDL_asin","double",$x)
   Return $xSDL_asin[0]
EndFunc

Func SDL_asinf($x)
   Local $xSDL_asinf = DllCall($SDL,"float:cdecl","SDL_asinf","float",$x)
   Return $xSDL_asinf[0]
EndFunc

Func SDL_atan($x)
   Local $xSDL_atan = DllCall($SDL,"double:cdecl","SDL_atan","double",$x)
   Return $xSDL_atan[0]
EndFunc

Func SDL_atanf($x)
   Local $xSDL_atanf = DllCall($SDL,"float:cdecl","SDL_atanf","float",$x)
   Return $xSDL_atanf[0]
EndFunc

Func SDL_atan2($x,$y)
   Local $xSDL_atan2 = DllCall($SDL,"double:cdecl","double",$x,"double",$y)
   Return $xSDL_atan2[0]
EndFunc

Func SDL_atan2f($x,$y)
   Local $xSDL_atan2f = DllCall($SDL,"float:cdecl","float",$x,"float",$y)
   Return $xSDL_atan2f[0]
EndFunc

Func SDL_ceil($x)
   Local $xSDL_ceil = DllCall($SDL,"double:cdecl","SDL_ceil","double",$x)
   Return $xSDL_ceil[0]
EndFunc

Func SDL_ceilf($x)
   Local $xSDL_ceilf = DllCall($SDL,"float:cdecl","SDL_ceilf","float",$x)
   Return $xSDL_ceilf[0]
EndFunc

Func SDL_copysign($x,$y)
   Local $xSDL_copysign = DllCall($SDL,"double:cdecl","SDL_copysign","double",$x,"double",$y)
   Return $xSDL_copysign[0]
EndFunc

Func SDL_copysignf($x,$y)
   Local $xSDL_copysignf = DllCall($SDL,"float:cdecl","SDL_copysignf","float",$x,"float",$y)
   Return $xSDL_copysignf[0]
EndFunc

Func SDL_cos($x)
   Local $xSDL_cos = DllCall($SDL,"double:cdecl","SDL_cos","double",$x)
   Return $xSDL_cos[0]
EndFunc

Func SDL_cosf($x)
   Local $xSDL_cosf = DllCall($SDL,"float:cdecl","SDL_cosf","float",$x)
   Return $xSDL_cosf[0]
EndFunc

Func SDL_fabs($x)
   Local $xSDL_fabs = DllCall($SDL,"double:cdecl","SDL_fabs","double",$x)
   Return $xSDL_fabs[0]
EndFunc

Func SDL_fabsf($x)
   Local $xSDL_fabsf = DllCall($SDL,"float:cdecl","SDL_fabsf","float",$x)
   Return $xSDL_fabsf[0]
EndFunc

Func SDL_floor($x)
   Local $xSDL_floor = DllCall($SDL,"double:cdecl","SDL_floor","double",$x)
   Return $xSDL_floor[0]
EndFunc

Func SDL_floorf($x)
   Local $xSDL_floorf = DllCall($SDL,"float:cdecl","SDL_floorf","float",$x)
   Return $xSDL_floorf[0]
EndFunc

Func SDL_mod($x,$y)
   Local $xSDL_mod = DllCall($SDL,"double:cdecl","SDL_mod","double",$x,"double",$y)
   Return $xSDL_mod[0]
EndFunc

Func SDL_modf($x,$y)
   Local $xSDL_modf = DllCall($SDL,"float:cdecl","SDL_modf","float",$x,"float",$y)
   Return $xSDL_modf[0]
EndFunc

;Dulicate?
;Func SDL_log($x)
 ;  Local $xSDL_log = DllCall($SDL,"double:cdecl","SDL_log","double",$x)
  ; Return $xSDL_log[0]
;EndFunc

Func SDL_logf($x)
   Local $xSDL_logf = DllCall($SDL,"float:cdecl","SDL_logf","float",$x)
   Return $xSDL_logf[0]
EndFunc

Func SDL_log10($x)
   Local $xSDL_log10 = DllCall($SDL,"double:cdecl","SDL_log10","double",$x)
   Return $xSDL_log10[0]
EndFunc

Func SDL_log10f($x)
   Local $xSDL_Log10f = DllCall($SDL,"float:cdecl","SDL_log10f","float",$x)
   Return $xSDL_Log10f[0]
EndFunc

Func SDL_pow($x,$y)
   Local $xSDL_pow = DllCall($SDL,"double:cdecl","SDL_pow","double",$x,"double",$y)
   Return $xSDL_pow[0]
EndFunc

Func SDL_powf($x,$y)
   Local $xSDL_powf = DllCall($SDL,"float:cdecl","SDL_powf","float",$x,"float",$y)
   Return $xSDL_powf[0]
EndFunc

Func SDL_scalbn($x,$y)
   Local $xSDL_scalbn = DllCall($SDL,"double:cdecl","SDL_scalbn","double",$x,"int",$y)
   Return $xSDL_scalbn[0]
EndFunc

Func SDL_scalbnf($x,$y)
   Local $xSDL_scalbnf = DllCall($SDL,"float:cdecl","SDL_scalbnf","float",$x,"int",$y)
   Return $xSDL_scalbnf[0]
EndFunc

Func SDL_sin($x)
   Local $xSDL_sin = DllCall($SDL,"double:cdecl","SDL_sin","double",$x)
   Return $xSDL_sin[0]
EndFunc

Func SDL_sinf($x)
   Local $xSDL_sinf = DllCall($SDL,"float:cdecl","SDL_sinf","float",$x)
   Return $xSDL_sinf[0]
EndFunc

Func SDL_sqrt($x)
   Local $xSDL_sqrt = DllCall($SDL,"double:cdecl","SDL_sqrt","double",$x)
   Return $xSDL_sqrt[0]
EndFunc

Func SDL_sqrtf($x)
   Local $xSDL_sqrtf = DllCall($SDL,"float:cdecl","SDL_sqrtf","float",$x)
   Return $xSDL_sqrtf[0]
EndFunc

Func SDL_tan($x)
   Local $xSDL_tan = DllCall($SDL,"double:cdecl","SDL_tan","double",$x)
   Return $xSDL_tan[0]
EndFunc

Func SDL_tanf($x)
   Local $xSDL_tanf = DllCall($SDL,"float:cdecl","SDL_tanf","float",$x)
   Return $xSDL_tanf[0]
EndFunc

;Timer Functions
Func SDL_AddTimer($i,$cb,$par)
   Local $xSDL_AddTimer = DllCall($SDL,"ptr:cdecl","SDL_AddTimer","uint",$i,"ptr",$cb,"ptr",$par)
   Return $xSDL_AddTimer[0]
EndFunc

Func SDL_Delay($ms)
   Local $xSDL_Delay = DllCall($SDL,"none:cdecl","SDL_Delay","uint",$ms)
    If @error Then Return SetError(1, @error, -1)
   Return $xSDL_Delay[0]
EndFunc

Func SDL_GetPerformanceCounter()
   Local $xSDL_GetPerformanceCounter = DllCall($SDL,"uint:cdecl","SDL_GetPerformanceCounter")
   Return $xSDL_GetPerformanceCounter[0]
EndFunc

Func SDL_GetPerformanceFrequency()
   Local $xSDL_GetPerformanceFrequency = DllCall($SDL,"uint:cdecl","SDL_GetPerformanceFrequency")
   Return $xSDL_GetPerformanceFrequency[0]
EndFunc

Func SDL_GetTicks()
   Local $xSDL_GetTicks = DllCall($SDL,"uint:cdecl","SDL_GetTicks")
   Return $xSDL_GetTicks[0]
EndFunc

Func SDL_RemoveTimer($id)
   Local $xSDL_RemoveTimer = DllCall($SDL,"bool:cdecl","SDL_RemoveTimer","ptr",$id)
   Return $xSDL_RemoveTimer[0]
EndFunc

Func SDL_TICKS_PASSED($a,$b)
   Local $xSDL_TICKS_PASSED = DllCall($SDL,"none:cdecl","SDL_TICKS_PASSED","ptr",$a,"ptr",$b)
   Return $xSDL_TICKS_PASSED[0]
EndFunc

;Get Platform
Func SDL_GetPlatform()
   Local $xSDL_GetPlatform = DllCall($SDL,"ptr:cdecl","SDL_GetPlatform")
   Return $xSDL_GetPlatform[0]
EndFunc

;CPU Functions
Func SDL_GetCPUCacheLineSize()
   Local $xSDL_GetCPUCacheLineSize = DllCall($SDL,"int:cdecl","SDL_GetCPUCacheLineSize")
   Return $xSDL_GetCPUCacheLineSize[0]
EndFunc

Func SDL_GetCPUCount()
   Local $xSDL_GetCPUCount = DllCall($SDL,"int:cdecl","SDL_GetCPUCount")
   If @error Then Return SetError(1, @error, -1)

  ;ConsoleWrite(StringFormat("CPUs: %i", $xSDL_GetCPUCount[0]) & @CRLF)
  Return $xSDL_GetCPUCount[0]
EndFunc

Func SDL_GetSystemRAM()
   Local $xSDL_GetSystemRAM = DllCall($SDL,"int:cdecl","SDL_GetSystemRAM")
   ;ConsoleWrite(StringFormat("RAM: %i", $xSDL_GetSystemRAM[0]) & @CRLF)
   If @error Then Return SetError(1, @error, -1)
   Return $xSDL_GetSystemRAM[0]
EndFunc

Func SDL_Has3DNow()
   Local $xSDL_Has3DNow = DllCall($SDL,"bool:cdecl","SDL_Has3DNow")
   Return $xSDL_Has3DNow[0]
EndFunc

Func SDL_HasAVX()
   Local $xSDL_HasAVX = DllCall($SDL,"bool:cdecl","SDL_HasAVX")
   Return $xSDL_HasAVX[0]
EndFunc

Func SDL_HasAVX2()
   Local $xSDL_HasAVX = DllCall($SDL,"bool:cdecl","SDL_HasAVX2")
   Return $xSDL_HasAVX[0]
EndFunc

Func SDL_HasAliVec()
   Local $xSDL_HasAltiVec = DllCall($SDL,"bool:cdecl","SDL_HasAltiVec")
   Return $xSDL_HasAltiVec[0]
EndFunc

Func SDL_HasMMX()
   Local $xSDL_HasMMX = DllCall($SDL,"bool:cdecl","SDL_HasMMX")
   Return $xSDL_HasMMX[0]
EndFunc

Func SDL_HasRDTSC()
   Local $xSDL_HasRDTSC = DllCall($SDL,"bool:cdecl","SDL_HasRDTSC")
   Return $xSDL_HasRDTSC[0]
EndFunc

Func SDL_HasSSE()
   Local $xSDL_HasSSE = DllCall($SDL,"bool:cdecl","SDL_HasSSE")
   Return $xSDL_HasSSE[0]
EndFunc

Func SDL_HasSSE2()
   Local $xSDL_HasSSE2 = DllCall($SDL,"bool:cdecl","SDL_HasSSE2")
   Return $xSDL_HasSSE2[0]
EndFunc

Func SDL_HasSSE3()
   Local $xSDL_HasSSE3 = DllCall($SDL,"bool:cdecl","SDL_HasSSE3")
   Return $xSDL_HasSSE3[0]
EndFunc

Func SDL_HasSSE41()
   Local $xSDL_HasSSE41 = DllCall($SDL,"bool:cdecl","SDL_HasSSE41")
   Return $xSDL_HasSSE41[0]
EndFunc

Func SDL_HasSSE42()
   Local $xSDL_HasSSE42 = DllCall($SDL,"bool:cdecl","SDL_HasSSE42")
   Return $xSDL_HasSSE42[0]
EndFunc

Func SDL_HasNEON()
   Local $xSDL_HasNEON = DllCall($SDL,"bool:cdecl","SDL_HasNEON")
   Return $xSDL_HasNEON[0]
EndFunc

Func SDL_HasAVX512F()
   Local $xSDL_HasAVX512F = DllCall($SDL,"bool:cdecl","SDL_HasAVX512F")
   Return $xSDL_HasAVXF512[0]
EndFunc

Func SDL_IsTablet()
   Local $xSDL_IsTablet = DllCall($SDL,"bool:cdecl","SDL_IsTablet")
   Return $xSDL_IsTablet[0]
EndFunc

Func SDL_HasARMSIMD()
   Local $xSDL_HasARMSIMD = DllCall($SDL,"bool:cdecl","SDL_HasARMSIMD")
   Return $xSDL_HasARMSIMD[0]
EndFunc

;Sensor functions

Func SDL_NumSensors()
   Local $xSDL_NumSensors = DllCall($SDL,"int:cdecl","SDL_NumSensors")
   Return $xSDL_NumSensors[0]
EndFunc

Func SDL_SensorGetDeviceName($dev)
   Local $xSDL_SensorGetDeviceName = DllCall($SDL,"ptr:cdecl","SDL_SensorGetDeviceName","int",$dev)
   Return $xSDL_SensorGetDeviceName[0]
EndFunc

Func SDL_SensorGetDeviceType($dev)
   Local $xSDL_SensorGetDeviceType = DllCall($SDL,"ptr:cdecl","SDL_SensorGetDeviceType","int",$dev)
   Return $xSDL_SensorGetDeviceType[0]
EndFunc

Func SDL_SensorGetDeviceNonPortableType($dev)
   Local $xSDL_SensorGetDeviceNonPortableType = DllCall($SDL,"ptr:cdecl","SDL_SensorGetDeviceNonPortableType","int",$dev)
   Return $xSDL_SensorGetDeviceNonPortableType[0]
EndFunc

Func SDL_SensorGetDeviceInstanceID($dev)
   Local $xSDL_SensorGetDeviceInstanceID = DllCall($SDL,"ptr:cdecl","SDL_SensorGetDeviceInstanceID","int",$dev)
   Return $xSDL_SensorGetDeviceInstanceID[0]
EndFunc

Func SDL_SensorOpen($dev)
   Local $xSDL_SensorOpen = DllCall($SDL,"ptr:cdecl","SDL_SensorOpen","int",$dev)
   Return $xSDL_SensorOpen[0]
EndFunc

Func SDL_SensorFromInstanceID($dev)
   Local $xSDL_SensorFromInstanceID = DllCall($SDL,"ptr:cdecl","SDL_SensorFromInstanceID","ptr",$dev)
   Return $xSDL_SensorFromInstanceID[0]
EndFunc

Func SDL_SensorGetName($dev)
   Local $xSDL_SensorGetName = DllCall($SDL,"ptr:cdecl","SDL_SensorGetName","ptr",$dev)
   Return $xSDL_SensorGetName[0]
EndFunc

Func SDL_SensorGetType($dev)
   Local $xSDL_SensorGetType = DllCall($SDL,"ptr:cdecl","SDL_SensorGetType","ptr",$dev)
   Return $xSDL_SensorGetType[0]
EndFunc

Func SDL_SensorGetNonPortableType($dev)
   Local $xSDL_SensorGetNonPortableType = DllCall($SDL,"ptr:cdecl","SDL_SensorGetNonPortableType","ptr",$dev)
   Return $xSDL_SensorGetNonPortableType[0]
EndFunc

Func SDL_SensorGetInstanceID($dev)
   Local $xSDL_SensorGetInstanceID = DllCall($SDL,"ptr:cdecl","SDL_SensorGetInstanceID","ptr",$dev)
   Return $xSDL_SensorGetInstanceID[0]
EndFunc

Func SDL_SensorGetData($dev,$dev2,$dev3)
   Local $xSDL_SensorGetData = DllCall($SDL,"ptr:cdecl","SDL_SensorGetData","ptr",$dev,"ptr",$dev2,"float",$dev3)
   Return $xSDL_SensorGetData[0]
EndFunc

Func SDL_SensorClose()
   Local $xSDL_SensorClose = DllCall($SDL,"ptr:cdecl","SDL_SensorClose")
   Return $xSDL_SensorClose[0]
EndFunc

Func SDL_SensorUpdate()
   Local $xSDL_SensorUpdate = DllCall($SDL,"ptr:cdecl","SDL_SensorUpdate")
   Return $xSDL_SensorUpdate[0]
EndFunc

;SDL 2.0.16 Functions
Func SDL_FlashWindow($win,$op)
   Local $xSDL_FlashWindow = DllCall($SDL,"ptr:cdecl","SDL_FlashWindow","ptr",$win,"uint",$op)
   Return $xSDL_FlashWindow[0]
EndFunc

Func SDL_GetAudioDeviceSpec($id,$iscap,$spec)
   Local $xSDL_GetAudioDeviceSpec = DllCall($SDL,"ptr:cdecl","SDL_GetAudioDeviceSpec","int",$id,"int",$iscap,"ptr",$spec)
   Return $xSDL_GetAudioDeviceSpec[0]
EndFunc

Func SDL_SetWindowAlwaysOnTop($win,$on)
   Local $xSDL_SetWindowAlwaysOnTop = DllCall($SDL,"none:cdecl","SDL_SetWindowAlwaysOnTop","ptr",$win,"bool",$on)
EndFunc

Func SDL_SetWindowKeyboardGrab($win,$grab)
   Local $xSDL_SetWindowKeyboardGrab = DllCall($SDL,"none:cdecl","SDL_SetWindowKeyboardGrab","ptr",$win,"bool",$grab)
EndFunc

Func SDL_SoftStretchLinear($src,$srcr,$dst,$dstr)
   Local $xSDL_SoftStretchLinear = DllCall($SDL,"int:cdecl","SDL_SoftStretchLinear","ptr",$src,"ptr",$srcr,"ptr",$dst,"ptr",$dstr)
   Return $xSDL_SoftStretchLinear[0]
EndFunc

Func SDL_UpdateNVTexture($tex,$rect,$ypl,$ypit,$upl,$upit)
   Local $xSDL_UpdateNVTexture = DllCall($SDL,"int:cdecl","SDL_UpdateNVTexture","ptr",$tex,"ptr",$rect,"ptr",$ypl,"int",$ypit,"int",$upl,"int",$upit)
   Return $xSDL_UpdateNVTexture[0]
EndFunc

Func SDL_RenderGetD3D11Device($ren)
   Local $xSDL_RenderGetD3D11Device = DllCall($SDL,"ptr:cdecl","SDL_RenderGetD3D11Device","ptr",$ren)
   Return $xSDL_RenderGetD3D11Device[0]
EndFunc

Func SDL_GameControllerSendEffect($gc,$dat,$size)
   Local $xSDL_GameControllerSendEffect = DllCall($SDL,"int:cdecl","SDL_GameControllerSendEffect","ptr",$gc,"ptr",$dat,"int",$size)
   Return $xSDL_GameControllerSendEffect[0]
EndFunc

Func SDL_GameControllerGetSensorDataRate($gc,$sen)
   Local $xSDL_GameControllerGetSensorDataRate = DllCall($SDL,"float:cdecl","SDL_GameControllerGetSensorDataRate","ptr",$gc,"uint",$sen)
   Return $xSDL_GameControllerGetSensorDataRate[0]
EndFunc

Func SDL_JoystickSendEffect($joy,$dat,$size)
   Local $xSDL_JoystickSendEffect = DllCall($SDL,"ptr:cdecl","SDL_JoystickSendEffect","ptr",$joy,"ptr",$dat,"int",$size)
   Return $xSDL_JoystickSendEffect[0]
EndFunc

;Cleanup
;DllClose($SDL)
